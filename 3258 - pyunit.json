{
  "script_id": "3258",
  "display_name": "pyunit",
  "summary": "Quick source/test switcher and unit test runner for Python",
  "name": "pyunit",
  "script_type": "ftplugin",
  "description": "Usage\n-----\n1. Open a Python file (or its corresponding unit test file named\n   ``test_<filename>.py``)\n2. Press ``<F8>`` to run ``nosetests`` on it\n\nIt shows the errors inside a quickfix window, which will allow your to\nquickly jump to the error locations by simply pressing ``[Enter]``.\n\n\nSource files vs. test files\n---------------------------\n``vim-pyunit`` assumes that you have a single test file for each Python\nsource file.  The settings ``PyUnitTestPrefix``, ``PyUnitSourceRoot``,\n``PyUnitTestsRoot``, and ``PyUnitTestsStructure`` determine how the plugin\nfinds which test files belong to which source files.\n\nThe ``PyUnitTestsStructure`` setting is the most important one, because it\ndetermines where the PyUnit plugin searches for source and test files.\nThere are three options:\n\n* **flat**: Put all test files in a single test directory.  File names are\n  composed by resembling the source's module structure, using underscores\n  as separators.  For example, the test file for the source file\n  ``foo/bar.py`` is called ``tests/test_foo_bar.py``.\n* **side-by-side**: Put all the test files in the same directory as the\n  source files.  Test files are prefixed with ``test_``.  For example, the\n  test file for the source file ``foo/bar.py`` is called\n  ``foo/test_bar.py``.  Use this setting when testing Django apps.\n* **follow-hierarchy**: Put all the test files in a separate test\n  directory (specified by ``PyUnitTestsRoot``), but keep the same\n  directory hierarchy as used in the source directory.\n  For example, the test file for the source file ``foo/bar.py`` is called\n  ``tests/test_foo/test_bar.py``.\n\n\nKeyboard mappings\n-----------------\nBy default, the ``vim-pyunit`` plugin defines the following keyboard\nmappings:\n\n+----------+------------------------------------------------------------+\n| Keymap   | Description                                                |\n+==========+============================================================+\n| F8       | Run ``nosetests`` for the current file. This mapping can   |\n|          | be used on both the source file, and on its corresponding  |\n|          | test file. Calls ``PyUnitRunTests()``                      |\n+----------+------------------------------------------------------------+\n| Shift+F8 | Run ``nosetests`` for all test files in the project, this  |\n|          | is equivalent to running ``nosetests`` in the root of your |\n|          | project. Calls ``PyUnitRunAllTests()``                     |\n+----------+------------------------------------------------------------+\n| F9       | Switch between the source and the corresponding test file. |\n|          | If the source or test file is not yet open, it is opened.  |\n|          | The setting ``tests_split_window`` is used to determine    |\n|          | where the file needs to be opened screen-wise. Calls       |\n|          | ``PyUnitSwitchToCounterpart()``                            |\n+----------+------------------------------------------------------------+\n\nThe plugin autodetects whether you have remapped the functions to custom\nkeyboard mappings.  If so, if does not register the default mappings.  So\nto pick your own shortcut key mappings, simply add lines like this to your\n``.vimrc``::\n\n    noremap ,t :call PyUnitRunTests()<CR>\n    noremap! ,t <Esc>:call PyUnitRunTests()<CR>\n\n(Which would map the test runner to comma-T. ``<F8>`` then remains what it\nwas.)\n\nIf you wish to disable any automatic keyboard mapping, simply set::\n\n    let no_pyunit_maps = 1\n\n\nConfiguration\n-------------\nThe plugin supports setting of the following variables:\n\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| Variable                      | Description                                    | Values                    | Default                           |\n+===============================+================================================+===========================+===================================+\n| ``PyUnitShowTests``           | Shows the tests.                               | 0 or 1                    | 1                                 |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitCmd``                 | The command to run the unit test.              | any string                | \"nosetests -q --with-machineout\"  |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``ProjRootIndicators``        | List of filenames indicating the project root. | list of file names        | [\".git\", \"setup.py\", \"setup.cfg\"] |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``ProjRootStopAtHomeDir``     | Stop the search for the project root at the    | 0 or 1                    | 1                                 |\n|                               | user's home dir.                               |                           |                                   |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitTestPrefix``          | The filename prefix to use for test files.     | any string                | \"test\\_\"                          |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitTestSuffix``          | *Not implemented yet*                          | 0 or 1                    | n/a                               |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitSourceRoot``          | The relative location where all source files   | directory spec, or empty  | \"\"                                |\n|                               | live.                                          |                           |                                   |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitTestsRoot``           | The relative location where all tests live.    | directory spec            | \"tests\"                           |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitTestsStructure``      | Specifies how you wish to organise your tests. | flat, follow-hierarchy,   | \"follow-hierarchy\"                |\n|                               |                                                | side-by-side              |                                   |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitTestsSplitWindow``    | Specifies where test files should be opened,   | left, right, top, bottom, | \"right\"                           |\n|                               | when oopened next to the source file. When set | no                        |                                   |\n|                               | to ``no``, doesn't open a new window at all,   |                           |                                   |\n|                               | but reuses the current buffer.                 |                           |                                   |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n| ``PyUnitConfirmTestCreation`` | Ask to confirm creation of new test files.     | 0 or 1                    | 1                                 |\n+-------------------------------+------------------------------------------------+---------------------------+-----------------------------------+\n\n\nTips\n----\nThis plugin goes well together with the following plugins:\n\n- PEP8_ (Python coding style checker under ``<F6>``)\n- PyFlakes_ (Python static syntax checker under ``<F7>``)\n\n.. _PEP8: http://github.com/nvie/vim-pep8\n.. _PyFlakes: http://github.com/nvie/vim-pyflakes\n",
  "rating_total": "0",
  "rating_votes": "0",
  "downloads": "22",
  "install_details": "Installation\n------------\n1. Install the following packages from PyPI:\n\n   - nose_: the unit test runner;\n   - nose_machineout_:  The ``machineout`` plugin formats the ``nose`` output\n     so that Vim can parse it more easily;\n   - vim_bridge_:  This is required for the vim plugin scripts, to call\n     directly into Python functions.\n\n2. Clone the git repository::\n\n       git clone git://github.com/nvie/vim-pyunit.git\n       cd vim-pyunit\n\n3. Copy the file ``ftplugin/python_pyunit.vim`` to your ``~/.vim/ftplugin``\n   directory\n\n.. _nose: http://pypi.python.org/pypi/nose\n.. _nose_machineout: http://pypi.python.org/pypi/nose_machineout\n.. _vim_bridge: http://pypi.python.org/pypi/vim_bridge\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13944",
      "filename": "python_pyunit.vim",
      "script_version": "0.3",
      "date": "2010-09-27",
      "vim_version": "7.0",
      "author": {
        "user_id": "20529",
        "user_name": "nvie",
        "first_name": "Vincent",
        "last_name": "Driessen",
        "email": "vincent at datafox.nl",
        "homepage": "http://nvie.com"
      },
      "release_notes": "Initial upload"
    }
  ]
}
