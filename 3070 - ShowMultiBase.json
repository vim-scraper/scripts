{
  "script_id": "3070",
  "display_name": "ShowMultiBase",
  "summary": "Display a number in binary, octal, decimal and hexadecimal formats",
  "name": "ShowMultiBase",
  "script_type": "utility",
  "description": "This is a very simple script to display a number in all or some of binary, octal, decimal and hexadecimal formats at the same time.\n\nThere are several existing converter scripts available, which you might want to check:\n- vimscript #238 : Function to output a number as HEX\n- vimscript #1538 : Convert from base(2,8,10,16) to base(2-32). Also character to html entity.\n- vimscript #54 : Convert to/from various numeric bases\n\nThe motivation of this script is a bit different, however. I often have to read logfiles with hexdumps and numbers with altering bases. Therefore, I want to see the binary, decimal and hexadecimal representations at the same time to help easier reading of these logfiles and to avoid using an external calculator as much as possible. In addition, I wanted to have more control over how the numbers are displayed that I can reuse the displayed numbers in e.g. reports.\n\nE.g, with the default settings, executing the :ShowMultiBase command, while the cursor is on the number 1234, you'll have the following output: b0100 1101 0010 == 02322 == 1234 == 0x04d2\nIf the number is e.g. hexadecimal, you can override the autosensed base (10) with :ShowMultiBase 16\n\nThe conversion utility functions are also available, but if you need a general conversion function, I recommend using vimscript #54.\nThere are several display configurations (e.g: bases to show, prefix usage, segmentation etc.), for details see the comments in the script!\n\nSyntax: :ShowMultiBase [base [number]]\nIf 'number' is not specified, the number under the cursor is taken as input. If 'base' is not specified, it is autosensed. If 'number' is given, 'base' must be also given, but 0 may be used to autosense.\n\nThe following mappings are created by default:\n\\=   Display the number under the cursor with autosensed base in the configured bases\n\\b=  Display the binary number under the cursor in the configured bases\n\\o=  Display the octal number under the cursor in the configured bases\n\\d=  Display the decimal number under the cursor in the configured bases\n\\h=  Display the hexadecimal number under the cursor in the configured bases\n",
  "rating_total": "6",
  "rating_votes": "3",
  "downloads": "80",
  "install_details": "Copy showmultibase.vim to your plugin folder (see http://vimdoc.sourceforge.net/htmldoc/options.html#%27runtimepath%27 to find out about where it is located on your OS)!\nIf you do not need the default mappings, add the following in your vimrc file and define your choice: let g:ShowMultiBase_UseDefaultMappings = 0\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13710",
      "filename": "showmultibase.vim",
      "script_version": "0.2",
      "date": "2010-08-29",
      "vim_version": "7.0",
      "author": {
        "user_id": "19635",
        "user_name": "zacco",
        "first_name": "Lajos",
        "last_name": "Zaccomer",
        "email": "lajos at zaccomer.org",
        "homepage": "http://zaccomer.org"
      },
      "release_notes": "- Mun Johl reported problem with 32< bit numbers. Fixed with using float instead of number, so the handled range is considerably increased and limited only by VIM's float precision (see :help floating-point-precision).\n- Fixed removal of leading zero digits\n- Mandatory leading 1 in binary removed\n- Default binary display segment size changed from 4 to 8"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12884",
      "filename": "showmultibase.vim",
      "script_version": "0.1",
      "date": "2010-04-21",
      "vim_version": "6.0",
      "author": {
        "user_id": "19635",
        "user_name": "zacco",
        "first_name": "Lajos",
        "last_name": "Zaccomer",
        "email": "lajos at zaccomer.org",
        "homepage": "http://zaccomer.org"
      },
      "release_notes": "Initial upload"
    }
  ]
}
