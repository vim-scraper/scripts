{
  "script_id": "1265",
  "display_name": "IComplete",
  "summary": "IComplete is a C/C++/Java/C# code completion system using the omnifunc framework",
  "name": "IComplete",
  "script_type": "utility",
  "description": "There is a new vim plugin OmniCppComplete at:\nhttp://www.vim.org/scripts/script.php?script_id=1520\nIt works better, is easier to setup and is also better maintained, so please use that.\n\nIMPORTANT: I will NOT maintain icomplete in future anymore, if you are interested in improving it, please tell me, and you can take over maintainership.\n\n------------------------------------\n\n**** Features ****\n- Automatic generation of a tags file for the current source file by building a tree of included files. \n- Listing members (also inherited ones) of a class\n For QString s; s. only non-static members are suggested, for QString:: only static ones. \n- Listing all function signatures of overloading methods\n- Recognizes return values of methods.\nQWidget w; w.rect().topLeft(). // Lists completions for a QPoint \n- Uses the scope of the cursor position\n- Recognizes, if you are inside a method-definition and completes also private or protected variables for this class. For a global scope, only public members are suggested. \n- Works in both console and graphical vim\n- Uses a cache system for increased spead.\n- Understands namespaces\n- Automatic completions after . and ->\n\n------------------------------------\n\nQuick start: press <Ctrl-X><Ctrl-O> at any code position in insert mode.\n\nFor more usage information and screenshots or if you want to donate a little bit, then look at:\nhttp://icomplete.sourceforge.net\n",
  "rating_total": "119",
  "rating_votes": "41",
  "downloads": "3697",
  "install_details": "Make sure you have exuberant-ctags (from http://ctags.sourceforge.net) installed.\n\nAfter that unpack the .tar.bz2 tarball, an run these commands:\n\n        # ./configure\n        # make\n        # su\n        $ make install\n\nThis will install a command line program 'icomplete' to /usr/local/bin/icomplete and copies the actual vim scripts to\n/usr/share/vim/vimfiles/plugin/icomplete.vim\n/usr/share/vim/vimfiles/autoload/cppcomplete.vim\n\nIf you have vim installed in a different directory, look at the README in the package it explains, how to change these paths.\n\nIf it still does not work, try to put these lines in your ~/.vimrc:\n\nautocmd Filetype cpp,c,java,cs set omnifunc=cppcomplete#Complete\n\nMake sure you have a vim version with the autocmd feature enabled, which should be the case in most cases anyway.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7855",
      "filename": "icomplete-0.5.tar.bz2",
      "script_version": "0.5",
      "date": "2007-11-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "6743",
        "user_name": "MaxAuthority",
        "first_name": "Martin",
        "last_name": "Stubenschrott",
        "email": "stubenschrott at gmx.net",
        "homepage": ""
      },
      "release_notes": "        * IMPORTANT: Last and final release of icomplete, use OmniCppComplete in future\n        * autocompletion on . or -> (patch by Sanjaya Karunase)\n        * add ability to change name of .icomplete_taglist (Tim Murison)\n        * fixed some segfaults (thanks Johannes Winkelmann)\n        * cleaned up the doc\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5582",
      "filename": "icomplete-0.4.tar.bz2",
      "script_version": "0.4",
      "date": "2006-04-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "6743",
        "user_name": "MaxAuthority",
        "first_name": "Martin",
        "last_name": "Stubenschrott",
        "email": "stubenschrott at gmx.net",
        "homepage": ""
      },
      "release_notes": "Apr 19, 2006:\n\t* version 0.4\n\t* completely new namespace support (by Maxime Coste)\n\t* -t option to specify different tags filename (patch by Yuxuan Wang)\n\t* completely new #include file parser, fixes problem of macos which does not understand \\\\s codes in regexps\n\t* fixes segfault (replaced mmap with fread)\n\t* improved java support\n\t* including a shell script to create a java tags file for system classes\n\t* placeholders work for more than two arguments now (forgot the 'g' in the\n\tsubstitute command)\n\t* added sys/types.h in parse.h and tree.h which solves compiling under\n\tMacOS X\n"
    }
  ]
}
