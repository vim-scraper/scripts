{
  "script_id": "311",
  "display_name": "grep.vim",
  "summary": "Grep search tools integration with Vim",
  "name": "grep.vim",
  "script_type": "utility",
  "description": "Overview\n\nThe grep plugin integrates the grep, fgrep, egrep, and agrep tools with\nVim and allows you to search for a pattern in one or more files and jump\nto them.\n\nTo use this plugin, you need the grep, fgrep, egrep, agrep, find and\nxargs utilities. These tools are present in most of the Unix installations.\nFor MS-Windows systems, you can download the GNU grep and find utilities\nfrom the following sites:\n\n   http://gnuwin32.sourceforge.net/packages/grep.htm\n   http://gnuwin32.sourceforge.net/packages/findutils.htm\n\nUsage\n\nThe grep.vim plugin introduces the following Vim commands:\n\n:Grep          - Search for the specified pattern in the specified files\n:GrepAdd       - Same as \":Grep\" but adds the results to the current results\n:Rgrep         - Run recursive grep\n:RgrepAdd      - Same as \":Rgrep\" but adds the results to the current results\n:GrepBuffer    - Search for a pattern on all open buffers\n:GrepBufferAdd - Same as \":GrepBuffer\" but adds the results to the current\n                 results\n:Bgrep         - Same as :GrepBuffer\n:BgrepAdd      - Same as :GrepBufferAdd\n:GrepArgs      - Search for a pattern on all the Vim argument \n                 filenames (:args)\n:GrepArgsAdd   - Same as \":GrepArgs\" but adds the results to the current\n                 results\n:Fgrep         - Run fgrep\n:FgrepAdd      - Same as \":Fgrep\" but adds the results to the current\n                 results\n:Rfgrep        - Run recursive fgrep\n:RfgrepAdd     - Same as \":Rfgrep\" but adds the results to the current\n                 results\n:Egrep         - Run egrep\n:EgrepAdd      - Same as \":Egrep\" but adds the results to the current\n                 results\n:Regrep        - Run recursive egrep\n:RegrepAdd     - Same as \":Regrep\" but adds the results to the current\n                 results\n:Agrep         - Run agrep\n:AgrepAdd      - Same as \":Agrep\" but adds the results to the current\n                 results\n:Ragrep        - Run recursive agrep\n:RagrepAdd     - Same as \":Ragrep\" but adds the results to the current\n                 results\n\nThe above commands can be invoked like this:\n\n   :Grep   [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :Rgrep  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :Fgrep  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :Rfgrep [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :Egrep  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :Regrep [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :Agrep  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :Ragrep [<grep_options>] [<search_pattern> [<file_name(s)>]]\n\n   :GrepAdd   [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :RgrepAdd  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :FgrepAdd  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :RfgrepAdd [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :EgrepAdd  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :RegrepAdd [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :AgrepAdd  [<grep_options>] [<search_pattern> [<file_name(s)>]]\n   :RagrepAdd [<grep_options>] [<search_pattern> [<file_name(s)>]]\n\n   :GrepBuffer [<grep_options>] [<search_pattern>]\n   :Bgrep [<grep_options>] [<search_pattern>]\n   :GrepArgs [<grep_options>] [<search_pattern>]\n\n   :GrepBufferAdd [<grep_options>] [<search_pattern>]\n   :BgrepAdd [<grep_options>] [<search_pattern>]\n   :GrepArgsAdd [<grep_options>] [<search_pattern>]\n\nIn the above commands, all the arguments are optional.\n\nYou can specify grep options like -i (ignore case) or -w (search for a word)\nto the above commands.  If the <grep_options> are not specified, then the\ndefault grep options specified by the variable Grep_Default_Options is \nused.\n\nYou can specify the grep pattern to search as an argument to the above\ncommands.  If the <search_pattern> is not specified, then you will be\nprompted to enter a search pattern. By default, the keyword under the cursor\nis displayed for the search pattern prompt. You can accept the default or\nmodify it.\n\nThe search pattern is automatically enclosed by the character specified in\nthe Grep_Shell_Quote_Char variable. You should not enclose the search\npattern with a shell escape character.\n\nIf you want to specify a search pattern with space characters or a\nmulti-word pattern, then you should use the Grep command pattern input\nprompt to supply the pattern.\n\nYou can specify one or more file names (or file patterns) to the above\ncommands.  If the <file_names> are not specified, then you will be prompted\nto enter file names.  By default, the pattern specified by the\nGrep_Default_Filelist variable is used. To specify the file name(s) as an\nargument to the above commands, you have to specify the search pattern also.\n\nWhen you enter only the command name, you will be prompted to enter the\nsearch pattern and the files in which to search for the pattern. By default,\nthe keyword under the cursor is displayed for the search pattern prompt.\nDepending on the command, you may prompted for additional parameters like\nthe directories to search for the pattern.\n\nYou can retrieve previously entered values for the Grep prompts using the up\nand down arrow keys. You can cancel the command by pressing the escape key.\nYou can use CTRL-U to erase the default shown for the prompt and CTRL-W to\nerase the previous word in the prompt. For more information about editing\nthe prompt, read ':help cmdline-editing' Vim help topic.\n\nAfter invoking any of the grep commands, you can cancel the command, when\nyou are prompted for a search pattern or file names or a directory by\npressing the <Esc> key. You cannot cancel (or kill) the\ngrep/fgrep/egrep/agrep commands after the external command is invoked.\n\nThe GrepAdd, RgrepAdd and other *Add commands append the search output to\nthe current search output. This is useful if you want to see the search\nresults for multiple patterns at the same time. These commands are available\nonly in Vim version 7.0 and above.\n\nYou can map a key to invoke any of the above commands. For example, the\nfollowing map invokes the :Grep command to search for the keyword under the\ncursor:\n\n      nnoremap <silent> <F3> :Grep<CR>\n\nThe output of the grep command will be listed in the Vim quickfix window.\n1. You can select a line in the quickfix window and press <Enter> or double\n   click on a match to jump to that line.\n2. You can use the \":cnext\" and \":cprev\" commands to the jump to the next or\n   previous output line.\n3. You can use the \":colder\" and \":cnewer\" commands to go between multiple\n   grep quickfix output windows.\n4. The quickfix window need not be opened always to use the grep output.\n   You can close the quickfix window and use the quickfix commands to jump\n   to the grep matches.  Use the \":copen\" command to open the quickfix\n   window again.\n\nFor more information about other quickfix commands read \":help quickfix\"\n\nWhen using GUI Vim, the Tools->Search menu item with a few sub-menu items is\ncreated for few variations of the search command.\n\nConfiguration\n\nBy changing the following variables you can configure the behavior of this\nplugin. Set the following variables in your .vimrc file using the 'let'\ncommand.\n\nThe 'Grep_Path' variable is used to locate the grep utility. By default,\nthis is set to grep. You can change this using the let command:\n\n      :let Grep_Path = 'd:\\tools\\grep.exe'\n\nThe 'Fgrep_Path' variable is used to locate the fgrep utility. By default,\nthis is set to fgrep. You can change this using the let command:\n\n      :let Fgrep_Path = 'd:\\tools\\fgrep.exe'\n\nThe 'Egrep_Path' variable is used to locate the egrep utility. By default,\nthis is set to egrep. You can change this using the let command:\n\n      :let Egrep_Path = 'd:\\tools\\egrep.exe'\n\nThe 'Agrep_Path' variable is used to locate the agrep utility. By default,\nthis is set to agrep. You can change this using the let command:\n\n      :let Agrep_Path = 'd:\\tools\\agrep.exe'\n\nThe 'Grep_Find_Path' variable is used to locate the find utility. By\ndefault, this is set to d:\\tools\\find.exe. You can change this using the let\ncommand:\n\n      :let Grep_Find_Path = 'd:\\tools\\find.exe'\n\nThe 'Grep_Xargs_Path' variable is used to locate the xargs utility. By\ndefault, this is set to xargs. You can change this using the let\ncommand:\n\n      :let Grep_Xargs_Path = 'd:\\tools\\xargs.exe'\n\nWhen running any one of the Grep commands, you will be prompted for the\nfiles in which to search for the pattern. The 'Grep_Default_Filelist'\nvariable is used to specify to default for this prompt. By default, this\nvariable is set to '*'. You can specify multiple matching patterns separated\nby spaces. You can change this settings using the let command:\n\n      :let Grep_Default_Filelist = '*.[chS]'\n      :let Grep_Default_Filelist = '*.c *.cpp *.asm'\n\nThe 'Grep_Default_Options' is used to pass default command line options to\nthe grep/fgrep/egrep/agrep utilities. By default, this is set to an empty\nstring. You can change this using the let command:\n\n      :let Grep_Default_Options = '-i'\n\nThe 'Grep_Skip_Dirs' variable specifies the list of directories to skip\nwhile doing recursive searches. By default, this is set to 'RCS CVS SCCS'.\nYou can change this using the let command:\n\n      :let Grep_Skip_Dirs = 'dir1 dir2 dir3'\n\nThe 'Grep_Skip_Files' variable specifies the list of files to skip while\ndoing recursive searches. By default, this is set to '*~ *,v s.*'. You can\nchange this using the let command:\n\n      :let Grep_Skip_Files = '*.bak *~'\n\nBy default, when you invoke the Grep commands the quickfix window will be\nopened with the grep output.  You can disable opening the quickfix window,\nby setting the 'Grep_OpenQuickfixWindow' variable  to zero:\n\n      :let Grep_OpenQuickfixWindow = 0\n\nYou can manually open the quickfix window using the :cwindow command.\n\nBy default, for recursive searches, the 'find' and 'xargs' utilities are\nused.  If you don't have the 'xargs' utility or don't want to use the\n'xargs' utility, \" then you can set the 'Grep_Find_Use_Xargs' variable to\nzero. If this is set to zero, then only the 'find' utility is used for\nrecursive searches:\n\n      :let Grep_Find_Use_Xargs = 0\n\nTo handle file names with space characters in them, the xargs utility\nis invoked with the '--null' argument. If the xargs utility in your system\ndoesn't accept the '--null' argument, then you can change the\nGrep_Xargs_Options variable. For example, to use the '--print0' xargs\nargument, you can use the following command:\n\n\t:let Grep_Xargs_Options = '--print0'\n\nThe Grep_Cygwin_Find variable should be set to 1, if you are using the find\nutility from the cygwin package. This setting is used to handle the\ndifference between the backslash and forward slash path separators.\n\n      :let Grep_Cygwin_Find = 1\n\nThe 'Grep_Null_Device' variable specifies the name of the null device to\npass to the grep commands. This is needed to force the grep commands to\nprint the name of the file in which a match is found, if only one filename\nis specified. For Unix systems, this is set to /dev/null and for MS-Windows\nsystems, this is set to NUL. You can modify this by using the let command:\n\n      :let Grep_Null_Device = '/dev/null'\n\nThe 'Grep_Shell_Quote_Char' variable specifies the quote character to use\nfor protecting patterns from being interpreted by the shell. For Unix\nsystems, this is set to \"'\" and for MS-Window systems, this is set to an\nempty string.  You can change this using the let command:\n\n      :let Grep_Shell_Quote_Char = \"'\"\n\nThe 'Grep_Shell_Escape_Char' variable specifies the escape character to use\nfor protecting special characters from being interpreted by the shell.  For\nUnix systems, this is set to '&#039 and for MS-Window systems, this is set to\nan empty string.  You can change this using the let command:\n\n      :let Grep_Shell_Escape_Char = \"'\"\n",
  "rating_total": "777",
  "rating_votes": "263",
  "downloads": "17118",
  "install_details": "1. Copy the grep.vim file to the $HOME/.vim/plugin or $HOME/vimfiles/plugin\n   or $VIM/vimfiles/plugin directory. \n   Refer to the following Vim help topics for more information about Vim\n   plugins:\n      :help add-plugin\n      :help add-global-plugin\n      :help runtimepath\n2. If the grep executables are not already present in one of the directories\n   in the PATH environment variable, then set the Grep_Path and other _Path\n   variables to point to the location of the grep utilites in the .vimrc\n   file.\n3. Restart Vim.\n4. You can now use the \":Grep\" and other commands to search for patterns in\n   files.\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7645",
      "filename": "grep.vim",
      "script_version": "1.9",
      "date": "2007-09-10",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "New commands to add search results to the existing results.  New\nGrep_Xargs_Options variable to control the options passed to xargs.\nDon't echo newlines before running the commands."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6868",
      "filename": "grep.vim",
      "script_version": "1.8",
      "date": "2007-03-13",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Support for expanding file and directory names in the search prompt. Fix for recursively searching for filenames with space characters in the name using find and xargs."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5838",
      "filename": "grep.vim",
      "script_version": "1.7",
      "date": "2006-06-16",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Added filename completion support for grep commands. In GUI Vim, added Tools->Search menu item for using the Grep commands."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4484",
      "filename": "grep.vim",
      "script_version": "1.6",
      "date": "2005-08-10",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "1. Add the search pattern to the search results.\n2. Support for the -h argument to the commands.\n3. Make the plugin work in Vi-compatible mode.\n4. Updated documentation."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4219",
      "filename": "grep.vim",
      "script_version": "1.5",
      "date": "2005-04-28",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Don't automatically jump to the first match in the grep output."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=3579",
      "filename": "grep.vim",
      "script_version": "1.4",
      "date": "2004-10-27",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Support for specifying the grep flags, search pattern and filenames as argument to commands and other minor improvements."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=916",
      "filename": "grep.vim",
      "script_version": "1.3",
      "date": "2002-06-11",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Fixed file pattern quoting and special character escaping for MS-Windows."
    }
  ]
}
