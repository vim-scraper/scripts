{
  "script_id": "1583",
  "display_name": "tobase",
  "summary": "Convert from base(2,8,10,16) to base(2-32). Also character to html entity.",
  "name": "tobase",
  "script_type": "utility",
  "description": "Number base converter and character to html entity converter.\nPlugin script for vim on any OS. \n\n(1) Number/character base converter:\nGet a quick answer about a number or character without having\nto refer to an external chart or calculator.\n\nSyntaxes are \n :Tobase obase inum\n :Tobase obase [0oxy&]inum -- Optional modifier is '0,o,x,y,or &'\n\nConvert inum to obase and and return it.\nThe result will be placed in the unnamed register @@ \nwhere a subsequent 'p' command would put the result \n|P| before, |p| after the cursor. \nOptional modifier preceeding inum indicates input base\nof octal, hexadecimal, binary, or html character entity (e.g., &Auml;).\nVersion 1.2 has been extended to allow input number to be a character. \n(note: vy captures 1 character under the cursor.)\n(note: inum may be pasted from the mouse copied from any screen.)\nInput base defaults to decimal if not preceeded by a modifier.\nOutput base may be 2-32, c, or h (c-character, h-html).\nMultiple numbers can be input at once.\n\nYou could define a command to reduce typing Tobase e.g.,\ncommand -nargs=* C Tobase <args>\nThen you could execute it like the following examples:\n:C 16 101              -- prints 65\n:C c 192 193 xc2  -- prints 3 accented capital A's: grave, acute, circ\n\n(2) Convert characters to/from html entities:\nFunction call Syntaxes\ncall Char2HtmlExec() -- Characters to entities (everything on all lines)\n[range] call Char2HtmlExec( [min, max, [string] ] ) -- Characters to entities\n[range] call Html2CharExec( [min, max, [string] ] ) -- Entities to characters\n[range] call Char2AsciiExec( [min, max, [string] ] ) -- Characters to ascii simulation\n\nThe optional [range] may be line numbers such as 1,15 \nor it may be relative such as .-5,.+5 or markers such as 'a,'b.\nRange may also be searches such as /line with this/,/line with that/\nIf range is omitted, or if range equates to just 1 line, it does all lines.\n\nThe optional [min, max, [string] ] goes like this:\nmin and max are numbers or characters which evaluate via Tobase\nto the range of 128 to 255.\nIf both min and max are equal to 0, it means 'do not convert any entities'.\nIn order to specify the optional [string], both min and max must be present.\nThe optional [string] is useful to specify whether to convert \nthe & < > \" to or from &amp;  &lt;  &gt; &quot;\nIf [string] contains & it should be the first one.\n[string] can contain any combination of & < > \"\n\nThus, [range] call Char2HtmlExec(0, 0, '& < > \"') \nwould cause html in [range] to display literally in the browser.\n\nIt is easier for me to put these commands in my ~/.vimrc file:\ncommand! -range -nargs=* Foo <line1>,<line2>call Char2HtmlExec(<f-args>)\ncommand! -range -nargs=* Foof <line1>,<line2>call Html2CharExec(<f-args>)\ncommand! -range -nargs=* Fooa <line1>,<line2>call Char2AsciiExec(<f-args>)\nThose commands should be entered exactly as seen.\nYou may use other names besides Foo, Foof, and Fooa.\n\nCommand syntaxes\n[range] Foo [ min max [string] ]\nIn the command, note that there are not commas between the arguments\nand there are not any parentheses, i.e., Foo(128, 255, '&<>\"') is wrong!\n\nWith the commands in place the syntax is easier:\nFoo        - convert all accented characters to entities and convert & < > \"\nFoo j      - (j)ust convert & < > \"\nFoo n      - (n)ot convert & < > \"\n\n:Tobase -h    (Help)\n:Tobase -hc  (Character conversion help)\n\nTo run from the command line, a script like this could do the job:\n\"::::::::::::::\n\"foo.vim\n\"::::::::::::::\n\"vim -e input_file_name < foo.vim\n\"c:\\vim\\vim62\\gvim.exe -e input_file_name +\"source foo.vim\"\n\"                                                                         :help gui-w32-cmdargs\n:if argc() == 1 && exists(\"*Char2HtmlExec\")\n    :let ofile=argv(0) . '.tmp'\n    :call Char2HtmlExec()\n    :execute ':w!' . ofile . \"\\n\"\n:endif\n:q\n",
  "rating_total": "9",
  "rating_votes": "3",
  "downloads": "386",
  "install_details": "Copy to ~/.vim/plugin.\nOptionally set up commands to do html character conversion.\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5897",
      "filename": "tobase.vim",
      "script_version": "1.2",
      "date": "2006-06-29",
      "vim_version": "6.0",
      "author": {
        "user_id": "10303",
        "user_name": "lmo",
        "first_name": "Walter",
        "last_name": "Hutchins",
        "email": "walter at hutchinsandrea.com",
        "homepage": ""
      },
      "release_notes": "Allow input number to be a character."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5885",
      "filename": "tobase.vim",
      "script_version": "1.1",
      "date": "2006-06-27",
      "vim_version": "6.0",
      "author": {
        "user_id": "10303",
        "user_name": "lmo",
        "first_name": "Walter",
        "last_name": "Hutchins",
        "email": "walter at hutchinsandrea.com",
        "homepage": ""
      },
      "release_notes": "Added line range for character to html entity conversion.\nAdded ascii simulation for conversion to nearest look-alike \ncharacter."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5857",
      "filename": "tobase.vim",
      "script_version": "1.0",
      "date": "2006-06-24",
      "vim_version": "6.0",
      "author": {
        "user_id": "10303",
        "user_name": "lmo",
        "first_name": "Walter",
        "last_name": "Hutchins",
        "email": "walter at hutchinsandrea.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
