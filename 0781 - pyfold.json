{
  "script_id": "781",
  "name": "pyfold",
  "summary": "Python Syntax Folding for class/def statements only",
  "script_type": "syntax",
  "description": "This script acts as a syntax-file addon to the standard python.vim syntax file.  When expression folding is used, all classes and functions will be folded automatically.\n\nEach fold ends upon one of two conditions:\n\n1) A line is detected with an indent less than or equal to the previous fold beginning line (that is not in a multi-line string).\n\n2) A line with the same indent as a class or def statement is detected that contains the string \"#\\s*end\\s\\+\\<\\(class\\|def\\)\\>\".   (i.e. \"    #end class MyClass\").\n\nNote that script vimscript #515 provides a similar functionality, but includes marker folding and limited block statement folding.  This script was written to provide class and function folding only, allow \"#end \\(class\\|def\\)\" lines to end a fold and still be included in the fold, and to increase the speed creating folds in large files.",
  "install_details": "To install, place python.vim in your personal vim syntax directory (e.g. ${HOME}/.vim/syntax).\n\nTo use the syntax folding, add either type the command \" :set foldmethod=expr \" or add the following modeline to the top or bottom of your python file:\n\n# vim6:fdm=expr",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2373",
      "filename": "python.vim",
      "script_version": "1.0",
      "date": "2003-10-06",
      "vim_version": "6.0",
      "author": {
        "user_id": "3510",
        "user_name": "eaglehawk",
        "first_name": "David",
        "last_name": "Morris",
        "email": "junk at morris-clan.net",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}