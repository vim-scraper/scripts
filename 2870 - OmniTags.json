{
  "script_id": "2870",
  "display_name": "OmniTags",
  "summary": "This plugin can help you to maintenance tags file.",
  "name": "OmniTags",
  "script_type": "utility",
  "description": " 12 \"   This plugin can help you to maintenance tags file.\n 13 \"\n 14 \"   There are 3 commands:\n 15 \"\n 16 \"     1. :OmniTagsLoad /path/to/tags-file\n 17 \"\n 18 \"     Load the tags-file and generate a list of source files indexed by\n 19 \"     tags-file.\n 20 \"\n 21 \"     If tags-file doesn't exist, it can create a null file automaticlly.\n 22 \"\n 23 \"     Once tags-file are loaded, every buffer-write event will trigger a\n 24 \"     re-index operation on current file if current file exists in tags-file.\n 25 \"\n 26 \"     The re-index operation will do:\n 27 \"       a) delete tags of current file from tags-file.\n 28 \"       b) call \"ctags -a\" command add the tags of current file to tags-file.\n 29 \"\n 30 \"     Therefor, your tags-file will always updated.\n 31 \"\n 32 \"     Don't mind the speed of re-index operation, it is indetectable while\n 33 \"     the tags-file size small than 20MiB.\n 34 \"\n 35 \"     2. :OmniTagsUpdate {file1} {file2} ...\n 36 \"\n 37 \"     Update the tags-file loaded before, you can specify many files and use\n 38 \"     wildcards(see \":h wildcards\"), \"wildignore\" option(see \"h: wildignore\")\n 39 \"     also influences the result of wildcards parsing.\n 40 \"\n 41 \"     If files are not in tags yet, the plugin will add those files to tags,\n 42 \"     if files already exists, the plugin will update them.\n 43 \"\n 44 \"     You can specify no files, for re-index all files that already indexed.\n 45 \"\n 46 \"     3. :OmniTagsUnload\n 47 \"\n 48 \"     Just an oppsite of :OmniTagsLoad, usually needs not be called by human.",
  "install_details": "Just drop the script to ~/.vim/plugin.\n\nI added a map to .vimrc \"nmap <silent> <leader>t <ESC>:OmniTagsLoad tags<CR>\" to load tags-file in current dir.\n\nThe plugin depends on unix commands below:\n  ctags, grep, tail, cut, sort\n\nCommon linux distribution installed them normally, you can find windows version of them at http://ctags.sf.net/ and http://gnuwin32.sf.net/ (windows version are not test yet, I guess it will work).\n\nBTW: There is a problem in ctags, see http://sourceforge.net/tracker/?func=detail&aid=2819658&group_id=6556&atid=106556. It will buggy when you using OmniTags and write many files. Use this patch to resolve that.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12725",
      "filename": "omnitags.vim",
      "script_version": "0.2",
      "date": "2010-03-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "18435",
        "user_name": "abadcafe",
        "first_name": "lei",
        "last_name": "fw",
        "email": "fwlei@live.com",
        "homepage": ""
      },
      "release_notes": "1. optimized speed, now it is indetectable while update current file(so long as the tags-file small than 20MiB).\n2. removed ctags_delete.c, use grep unix command instead. now the plugin depends on nothing except unix commands ctags, grep, tail, cut, sort."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11796",
      "filename": "omnitags.tbz",
      "script_version": "0.1",
      "date": "2009-11-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "18435",
        "user_name": "abadcafe",
        "first_name": "lei",
        "last_name": "fw",
        "email": "fwlei@live.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
