{
  "script_id": "483",
  "display_name": "tagexplorer.vim",
  "summary": "Tag explorer for various programming language files",
  "name": "tagexplorer.vim",
  "script_type": "utility",
  "description": "Overview\n\nThe \"Tag Explorer\" plugin provides the following features:\n\n1. Opens a vertically/horizontally split Vim window with a list of files in\n   a directory. You can list all the tags (functions, classes, structures,\n   variables, etc) defined in a file. You can jump to the location where a\n   tag is defined. You can edit a selected file. You can browse through the\n   directories.\n2. Groups the tags by their type and displays them in a foldable tree.\n3. When a tag name is selected from the explorer window, positions the cursor\n   at the definition of the tag in the source file\n4. Can display the prototype of a tag from the tag explorer window.\n5. Displays the scope of a tag.\n6. The displayed tags can be sorted either by name or by line number.\n7. Supports the following programming language files: Assembly, ASP, Awk, C,\n   C++, Cobol, Eiffel, Fortran, Java, Lisp, Make, Pascal, Perl, PHP, Python,\n   Rexx, Ruby, Scheme, Shell, Slang, Sql, TCL, Verilog, Vim and Yacc.\n8. Runs in all the platforms where the exuberant ctags utility and Vim are\n   supported (this includes MS-Windows and Unix based systems).\n9. Runs in both console/terminal and GUI versions of Vim.\n\nThis plugin relies on the exuberant ctags utility to generate the tag\nlisting. You can download the exuberant ctags utility from\nhttp://ctags.sourceforge.net. The exuberant ctags utility must be installed\nin your system to use this plugin. Exuberant ctags version 5.3 and above is\nrecommended.  There is no need for you to create a tags file to use this\nplugin.\n\nInstallation\n\n1. Copy the tagexplorer.vim script to the $HOME/.vim/plugin directory.\n   Refer to ':help add-plugin', ':help add-global-plugin' and ':help\n   runtimepath' for more details about Vim plugins.\n2. Set the TE_Ctags_Path variable to point to the exuberant ctags utility\n   path.\n3. If you are running a terminal/console version of Vim and the terminal\n   doesn't support changing the window width then set the TE_Adjust_Winwidth\n   variable to 0.\n4. Restart Vim.\n5. You can use the \":TagExplorer\" command to open/close the tag explorer\n   window. \n\nUsage\n\nYou can open the tag explorer window using the \":TagExplorer\" command.\nInvoking this command will toggle (open or close) the tag explorer window.\nYou can map a key to invoke this command:\n\n              nnoremap <silent> <F8> :TagExplorer<CR>\n\nAdd the above mapping to your ~/.vimrc file.\n\nYou can close the tag explorer window from the tag explorer window by\npressing 'q' or using the Vim \":q\" or using one of the Vim window CTRL-W\ncommands.\n\nWhen the tag explorer window is opened, the names of all the directories\nand files in the current directory will be displayed.\n\nWhen a directory name is selected by pressing the <Enter> key or by double\nclicking with the mouse, the contents of the selected directory will be\ndisplayed. You can go to the parent directory by selecting the \"..\" entry.\n\nWhen a file name is selected by pressing the <Enter> key or by double\nclicking with the mouse, the selected file will be opened in a window.\n\nYou can display all the tags (variable, function, class, etc) defined in a\nfile using the 'o' command.  The tag names will grouped by their type\n(variable, function, class, etc) and displayed as a foldable tree using the\nVim folding support. You can collapse the tree using the 'c' command. You\ncan open the tree using the 'o' command.  You can also use the mouse to\nopen/close the folds. You can use the '+' and '-' keys to open and close the\nfolds for a tag type.\n\nYou can select a tag either by pressing the <Enter> key or by double\nclicking the tag name using the mouse.\n\nFor tags with scope information (like class members, structures inside\nstructures, etc), the scope information will be displayed in square brackets\n\"[]\" after the tagname.\n\nBy default, the tag list will be sorted by the order in which the tags\nappear in the file. You can sort the tags either by name or by order by\npressing the \"s\" key in the tag explorer window.\n\nYou can display the prototype of a tag by pressing <Spacebar> key when\nthe cursor is placed over a tag name.\n\nYou can update the tags listed for a file by pressing the 'u' key in the tag\nexplorer window.\n\nYou can open a different directory by using the 'g' command. You will be\nprompted to enter the name of the directory. You can recall the previously\nentered directory names by pressing the Up and Down arrow keys. The last\ndisplayed directory name will be the first available name in the history.\n\nTo get help on the keys, press the \"?\" key in the tag explorer window.\n\nThis script relies on the Vim \"filetype\" detection mechanism to determine\nthe type of the current file. To turn on filetype detection use\n\n              :filetype on\n\nThis script will not work in 'compatible' mode.  Make sure the 'compatible'\noption is not set.\n\nConfiguration\n\nBy changing the following variables you can configure the behavior of this\nplugin. Set the following variables in your .vimrc file using the 'let'\ncommand.\n\nThe plugin uses the TE_Ctags_Path variable to locate the ctags utility.  By\ndefault, this is set to ctags. Set this variable to point to the location of\nthe ctags utility in your system:\n\n              let TE_Ctags_Path = 'd:\\tools\\ctags.exe'\n\nBy default, the tag names will be listed in the order in which they are\ndefined in the file. You can alphabetically sort the tag names by pressing\nthe \"s\" key in the tag explorer window. You can also change the default\norder by setting the variable TE_Sort_Type to \"name\" or \"order\":\n\n              let TE_Sort_Type = \"name\"\n\nBy default, all the file names in a directory will be displayed in the\nexplorer window. If you want to display only selective filenames, you can\nset the 'TE_Include_File_Pattern' variable. If this variable is set to empty\nstring, all the files in the directory will be displayed. You have to set\nthis variable to a Vim regular expression pattern value. For example, to\ndisplay only .c and .h files, set this variable to\n\n              let TE_Include_File_Pattern = '.*\\.c$\\|.*\\.h$'\n\nYou can set the 'TE_Exclude_File_Pattern' variable to skip file names\nmatching a Vim regular expression pattern. For example, to skip the .o, .obj\n.bak, core and tags files, set this variable to\n\n              let TE_Exclude_File_Pattern = '.*\\.o$\\|.*\\.obj$\\|.*\\.bak$' .\n                                            '\\|.*\\.swp$\\|core\\|tags'\n\nBy default, all the sub-directory names in a directory will be displayed in\nthe explorer window. If you want to display only selective directories, you\ncan set the 'TE_Include_Dir_Pattern' variable. If this variable is set to\nempty string, all the sub-directories in the directory will be displayed.\nYou have to set this variable to a Vim regular expression pattern value.\nFor example, to include only those directories containing vim or unix in the\nname, use\n\n              let TE_Include_Dir_Pattern = '.*vim.*\\|.*unix.*'\n\nYou can set the 'TE_Exclude_Dir_Pattern' variable to skip directories\nmatching a Vim regular expression pattern. By default, this variable is set\nto empty. For example, to exclude all the directories starting with obj or\ncontaining test, use\n\n              let TE_Exclude_Dir_Pattern = 'obj.*\\|.*test.*'\n\nBe default, the tag names will be listed in a vertically split window.  If\nyou prefer a horizontally split window, then set the 'TE_Use_Horiz_Window'\nvariable to 1. If you are running MS-Windows version of Vim in a MS-DOS\ncommand window, then you should use a horizontally split window instead of a\nvertically split window.  Also, if you are using an older version of xterm\nin a Unix system that doesn't support changing the xterm window width, you\nshould use a horizontally split window.\n\n              let TE_Use_Horiz_Window = 1\n\nBy default, the vertically split tag explorer window will appear on the left\nhand side. If you prefer to open the window on the right hand side, you can\nset the TE_Use_Right_Window variable to one:\n\n              let TE_Use_Right_Window = 1\n\nYou can also open the tag explorer window on startup using the following\ncommand line:\n\n              $ vim +TagExplorer\n\nThe default width of the vertically split tag explorer window will be 30.\nThis can be changed by modifying the TE_WinWidth variable:\n\n              let TE_WinWidth = 20\n\nNote that the value of the 'winwidth' option setting determines the minimum\nwidth of the current window. If you set the 'TE_WinWidth' variable to a\nvalue less than that of the 'winwidth' option setting, then Vim will use the\nvalue of the 'winwidth' option.\n\nBy default, when the width of the window is less than 100 and a new tag\nexplorer window is opened vertically, then the window width will be\nincreased by the value set in the TE_WinWidth variable to accomodate the new\nwindow.  The value of this variable is used only if you are using a\nvertically split tag explorer window.  If your terminal doesn't support\nchanging the window width from Vim (older version of xterm running in a Unix\nsystem) or if you see any weird problems in the screen due to the change in\nthe window width or if you prefer not to adjust the window width then set\nthe 'TE_Adjust_Winwidth' variable to 0.  CAUTION: If you are using the\nMS-Windows version of Vim in a MS-DOS command window then you must set this\nvariable to 0, otherwise the system may hang due to a Vim limitation\n(explained in :help win32-problems)\n\n              let TE_Adjust_Winwidth = 0\n",
  "rating_total": "378",
  "rating_votes": "116",
  "downloads": "8849",
  "install_details": "1. Copy the tagexplorer.vim script to the $HOME/.vim/plugin directory.\n   Refer to ':help add-plugin', ':help add-global-plugin' and ':help\n   runtimepath' for more details about Vim plugins.\n2. Set the TE_Ctags_Path variable to point to the exuberant ctags utility\n   path.\n3. If you are running a terminal/console version of Vim and the terminal\n   doesn't support changing the window width then set the TE_Adjust_Winwidth\n   variable to 0.\n4. Restart Vim.\n5. You can use the \":TagExplorer\" command to open/close the tag explorer\n   window. \n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1584",
      "filename": "tagexplorer.vim",
      "script_version": "1.2",
      "date": "2002-12-26",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "1, Added support for refreshing the tags listed for a file.\n2. Modified the plugin so that integration with the winmanager plugin will be simple."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1423",
      "filename": "tagexplorer.vim",
      "script_version": "1.1",
      "date": "2002-11-15",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "1. Added support for opening tags in a new window.\n2. Added support for excluding/including directories matching the specified pattern."
    }
  ]
}
