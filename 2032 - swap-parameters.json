{
  "script_id": "2032",
  "display_name": "swap parameters",
  "summary": "swap parameters of a function (requires python)",
  "name": "swap-parameters",
  "script_type": "utility",
  "description": "Requires python and Vim compiled with +python option\n\nBasic Usecase: Place the cursor inside the parameter you want to swap\nwith the next one, and press gs\n\nIt is a versatile script to swap parameters of a function\nor, generally speaking, elements in any coma seperated list.\n\nkey bindings (normal mode):\n[count]gs -- where count defaults to 1 -- swap the argument under\n             the cursor with the [count] next one\n[count]gS -- swap with the previous one\n\n\nBelow are exaples of what happens after pressing gs (equivalent to 1gs).\nPrettier version can be found here: \nhttp://blog.kamil.dworakowski.name/2007/09/swap-parameters-script-for-vim.html.\nOn each line the lefthand side shows the line before typing gs, and\nthe righthand side shows the effect. The cursor position is depicted\nwith || symbols. par|m|1 means that the cursor is on the character m.\n\nfun(par|m|1, parm2) ==> fun(parm2, parm|1|)\nfun(par|m|1(), parm2) ==> fun(parm2, parm1(|)|)\nfun(parm1(|)|, parm2) ==> fun(parm2, parm1(|)|)\nfun(parm|1|(arg,arg2), parm2) ==> fun(parm2, parm1(arg,arg2|)|)\nfun(parm1|(|arg,arg2), parm2) ==> fun(parm2, parm1(arg,arg2|)|)\nfun(parm1(arg,arg2|)|, parm2) ==> fun(parm2, parm1(arg,arg2|)|)\nfun(parm1(arg, arg2|)|, parm2) ==> fun(parm2, parm1(arg, arg2|)|)\nfun(arg1, ar|g|2, arg3) ==> fun(arg1, arg3, arg|2|)\narray[a|r|g1, arg2] ==> array[arg2, arg|1|]\nfun(par|m|1[], parm2) ==> fun(parm2, parm1[|]|)\nfun(parm1[|]|, parm2) ==> fun(parm2, parm1[|]|)\nfun(par|m|1, array[]) ==> fun(array[], parm|1|)\nfun(|a|,b) ==> fun(b,|a|)\n[(p1, p2|)|, p3] ==> [p3, (p1, p2|)|]\n\n\nThe following lines demonstrate using gS (swap with previous).\n\nfun(parm2, par|m|1) ==> fun(|p|arm1, parm2)\nfun(parm2, par|m|1()) ==> fun(|p|arm1(), parm2)\nfun(parm2, parm1(|)|) ==> fun(|p|arm1(), parm2)\nfun(parm2, parm|1|(arg,arg2)) ==> fun(|p|arm1(arg,arg2), parm2)\nfun(parm2, parm1|(|arg,arg2)) ==> fun(|p|arm1(arg,arg2), parm2)\nfun(parm2, parm1(arg,arg2|)|) ==> fun(|p|arm1(arg,arg2), parm2)\nfun(parm2, parm1(arg, arg2|)|) ==> fun(|p|arm1(arg, arg2), parm2)\nfun(arg1, ar|g|2, arg3) ==> fun(|a|rg2, arg1, arg3)\nfun(arg1, arg2, ar|g|3) ==> fun(arg1, |a|rg3, arg2)\narray[arg2, a|r|g1] ==> array[|a|rg1, arg2]\nfun(par|m|1[], parm2) ==> fun(|p|arm1[], parm2)\nfun(parm2, parm1[|]|) ==> fun(|p|arm1[], parm2)\nfun(array[], par|m|1) ==> fun(|p|arm1, array[])\nfun(b,|a|) ==> fun(|a|,b)\n\nA useful, however unexpected by the author, feature of this script is that\non pressing j to move cursor to the line below, the cursor is restored to \nthe column position before the swap. This allows for a streamlined\nswaping of parameters in the case like this:\n\nfun(arg2, arg1)\nfun(arg2, arg1)\nfun(arg2, arg1)\n\nYou would put cursor on arg2, and type gsjgsjgs",
  "rating_total": "53",
  "rating_votes": "17",
  "downloads": "703",
  "install_details": "To install put the script file into plugin directory.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8421",
      "filename": "swap_parameters.vim",
      "script_version": "1.1.3",
      "date": "2008-03-07",
      "vim_version": "7.0",
      "author": {
        "user_id": "13161",
        "user_name": "luntain",
        "first_name": "Kamil",
        "last_name": "Dworakowski",
        "email": "kamil at dworakowski.name",
        "homepage": "http://blog.kamil.dworakowski.name"
      },
      "release_notes": "now it is even more robust"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8243",
      "filename": "swap_parameters.vim",
      "script_version": "1.1.2",
      "date": "2008-02-07",
      "vim_version": "7.0",
      "author": {
        "user_id": "13161",
        "user_name": "luntain",
        "first_name": "Kamil",
        "last_name": "Dworakowski",
        "email": "kamil at dworakowski.name",
        "homepage": "http://blog.kamil.dworakowski.name"
      },
      "release_notes": "A yet another defect fixes release."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8198",
      "filename": "swap_parameters.vim",
      "script_version": "1.1.1",
      "date": "2008-01-29",
      "vim_version": "7.0",
      "author": {
        "user_id": "13161",
        "user_name": "luntain",
        "first_name": "Kamil",
        "last_name": "Dworakowski",
        "email": "kamil at dworakowski.name",
        "homepage": "http://blog.kamil.dworakowski.name"
      },
      "release_notes": "Now also swap imports: \nfrom os import |p|open, path --> from os import path, pope|n|"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8164",
      "filename": "swap_parameters.vim",
      "script_version": "1.1",
      "date": "2008-01-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "13161",
        "user_name": "luntain",
        "first_name": "Kamil",
        "last_name": "Dworakowski",
        "email": "kamil at dworakowski.name",
        "homepage": "http://blog.kamil.dworakowski.name"
      },
      "release_notes": "Now the script will also cope with coma separated list that is not enclosed in brackets, which is common in Python code.\n\nfor |a|, b in some_dict.items()  -->    for b, |a| in some_dict.items()\n\nMoreover, I have made the code (with full suite of tests) available on code.google.com. Link is on my blog: http://blog.kamil.dworakowski.name/2008/01/smarter-swap-parameters-for-vim.html."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7728",
      "filename": "swap_parameters.vim",
      "script_version": "1.0",
      "date": "2007-09-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "13161",
        "user_name": "luntain",
        "first_name": "Kamil",
        "last_name": "Dworakowski",
        "email": "kamil at dworakowski.name",
        "homepage": "http://blog.kamil.dworakowski.name"
      },
      "release_notes": "Initial upload"
    }
  ]
}
