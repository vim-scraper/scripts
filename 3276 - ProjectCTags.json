{
  "script_id": "3276",
  "display_name": "ProjectCTags",
  "summary": "Generates CTAGS for versioned projects without the need to maintain project file",
  "name": "ProjectCTags",
  "script_type": "utility",
  "description": "ProjectCTags is a plugin that enables you to generate CTags for a project which is under version control. These tags can then be used to Eclipse-like \"Jump-To-Definition\" or autocompletion of source code. Currently the plugin recognizes source code projects which are versioned with git, CVS and SVN version control systems. This plugin eases the task of generating up-to-date tag files. For people who like to maintain vim project files (Personally I do not like to do that, I just want tags for everything in my project folders), vimscript #3221 might be more appropriate. Once you have generated the tags you can use them in the following ways:\n\n* Jump to definition of the tag (if it is located in your project) under the cursor with Ctrl-]\n* Autocomplete C/C++ source code with vimscript #1520 (See vimscript #1643 for intelligent <Tab> key completion)\n\nWhen you have opened a file, the plugin may either automatically update the corresponding tagfiles or it does this on your command (optional). It creates two tagfiles: One in the current folder, which contains detailed informations such as tags for local variables, and one tagfile in the project folder, which contains a less detailed overview of the globally visible tags in all source files in the versioned tree. By default it creates tags in the proper format for vimscript #1520.\n\nThe generated tags will only cover the code that is contained in your project! STL code etc is not included. If you want autocompletion for STL code you must download vimscript #2358 and insert the following into your .vimrc\n\nset tags += \"path/to/stl_tag_file\"\n\nIf you have questions or suggestions about/for the plugin, feel free to contact me.",
  "install_details": "Just move projectCTags.vim to ~/.vim/plugin. The plugin requires CTags to be installed (http://ctags.sourceforge.net/). If CTags is not in your $PATH environment variable, then you must specify the path to the CTags executable by putting\n\nlet g:projectCTagsCTagsExe = \"path/tp/ctags\"\n\ninto your .vimrc file. To generate and set the CTags you can then use :GenerateProjectCTags( \"Tag Setting Name\", \"ctags options\" ). It is useful to map this to a key like\n\nmap  <F3>  :call GenerateProjectCTags( \"Standard\", \"\" )<CR>\nmap  <F4>  :call GenerateProjectCTags( \"Exclude Stuff\", \"--languages=C,C++ --exclude=folder1 --exclude=folder2\" )<CR>\n\n\nFor want further options, see the .vim file. A useful option, which should be set inside the ~/.vimrc, is:\n\nlet g:projectCTagsAutogenerateTags = 1\n\nThis will let ProjectCTags automatically regenerate the tag files when you open a C/C++ file if you have already created the tags once manually by invoking :GenerateProjectCTags() before. This will then re-use the options (second parmeter of GenerateProjectCTags) which were used last time inside the project. The options are stored in a \".tags_options\" file in the project folder.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14328",
      "filename": "projectCTags.vim",
      "script_version": "0.3",
      "date": "2010-11-20",
      "vim_version": "7.0",
      "author": {
        "user_id": "21859",
        "user_name": "akimo",
        "first_name": "T.",
        "last_name": "Kelter",
        "email": "t.kelter at freenet.de",
        "homepage": ""
      },
      "release_notes": "The output generated by the plugin is now less verbose. Options were added to specify individual verbosity levels."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14192",
      "filename": "projectCTags.vim",
      "script_version": "0.2",
      "date": "2010-11-06",
      "vim_version": "7.0",
      "author": {
        "user_id": "21859",
        "user_name": "akimo",
        "first_name": "T.",
        "last_name": "Kelter",
        "email": "t.kelter at freenet.de",
        "homepage": ""
      },
      "release_notes": "Automatically uses the correct path separator ('\\&#039) on Windows systems now (thanks to Дмитрий Франк)"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14051",
      "filename": "projectCTags.vim",
      "script_version": "0.1",
      "date": "2010-10-13",
      "vim_version": "7.0",
      "author": {
        "user_id": "21859",
        "user_name": "akimo",
        "first_name": "T.",
        "last_name": "Kelter",
        "email": "t.kelter at freenet.de",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
