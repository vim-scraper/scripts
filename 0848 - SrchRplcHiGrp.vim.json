{
  "script_id": "848",
  "name": "SrchRplcHiGrp.vim",
  "summary": "Search and/or replace based on a syntax highlight group",
  "script_type": "utility",
  "description": "\tSR = Search and/or Replace\t\t\t\n\nThis plugin defines some commands to allow you to:\n1.  Search for characters with a particular syntax highlight group\n2.  Search and replace characters with a particular syntax highlight group\n\nCommands:\n\tSRDispHiGrp\t\t\t\t\n\t\tDisplays the syntax id and name the of the syntax group \n\t\twhich has been chosen.\n\n\tSRChooseHiGrp[!]       \t\t\t\n                Before you can run the search and replace command (:SRHiGrp),\n                you must choose which syntax group id you want to operate on.  \n                The top level syntax id of the current cursor position is\n                chosen (ie. the top-level one versus the final one).\n\n                The optional bang lets SRChooseHiGrp use the translated\n                syntax ID. This is final one versus the top-level one. \n\n                Assuming we were using a SQL file and placed the cursor on the\n                FROM word, then using the SyntaxAttr plugin\n                (http://vim.sourceforge.net/script.php?script_id=383)\n                it displays both the top-level and translated \n                (or final) highlight group as follows: \n                  group: sqlKeyword->Statement guifg=#ffff00(#ffff00) \n \n\n\t\tExamples: \n\t\t  :SRChooseHiGrp \n                      Will operate on only sqlKeyword syntax groups\n\n\t\t  :SRChooseHiGrp! \n                      Will operate on all Statement syntax groups.  Based on\n                      |group-name|, the Statement group will highlight the\n                      same color for the following highlight groups:\n                            Conditional\t\n                            Repeat\t\t\n                            Label\t\t\n                            Operator\t\n                            Keyword\t\n                            Exception\t\n                      Therefore SRChooseHiGrp! will operate over all of the\n                      above syntax groups.\n\n\tSRHiGrp[!] \t       \t\t\t      \t\n                This command will perform a search and replace over a visual\n                range.  It works in all visual modes, characterwise (v),\n                linewise (V) and blockwise (<C-V>).\n\n\t\tIt optionally takes takes 2 parameters.\n\n                Parameter 1 controls what characters are matched.  The default\n                for this value is \\(\\w\\+\\>\\).  This expression is appended to\n                the \\%# which starts the match from the current cursor\n                position.  This expression must specify a submatch \\(...\\).\n\n\t\tParameter 2 controls what to do with the matched string.  The\n\t\tdefault for this value is \\U\\1.  This expression will cause\n\t\tthe matched string to be UPPER cased.  The \\1 refers to the \n                submatch from the first parameter.\n\n\t\tIf the parameters are not supplied, the user will be prompted\n\t\tto enter the expression(s).\n\n                The optional bang (!) works the same as SRHiGrp, but will\n                operate on all syntax groups that are NOT the chosen one\n                (SRChooseHiGrp).\n\n\t\tSyntax: \n\t\t[range]SRHiGrp[!] 'from-pattern','to-string'\n\n \n\tSRSearch    \t       \t\t\t      \t\n                This command will perform a forward search starting at the current\n                cursor position for a specified highlight group name.  The range defaults\n                to the entire file.  It supports all visual modes, characterwise (v),\n                linewise (V) and blockwise (<C-V>).\n\n==============================================================================\n3. Examples\t\t\t\t\t*srchrplchigrp-examples*\n\n   SRHiGrp\n   -------\n\n\tFirst place your cursor on an item that is syntax colored the way\n\tyou want:\n\t\t:SRChooseHiGrp\n \n\tNext, visually select a block of text\n\t(all visual modes are supported)\n\t\t:SRHiGrp\n\t\tor\n\t\t:SRHiGrp '\\(\\w\\+\\>\\)'\n\t\tor\n\t\t:SRHiGrp '\\(\\w\\+\\>\\)', '\\U\\1'\n\n\tIf you had the following in a SQL file:\n\t\tif exists( select 1\n\t\t            from sys.sysprocedure sp\n\t\t             key join sys.sysuserperm sup\n\t\t           where sp.proc_name = 'sp_http_course_detail'\n\t\t             and sup.user_name = user_name()             ) then\n\t\t    drop procedure sp_http_course_detail;\n\t\tend if;\n\n\tWhere the keywords (if, exists, select, from ...) are all \n\thighlighted yellow (based on my colorscheme).  After I visually\n\tselect the area and run the command taking default prompts:\n\t\t:'<,'>SRHiGrp \n\n\tThe result is:\n\t\tIF EXISTS( SELECT 1\n\t\t            FROM sys.sysprocedure sp\n\t\t             KEY JOIN sys.sysuserperm sup\n\t\t           WHERE sp.proc_name = 'sp_http_course_detail'\n\t\t             AND sup.user_name = user_name()             ) THEN\n\t\t    DROP PROCEDURE sp_http_course_detail;\n\t\tEND IF;\n\n\tWhere the keywords (if, exists, select, from ...) are all \n\thighlighted yellow (based on my colorscheme).  After I visually\n\tselect the area and run the command taking default prompts: \n\t\t:'<,'>SRHiGrp!\n\n\tThe result is:\n\t\tif exists( select 1\n\t\t            from SYS.SYSPROCEDURE SP\n\t\t             key join SYS.SYSUSERPERM SUP\n\t\t           where SP.PROC_NAME = 'SP_HTTP_COURSE_DETAIL'\n\t\t             and SUP.USER_NAME = USER_NAME()             ) then\n\t\t    drop procedure SP_HTTP_COURSE_DETAIL;\n\t\tend if; \n\n\n   SRSearch\n   --------------\n\tSRSearch simply does a forward search for the specified highlight\n        group.  A few examples: \n\t\t:SRSearch sqlKeyword\n\t\t:1,5SRSearch sqlKeyword\n\t\t:'<,'>SRSearch sqlKeyword\n\n\tOptionally, you can first choose the hightlight group by placing your\n        cursor on the highlight you want and: \n\t\t:SRChooseHiGrp\n\t\t:SRSearch\n\n\tUsing Vim's tab completion you can also: \n\t\t:SRSearch s<Tab>\n\n\tEach time you press tab, it will cycle through the currently defined\n        syntax highlight groups beginning with the letter 's'.\n\n        The results of the search is displayed in the command line and is\n        highlighted in the color of the syntax group.  This will remind you\n        which group was searched for. \n            SRSearch - Match found - Group ID: 171  Name: sqlKeyword\n            SRSearch - Match NOT found - Group ID: 171  Name: sqlKeyword\n\n",
  "install_details": "Unzip into your vimfiles(windows) or .vim(Unix) directory (using directory structure).\nRun the following to update the Vim help files:\n:helptags $VIM/vimfiles/doc\n:helptags $VIM/.vim/doc\n\n ",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8203",
      "filename": "SrchRplHiGrp_v40.zip",
      "script_version": "4.0",
      "date": "2008-01-30",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "Fixed an undefined variable and some boundary conditions."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5541",
      "filename": "SrchRplHiGrp.zip",
      "script_version": "2.0",
      "date": "2006-04-11",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "New command, SRSearch, so you can find characters with a specific syntax highlight group.\n\nChanged SRHiGrp to escape the regex provided.  This saves you from having to escape the expression yourself.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2654",
      "filename": "SrchRplHiGrp.zip",
      "script_version": "0.15",
      "date": "2004-01-09",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "Changed SRChooseGrp to default to the top-level syntax group instead of the translated group.  Using SRChooseGrp! will choose the translated group (which will effect more values).\nAdded a help file.\nRemoved SRHiGrpNot and replaced it with SRHiGrp!.\nUpdated the examples.\nMost of this work was done by Dr. Chip (thanks!)."
    }
  ]
}