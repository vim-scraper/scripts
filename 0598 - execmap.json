{
  "script_id": "598",
  "name": "execmap",
  "summary": "Lets you relax while executing long normal or visual mode maps",
  "script_type": "utility",
  "description": "Description:\n  The aim of this plugin is to allow users to define lengthy normal mode\n  mappings (and thus increase the name-space) and still be able to type the\n  mappings comfortably, thus reducing the chance of making mistakes or\n  getting timed out. When you make mistakes in typing (resulting in an\n  invalid map) or pause for long enough, the control goes to the plugin\n  instead of getting aborted, which then prompts you to continue typing or\n  correct the map, without needing to start all over.\n                                                                             \n  The plugin provided a generic functions called ExecMap() and ExecMap2()\n  which need to be defined as the handler for the set of maps starting with\n  a common prefix. It by default defines this as the handler for the prefix\n  \"\\\" and \"_\" (without the quotes) so that for all the mappings that start\n  with these prefixes, the plugin provides a backup on errors and time out\n  cases. But you can define additional mappings for additional prefixes such\n  as \",\" etc.\n                                                                             \n      nnoremap , :call ExecMap(',')<CR>\n                                                                             \n  As you enter key strokes to complete a command, the plugin looks up the\n  partial command in the complete list of normal or visual mode mapping (as\n  the per the case) and rejects the key strokes if it doesn't match with\n  any. When the command matches an existing map with no conflicts, it gets\n  immediately executed. When the command matches a map, but there is a\n  longer map that could be matched, the plugin indicates this by displaying\n  a \"*\" at which point you can press <Enter> to execute the map, or continue\n  to type to match the longer command. Here is an example to describe it\n  better, say you have two maps as below:\n                                                                             \n      nnoremap \\ma :echo \"ma\"<CR>\n      nnoremap \\maxi :echo \"maxi\"<CR>\n                                                                             \n  Typing \"\\ma\" would match one of the mappings completely, but it would also\n  match \"\\maxi\" partially, so the plugin allows you to continue to type\n  until you press <CR>. However, whenever there is an exact match for the\n  current command with an existing map, the plugin indicates it by appending\n  a \"*\" to the prompt (pressing <CR> at that moment would execute a valid\n  command). I have found it working well for both normal and visual mode\n  mappings.\n                                                                             \n  You can use <BS> to clear the previous character and press <Esc> or <C-C>\n  to cancel it anytime. You can also press <Enter> to execute the command\n  that is typed in, but it has to match a valid map.\n                                                                             \n  Note that this functionality was originally part of genutils plugin, but\n  it is more appropriate for it to be a separate plugin rather than a\n  library function so it is no longer part of genutils.\n                                                                             \nFunction Prototypes:\n    \" Add a handler for all the maps that share the given prefix in\n    \"\t  normal mode.\n    void ExecMap(String prefix)\n                                                                             \n    \" Add a handler for all the maps that share the given prefix in\n    \"\t  the given mode. Only normal and visual modes are supported.\n    void ExecMap2(String prefix, String mode)\n                                                                             \n    \" Prompt user for a map with the given prefix in the given mode and\n    \"\t  return the map. The return value could be executed using :normal\n    \"\t  command. If the user cancels the operation, it returns an empty\n    \"\t  string. Only normal and visual modes are supported.\n    String ExecMapPrompt(String prefix, String mode)\nLimitations:\n  - You can only execute maps that are complete to be executable using\n    :normal exmode command (see help on :normal). One example map that will\n    not work is:\n                                                                             \n      nnoremap _ab :call input('ab command')<CR>\n                                                                             \n    If you execute the above command using \":normal _ab\", it will not run as\n    expected. Similarly, maps that are supposed to leave you on the : prompt\n    don't work as well.\n\n\n\nSearch_key_words: execmap execmap.vim normal visual mode map maps genutils relax comfort Hari Krishna Dara",
  "rating_total": "4",
  "rating_votes": "1",
  "downloads": "989",
  "install_details": "Just drop it in the plugin directory. Follow the procedur described above to add additional maps.\n\nRequires genutils(vimscript #197)",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=3264",
      "filename": "execmap.vim",
      "script_version": "1.4",
      "date": "2004-07-23",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "Now requires Vim 6.3 for the fix in map output redirection.\n\nThis version mainly contains the new feature requested by Salman Halim to support executing maps that have conflicts (matches a map, but a longer map is also possible). Also added more documentation."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2891",
      "filename": "execmap.vim",
      "script_version": "1.3",
      "date": "2004-03-29",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Improved visual mode support.\n- Added support for executing maps when they have shorter counter parts (if both \\ab and \\abc exist, you could not execute \\abc earlier), requested by Salmon Halim (salmanhalim at yahoo dot com). Read description for usage. Needs patches for Vim 6.2 for this to work (don't know which patch, just get all the latest)."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2364",
      "filename": "execmap.vim",
      "script_version": "1.2",
      "date": "2003-10-01",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "Brought the changes made by Srinath Avadhanula for the script to work with visual maps also, as part of his vim-latex project. Thanks to Srinath for finishing this long pending TODO item."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1844",
      "filename": "execmap.vim",
      "script_version": "1.0",
      "date": "2003-03-22",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}