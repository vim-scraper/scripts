{
  "script_id": "1269",
  "name": "drcstubs",
  "summary": "Imaps to provide active stubs  (currently: c, LaTeX, sh, vim)",
  "script_type": "ftplugin",
  "description": "All of the DrCStubs ftplugin scripts provide maps which work during insert mode.  One may use either the shorthand or longhand maps to invoke the corresponding imap.  They are invoked whenever a string is followed by a backquote.\n\nOne major advantage of these imaps is that they, in turn, take advantage of the user's cindent settings and/or indentation scripts.  Thus the result should be as if the user had typed them him/herself.\n\n  * These imaps will not operate if \"set paste:\" is on.\n  * They work well with vimscript#1270 indenting scripts\n\nIn the maps below:\n\n An \"X\" is where the cursor will end up after the map is invoked.\n An \"Y\" is where the cursor will end up after an <esc> is pressed.\n A  \"|\" means a newline.\n\nAnother form of help is available by typing >\n\n :Drcstubs\n\n------------------\nC LANGUAGE SUPPORT\n------------------\n     Shorthand    Longhand     Expands\n     Map          Map          To\n     ---------    --------     -------\n     i`           if`          if(X) {Y}\n     e`           els[e]`      else {X}\n     ei`          eli[f]`      else if(X) {Y}\n     f`           for\\=`       for(X;;) {Y}\n     w`           wh[ile]`     while(X) {Y}\n     s`           sw[itch]`    switch(X) {Y}\n     c`           ca[se]`      case X: Y break;\n     d`           defa[ult]`   default: Y break;\n     `            do`          do {X} while(Y);\n     E`           Ed[bg]`      Edbg((\\\"func(X)\\\"Y));\n     R`           Rd[bg]`      Rdbg((\\\"funcX\\\"Y));\n     D`           Dp[rintf]`   Dprintf((1,\\\"X\\\"Y));\n                  in[clude]`   #include X\n                  de[fine]`    #define X\n                  #`           #ifdef X ... #endif\n\n-------------\nLATEX SUPPORT\n-------------\n       Environments And Abbreviations\n     Shorthand    Longhand     Expands\n     Map          Map          To\n     ---------    --------     -------\n     align`                    \\begin{align}|X|\\end{align}\n     arr`         array`       \\left[\\begin{array}{ccc}|X|\\end{array}\\right]\n     ctr`         center`      \\begin{center}|X|\\end{center}\n     desc`        description` \\begin{description}|\\item[X]|\\end{sdescription}\n     enum`        enumerate`   \\begin{enumerate}|\\item X|\\end{enumerate}\n     eps`         epsf`        \\begin{figure}[H]\\centering\\framebox{\\epsfbox{X.eps}}\\end{figure}\n     eqn`         equation`    \\begin{equation}|X|\\end{equation}\n     eqna`        eqnarray`    \\begin{eqnarray}|X&=& Y \\\\|\\end{eqnarray}\n     fig`         figure`      \\begin{figure}[H]\\centering \\framebox{X} \\caption{CAPTION HERE} \\end{figure}\n     flalign`                  \\begin{flalign}|X|\\end{flalign}\n     frac`                     \\frac{X}{Y}\n     gat`         gather`      \\begin{gather}|X|\\end{gather}\n     i`                        \\item X\n     i`                        \\item[X] Y        (if vim v7, and in a description block)\n     item`        itemize`     \\begin{itemize}|\\item X|\\end{itemize}\n     mat`         matrix`      \\left[|\\begin{array}{cc}| X &   & \\\\|&   & |\\end{array}|\\right]\n     mini`        minipage`    \\begin{minipage}[H]{4in}|X|\\end{minipage}\n     multc`       multicol`    \\multicolumn{1}{X|c|}{MultiColumn} \n     multl`       multline`    \\begin{multline}|X|\\end{multline}\n     split`                    \\begin{equation}\\begin{split}|X|\\end{split}\\end{equation}\n     tab`         tabular`     (too long for here)\n     v`                        \\verb`X`\n     verb`        verbatim`    \\begin{verbatim}|X|\\end{verbatim}\n\n         Script Style Support\n     Shorthand    Longhand     Expands\n     Map          Map          To\n     ---------    --------     -------\n     bf`                       \\textbf{}\n     it`                       \\textit{}\n     rm`                       \\textrm{}\n     sc`                       \\textsc{}\n     sf`                       \\textsf{}\n     sl`                       \\textsl{}\n     tt`                       \\texttt{}\n     mtt`                      \\mathtt{}\n     mrm`                      \\mathrm{}\n     mbf`                      \\mathbf{}\n     msf`                      \\mathsf{}\n     mtt`                      \\mathtt{}\n     mit`                      \\mathit{}\n     mcal`                     \\mathcal{}\n\n                 Greek Letters:\n     Shorthand    Expands        Shorthand    Expands\n     Map          To             Map          To\n     ---------    -------        ---------    -------\n     a`           \\alpha        v             \\nu\n     b`           \\beta         f             \\xi\n     g`           \\gamma        p             \\pi\n     d`           \\delta        vp            \\varpi\n     e`           \\epsilon      r             \\rho\n     ve`          \\varepsilon   vr            \\varrho\n     z`           \\zeta         s             \\sigma\n     n`           \\eta          v             \\varsigma\n     t`           \\theta        t             \\tau\n     vt`          \\vartheta     u             \\upsilon\n     io`          \\iota         h             \\phi\n     k`           \\kappa        vh            \\varphi\n     l`           \\lambda       x             \\chi\n     m`           \\mu           q             \\psi\n     w`           \\omega\n\n\n----------\nSH SUPPORT\n----------\n     Shorthand    Longhand     Expands\n     Map          Map          To\n     ---------    --------     -------\n     ca[se]`      c`           case X in|Y|esac\n     fo[r]`       f`           for X in Y ; do|Z|done\n     if`          i`           if [[ X ]]; then|Y|fi\n     eli[f]`      ei`          elif [[ X ]]; then|Y\n     els[e]`      e`           else|X\n     fu[nction]`               function X|{|Y|}\n     wh[ile]`     w`           while [[ X ]]; do|Y|done\n\n\n-----------\nVIM SUPPORT\n-----------\n     Shorthand    Longhand     Expands\n     Map          Map          To\n     ---------    --------     -------\n     i            if           if X|endif\n     e            els[e]       else|X\n     ei           eli[f]       elseif X\n                  fu[nction]   fun! X(Y)|endfun\n     w            wh[ile]      while X|endwhile\n     F            Df[unc]      call Dfunc(\"func(X)\")|Y\n     R            Dr[et]       call Dret(\"return func X\")\n     D            De[echo]     call Decho(\"X\")|Y\n\n(alpha/beta version available at http://mysite.verizon.net/astronaut/vim/index.html#DRCSTUBS)\n",
  "rating_total": "20",
  "rating_votes": "8",
  "downloads": "687",
  "install_details": "1. Place drcstubs.tar.gz in your $HOME/.vim or ..wherever..\\vimfiles directory\n2. gunzip drcstubs.tar.gz\n3. tar -oxvf drcstubs.tar\n4. Have  \"filetype plugin indent on\" in your <.vimrc>\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12760",
      "filename": "drcstubs.vba.gz",
      "script_version": "3",
      "date": "2010-04-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "New mappings and menu support in stub (template) files for c, sh, tex, and vim"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4231",
      "filename": "drcstubs.tar.gz",
      "script_version": "1",
      "date": "2005-05-03",
      "vim_version": "6.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "Initial upload"
    }
  ]
}