{
  "script_id": "3061",
  "display_name": "VxLib",
  "summary": "Some utility functions packed in a library",
  "name": "VxLib",
  "script_type": "utility",
  "description": "Script: vxlib\n\nInitially developed for vimuiex (vimscript#2606)\nUsed by manuals (vimscript#3060)\n\nContains a Vim Plugin Generator that parses files in autoload directories and creates \nplugin initialization code for the plugin directory - a single file for all plugins. \nIt searches for specially marked sections in vim files (see vimuiex, manuals).\n\nSee http://vimuiex.sourceforge.net/vimdoc/vxlib_plugin.html for details.\n\nThe command :VxRegen will start the plugin generator, create the plugin \ninitialization code and update the plugin configuration file (plugins/vxplugin.conf).  \n:VxRegen will execute a Python script using an existing Python installation, so \nPython must be in your system PATH. \n\nThe configuration file can be edited with :VxConfig. It is a simple win-ini-type \nfile. Currently it is only possible to include/exclude the plugins from the \ninitialization code. To exclude a plugin, put 'generate=0' in the appropriate \nsections. By default initialization code for all found plugins is generated.\n\nGenerated plugins can also be disabled from .vimrc. Each plugin processed by the \nplugin generator has a unique ID. When the plugins are loaded, this ID is used to \ncheck if the plugin should be loaded or not. To disable a plugin with \nid='vimuiex#textmenu', add 'let g:vxenabled_vimuiex_textmenu=0' to .vimrc.\n\nIncluded in the library is the QuickFixPreview plugin that adds mappings\nto preview the line that is selected in the QuickFix window.\nhttp://vimuiex.sourceforge.net/vimdoc/vxlib_plugins.html#vxlib-quickfixpreview\n\nRelated scripts: genutils(vimscript#197), lh-vim-lib(vimscript#214), \ntlib(vimscript#1863), vim-addon-manager(vimscript#2905), \ntplugin(vimscript#2917),\n",
  "install_details": "Unpack into vim runtime directory (eg. ~/.vim/).\n\nIf you want to manage the plugins generated by VxLib, add\n   let g:vxlib_user_generated_plugins=1\nto your .vimrc and use the following commands:\n   :VxRegen to generate plugin initialization code for plugins that support VxLib.\n   :VxConfig to configure such plugins.\n\nIf g:vxlib_user_generated_plugins is not set or is equal to 0, the above commands are \nnot available and all the plugins from ~/.vim/vxlibautogen/plugin are loaded instead.\n\nIf the generator doesn't work for some reason, there is a script in ~/modpython/vxlib \n- mkplugins.sh - that does a similar thing as VxRegen. If the script complains that \nit doesn't find vim, remove the parameter '--indent 1'.\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13735",
      "filename": "vxlib.zip",
      "script_version": "0.7",
      "date": "2010-08-31",
      "vim_version": "7.0",
      "author": {
        "user_id": "17122",
        "user_name": "markomahnic",
        "first_name": "Marko",
        "last_name": "Mahnič",
        "email": "marko.mahnic@gmail.com",
        "homepage": ""
      },
      "release_notes": "Minor changes\n* menu.vim added\n* vxlib/cmd: #Edit sets buflisted for loaded buffers\n* fixed vxlib#python#prepare"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12861",
      "filename": "vxlib.zip",
      "script_version": "0.6.7a",
      "date": "2010-04-18",
      "vim_version": "6.0",
      "author": {
        "user_id": "17122",
        "user_name": "markomahnic",
        "first_name": "Marko",
        "last_name": "Mahnič",
        "email": "marko.mahnic@gmail.com",
        "homepage": ""
      },
      "release_notes": "Support for developer-generated plugin initialization"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12847",
      "filename": "vxlib.zip",
      "script_version": "0.6.7",
      "date": "2010-04-16",
      "vim_version": "7.0",
      "author": {
        "user_id": "17122",
        "user_name": "markomahnic",
        "first_name": "Marko",
        "last_name": "Mahnič",
        "email": "marko.mahnic@gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
