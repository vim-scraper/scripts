{
  "script_id": "2388",
  "name": "conomode.vim",
  "summary": "Vi-style editing for the command line",
  "script_type": "utility",
  "description": "Implements a kind of Normal mode ( \"Cmdline-Normal mode\" ) on top of the Command line.  Purpose is similar to the cmdline-window (q:), but navigation and editing can be done in-place.  Of course the cmdline-window is much more powerful.\n\n- enter with c_<F4>   (press <F4> while in Command-line mode)\n- mode indicator is a colon \":\", moved along with the cursor, hiding the char under it\n- quit to Cmdline-mode with <Esc>, o, O, \":\" or any unmapped key (which then executes or inserts itself), or wait 60 seconds.\n\nFeatures So Far:\n- Motions: h l w b e W B E 0 ^ $ f{char} F{char} ; ,    also in Operator pending mode\n- More Motions: j k\n- Operators: d y c    these write to the unnamed register; c prompts for input()\n- Insert: I i a A     these commands prompt for input()\n- Shortcuts: yy D x X s C dd    yy -> 0y$, D -> d$, x -> dl, X -> dh, s -> cl, C -> c$, dd -> 0d$\n- Simple Changes: r{char} ~\n- Putting: P p      put the unnamed register\n- Repeating: .      repeatable commands: d r c ~ I i a A\n- Macros: q @       q starts[/stops] recording, @ executes, no register involved\n- Mode Switching: <Esc> o O - back to Cmdline, <CR> - execute Cmdline\n- Undo: u U         redo with \"U\" (to keep c_CTRL-R working); undo information survives mode switching; undo is unlimited\n- Count: can be given for most commands\n- Misc: <C-L> - redraw the Cmdline\n\nNotes:\n- the mode indicator may make UTF-8 characters look garbled; press Ctrl-L to redraw the Cmdline\n\nHave fun!",
  "rating_total": "2",
  "rating_votes": "2",
  "downloads": "205",
  "install_details": ":source conomode.vim\n\nCan be used as a plugin, but:\nNote: Vim7.3 is recommended, older Vims are likely to crash due to a bug in getcmdline()\n\nThe plugin defines a lot of mappings for Cmdline-mode, but these are local to the script -- so except for <F4> (and <C-X> for internal use), there cannot be a conflict with other mappings.\n\n\nHint:\nto autoload the plugin when pressing <F4> the first time, you can create a \"macros\" folder, put the script file there and add the following code to your vimrc:\n\n\" vimrc:\ncmap <F4> <C-R>=<sid>LoadConoMode()<CR><F4>\n\nfunc! <sid>LoadConoMode()\n    cunmap <F4>\n    verbose runtime macros/conomode.vim\n    redraw\n    return \"\"\nendfunc\n\n2010 Aug 21",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13637",
      "filename": "conomode.vim",
      "script_version": "0.4",
      "date": "2010-08-20",
      "vim_version": "7.3",
      "author": {
        "user_id": "8357",
        "user_name": "anwo",
        "first_name": "Andy",
        "last_name": "Wokula",
        "email": "anwoku at yahoo.de",
        "homepage": ""
      },
      "release_notes": "NF: Macro recording: q @\nNF: undo survives mode switching\nNF: Tilde command: ~\nNF: Insert commands: I i a A (now prompt for input())\nNF: <Esc> (and o O ) switches to the Cmdline (not Normal mode)\nNF: more verbose now\nBF: disallowed recursive Conomode\nBF: better multi-byte support"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9301",
      "filename": "conomode.vim",
      "script_version": "0.1",
      "date": "2008-10-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "8357",
        "user_name": "anwo",
        "first_name": "Andy",
        "last_name": "Wokula",
        "email": "anwoku at yahoo.de",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
