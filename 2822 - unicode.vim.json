{
  "script_id": "2822",
  "display_name": "unicode.vim",
  "summary": "A Completion function for Unicode glyphs",
  "name": "unicode.vim",
  "script_type": "utility",
  "description": "For a screenshot, see: http://www.256bit.org/~chrisbra/vim_unicode.png\n\n\n                                                              *unicode-plugin*\n1. Functionality\n\nThis plugin was written to enable an easier use of any Unicode glyph\navailable. The unicode.vim Plugin uses the data available from the Unicode\nConsortium's website (http://www.unicode.org) to let you enter Unicode\ncharacters using a completion function.\n\nBy default, the plugin creates a directory unicode below the path autoload\nwhere this plugin is located. Within this directory it will store  the file\nIndex.txt from http://www.unicode.org/Public/UNIDATA/Index.txt which it will\ntry to download using *netrw* . If this is unsuccessfull, or you do not have\n|netrw| enabled, dowload the file manually and save it in the unicode\ndirectory below the autoload directory in which unicode.vim is located.\n\n\n\t\t\t\t\t\t *:EnableUnicodeCompletion*\nBy default the plugin is not enabled. To enable it enter\n:EnableUnicodeCompletion\nWhen you run this command, *unicode.vim* checks for the availability of\nIndex.txt from the Unicode Consortium, and if it is not available, it will try\nto download it. \n\nThis will also set up the completion function |completefunc| to use for your\nbuffer. You can use |i_CTRL-X_CTRL-U| then to start the completion. \n\n\t\t\t\t\t\t *:DisableUnicodeCompletion*\nIf you want to disable the plugin, enter\n:DisableUnicodeCompletion\n\n\t\t\t\t\t\t    *unicode-plugin-usage*\nIf you have enabled the plugin using |:EnableUnicodeCompletion| then there are\n2 possibilities to use the plugin. You can either enter the Unicode Character\nname, or enter the Unicode-Codeposition.\n\nFor example, you would like to enter Ã†, so you enter AE and press <C-X><C-U>\nwhile in insert mode. Alternatively you can enter the Unicode-Codepoint: U+C6\nand press <C-X><C-U> and the popup menu will show you all characters, that\nhave a codepoint like C6 with leading zeros, eg. U+00C6 and U+0C66\n\nA popup menu will appear, showing you the Unicode-Codeposition value, the\nUnicode Character Name and the Unicode Character (and if you have enabled it,\nit can also show you the digraph characters needed to create this character in\nparanthesis, see |unicode-plugin-config| ). You can scroll down in the menu by\npressing <C-N> and up by pressing <C-P>.\n\n\n\t\t\t\t\t\t    *unicode-plugin-config*\nThe plugin can be customized to include the 2 digraph characters you have to\ntype, to get that character. This works only, if there is a digraph defined\nfor that Unicode char. If you would like this you need to set\ng:showDigraphCode, e.g.\n:let g:showDigraphCode=1\nThis functionality is by default disabled, cause it seems to cause some delay\nand screen-rendering errors in the menu. Enter\n:let g:showDigraphCode=0\nto disable the Digraph feature afterwards.\n\nIf you would like to specify a different URL from which to download Index.txt,\nenter the URL as:\n:let g:unicode_URL='http:....'\nTo force downloading the file from that new url, enter\n:call unicode#CheckUniFile(1)\n\n\t\t\t\t\t\t     *unicode-plugin-error*\nIf the plugin gives an error, first check, that Index.txt from the Unicode\nConsortium has been successfully downloaded. It should look something like\nthis:\nA WITH ACUTE, LATIN CAPITAL LETTER\t00C1\nA WITH ACUTE, LATIN SMALL LETTER\t00E1\nA WITH BREVE, LATIN SMALL LETTER\t0103\nA WITH CARON, LATIN SMALL LETTER\t01CE\nA WITH CIRCUMFLEX, LATIN CAPITAL LETTER\t00C2\nA WITH CIRCUMFLEX, LATIN SMALL LETTER\t00E2\nA WITH DIAERESIS, LATIN CAPITAL LETTER\t00C4\nA WITH DIAERESIS, LATIN SMALL LETTER\t00E4\nA WITH DOT ABOVE, LATIN SMALL LETTER\t0227\nA WITH DOT BELOW, LATIN SMALL LETTER\t1EA1\nA WITH DOUBLE GRAVE, LATIN SMALL LETTER\t0201\nA WITH GRAVE, LATIN CAPITAL LETTER\t00C0\n[...]\n(several thounsand lines following)\n\nelinks is known to mangle that file and make it unusable, so please check\nfirst if the format is right.\n\nIf the file looks correct, and the plugin is still not working correctly\ncontact the maintainer. You'll find his email-adress in the first line of this\ndocument. Please be patient, it might take a while, until I can take care of\nyour report.",
  "install_details": "simply source the file and the plugin will be installed automatically\n:e unicode.vba\n:so %\n\nAnd afterwards, have a look at the documentation: :h unicode.txt",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13962",
      "filename": "unicode.vba",
      "script_version": "0.8",
      "date": "2010-09-30",
      "vim_version": "7.3",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": " New Release- Fix an issue with configuring the plugin (Thanks jgm)- Code cleanup- Make use of the preview window, when completing  Digraph or Unicode Glyphs- By default, the Digraph Glyphs will now be enabled  using |i_Ctrl-X_CTRL-G| instead of using  Ctrl-X_Ctrl-C which wouldn't work in a terminal- |:UnicodeName| now displays the hexadecimal Unicode  Codepoint instead of the decimal one (as this seems  to be the official way to display unicode  codepoints)."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13899",
      "filename": "unicode.vba",
      "script_version": "0.7",
      "date": "2010-09-23",
      "vim_version": "7.3",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "- Determine the Name of a Character using :UnicodeName- the global variable g:enableUnicodeCompletion determines, whether the completion will be loaded automatically"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13680",
      "filename": "unicode-0.6.vba",
      "script_version": "0.6",
      "date": "2010-08-26",
      "vim_version": "7.2",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "- many small bugfixes with regard to error-handling and error displaying- use default netrw_http_cmd (instead of hardwiring wget)- small documentation update (Inlude a snippet of UnicodeData.txt and get rid of Index.txt data)"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12871",
      "filename": "unicode.vba",
      "script_version": "0.5",
      "date": "2010-04-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "New public repository at http://github.com/chrisbra/unicode.vim"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12268",
      "filename": "unicode.vba",
      "script_version": "0.4",
      "date": "2010-02-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "Use UnicodeData.txt to generate Data\n(Index.txt does not contain all glyphs).\nCheck for empty file UnicodeData.txt\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11600",
      "filename": "unicode.vba",
      "script_version": "0.3",
      "date": "2009-10-26",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "Added digraph completion\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11564",
      "filename": "unicode.vba",
      "script_version": "0.2",
      "date": "2009-10-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "Enabled GetLatestVimScripts"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11563",
      "filename": "unicode.vba",
      "script_version": "0.1",
      "date": "2009-10-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "Initial upload"
    }
  ]
}
