{
  "script_id": "1276",
  "display_name": "autoscroll",
  "summary": "autoscroll the screen, see the context of current line clearly",
  "name": "autoscroll",
  "script_type": "utility",
  "description": "auto scroll the screen:\nwhen there are still  certain lines between current line and the top or bottom boundry of the current window, the screen would scroll automatic, so that you can see the context of current line always.\nwhen in insert mode, if current line is quite near the bottom boundry of current window, and if you press enter, some extra blank spaces would appear so that the current line not  be too close to the boundry.",
  "rating_total": "3",
  "rating_votes": "2",
  "downloads": "392",
  "install_details": " \n\n\" File: autoscroll.vim\n\" Author:LiuXiangqian (www.lvying.org)\n\" Version: 0.04\n\" Last Modify: May 6, 2005\n\" ChangeLog:\n\" Version 0.02:\n\"   1.add autoscroll in insert mode \n\"   2.correct(or mistake) some grammar mistakes(or correct ones) in the documentation\n\"   3.separate the Installation part of documentation to Installation and\n\"     Configuration\n\" Version 0.03\n\"   1. some more bug of cursor position mistakes fixed\n\"   2. fix the bug when the cursor is at the end of a line, an <Enter> would make\n\"      a character down to the current line\n\" Version 0.04\n\"   1. fix the bug when the character at the end of the line is a multibyte character\n\"      in insert mode, an <Enter> would pull the last character to the next line.\n\" Installation:\n\" -------------\n\" 1.copy the autoscroll.vim script to  $HOME/.vim/plugin directory or where\n\"   the vim program can find the script at startup. Or you can put autoscroll.vim\n\"   some other place, and then use :so PATH_TO_AUTOSCROLL_SCRIPT/autoscroll.vim \n\"   in $HOME/.vimrc to execute the script. Refer to ':help add-plugin', \n\"   ':help add-global-plugin' and ':help runtimepath' for more details about\n\"   vim plugins. Refer to ':help so' for more details about read Ex commands from\n\"   a file.\n\" 2.Restart vim\n\" Configuration:\n\" -------------\n\" 1.Set topScrollNumber and bottomScrollNumber variable, if you do not\n\"   set these two variables explicitly, they would both get default value of 5.\n\"   TopScrollNumber is the amount of lines above your cursor lines when the\n\"   auto down scroll occurs in normal and insert mode. As you may dope out, \n\"   bottomScrollNumber is the amount of lines down to your cursor line when the\n\"   auto up scroll occurs in normal and insert mode. You may set these \n\"   two variables using let in you .vimrc\n\"   For example,\n\"             let topScrollNumber = 8\n\"             let bottomScrollNumber = 8\n\" 2.Set the updatetime variable. Refer to :help updatetime to see\n\"   what's the meaning of variable updatetime. You may set this variable using\n\"   let in your .vimrc. For example,\n\"             let updatetime = 100\n\"   this variable only affect the auto scroll behavior in normal mode.\n\"   Note: You should set this variable explicitly in your .vimrc.\n\" 3.Set the variable bottomRowNumberInsertMode. This variable would get \n\"   default value of 5 if you don't set it explicitly. This variable is the \n\"   amount of line below your current line when you press Enter to produce a\n\"   new line near the bottom of the screen, if there are not enough lines \n\"   below current line to be displayed, coequal height of blank space would \n\"   be displayed. You may set this variable using let in your .vimrc.\n\"   For example,\n\"             let bottomRowNumberInsertMode = 9\n\" 4.If you use <UP> and <DOWN> to scroll in insert mode, you need no changes\n\"   for the key binding, but if you bind some other keys to scroll in insert\n\"   mode, you have to change your key binding to let it auto scroll at the same \n\"   time. For example, if you bind the key combine Ctrl+k and Ctrl+j to scroll \n\"   up and down in insert mode, you should configure the key binding as below:\n\"           inoremap <C-K> <ESC>:call Check_Scroll()<CR>a<UP>\n\"           inoremap <C-J> <ESC>:call Check_Scroll()<CR>a<DOWN>\n\"   If you want to bind the key <UP> and <DOWN> to other operation in insert\n\"   mode, you have to comment the keymap definition of <UP> and <DOWN> below . \n\" Usage:\n\" -----\n\"   Just enjoy the convenience of see the context of current line all the time.\n\" Known BUGS:\n\" ---------\n\" 1.If you set wrap display and the length of a line is larger than your set of \n\"   textwidth, the cursor would jump back by force and you should quick enough to\n\"   move your cursor rushing across this line, So I suggest set updatetime to \n\"   match your speed of moving the cusor, 100ms is a good choice in my opinion.\n\" 2.The auto scroll act based on lines separate by line break, not lines wraped\n\"   by vim(This may not be suppose to a bug)\n\" 3.If you place the cursor at the second column of one line, and then press <ENTER>, \n\"   the cursor would jump to the beginning of the line and pull the first character to\n\"   next line also, this happens when you are in the insert mode. So you may want to \n\"   bind the auto scroll version of <ENTER> to some other keys such as <C-CR>, Then you\n\"   should change the key binding of <CR> below to\n\"              inoremap <C-CR> <Esc>:call Check_Scroll_Insert()<CR>i<CR>\n\" IMPORTANT ATTENTION:\n\" --------------------\n\" 4.Sometimes, the cursor may be locked, (seems random so far to me, the reason \n\"   remains unknown, but the probability is very very very small), and you can not\n\"   change the position of the cursor and the mode of VIM, if you are using GVIM,\n\"   you can still select  file -> save in the menu bar to save your unsaved files\n\"   since VIM isn't crack except for the lock.\n\"   Unfortunately, if you are using vim in console and there is no gui menu,\n\"   I haven't find a way to save my unsaved file,if you find one,please contact me\n\"   at smartLitchi@gmail.com. Appreciate all your help~~.Before you find one, carefully\n\"   enough to using this plugin in console vim.\n\" Acknowledgement:\n\" ---------------\n\"   This script is base on redhair's autoscroll.vim\n\"   (See x-4-6 in vim board of newsmth.net)\n\"   I should express my appreciate to redhair@smth\n\" TODO: \n\"   I wouldn't add new function to this script except for bug fixes.\n\" Bug Report:\n\" ----------\n\"   Please send an E-mail to smartLitchi@gmail.com if you find an bug, or you\n\"   can send a personal message to truelvying@newsmth. Best wishes.\n\" License:\n\" -------\n\"   This plugin has the same license as vim.\n\n\" If you want to change the key bind <CR> in insert mode, please\n\" change the follow line. Refer to the Known BUGS part 3 for more details\ninoremap <CR> <Esc>:call Check_Scroll_Insert()<CR>i<CR>\n\n\" If you want to change the key bind <UP> and <LEFT> in insert mode\n\" Please change the follow two lines\n\" Refer to the Configuration part 4 for more details.\ninoremap <UP> <ESC>:call Check_Scroll()<CR>a<UP>\ninoremap <DOWN> <ESC>:call Check_Scroll()<CR>a<DOWN>\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4248",
      "filename": "autoscroll_004.vim",
      "script_version": "0.04",
      "date": "2005-05-06",
      "vim_version": "6.0",
      "author": {
        "user_id": "7433",
        "user_name": "litchi",
        "first_name": "xiangqian",
        "last_name": "liu",
        "email": "smartLitchi at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
