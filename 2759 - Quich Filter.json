{
  "script_id": "2759",
  "name": "Quich Filter",
  "summary": "Quickly filter all matches of a string, browse the list, and jump back quickly.",
  "script_type": "utility",
  "description": "This plug-in provides filtering/search functionality to Vim, similar to e.g.\nPSPad. This plug-in offers a number of additional features:\n\n- Further filtering/searching inside the filtered results.\n- Syntaxt highlighting in the filtered results.\n- Show context line around found matches. You can dynamically change the number of lines.\n- Easy jumping to and from the filter buffers.\n\nThe search results are presented in a seperate buffer (and window) and\nthe script offers a number of convenience key-mappings to navigate from one\nresult to the next.\n\nThe default key mappings are as follows:\n\n-------------------------------------------------------------------------------\n    KEY        Description\n-------------------------------------------------------------------------------\nAny buffer:\n    ,f         Filter the current buffer using the line pattern found in\n               register @/, that is the search buffer (your last search).\n    ,F         Ask for a line pattern and filters using that string.\n    ,g         Go to the newest filter window associated with the current\n               buffer. If the current buffer is also a filter window, go to\n               the next associated filter window that is the newest after the\n               current one.\n-------------------------------------------------------------------------------\nFilter buffer:\n    <Enter>    Go to the selected line in the original buffer and keep the filter\n               window open. \n    <S-Enter>  Same as <Enter> but also closes the filter buffer.\n    c/C        Increase/decrease the number of context lines around matches.\n    o          Jump to the currently selected line in the original buffer, but\n               keep the cursor in the filter window.\n    a          Toggle auto follow. If auto follow is on, the original buffer\n               will automatically jump to the line your cursor is on (i.e.\n               it's the same effect as pressing o each time you move the\n               cursor).\n    j/k        Jump to next/previous search result.\n-------------------------------------------------------------------------------\n\n",
  "install_details": "Drop this file in your plug-in directory, e.g. $HOME/vimfiles/plugin or\nC:\\Program Fles\\vim\\vimfiles\\plugin, and it should be automatically sourced\nduring start-up.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13436",
      "filename": "filtering.vim",
      "script_version": "1.0.3.2",
      "date": "2010-07-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "12839",
        "user_name": "nielsadb",
        "first_name": "Niels",
        "last_name": "Aan de Brugh",
        "email": "nielsadb at gmail.com",
        "homepage": ""
      },
      "release_notes": "Unix line endings."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13430",
      "filename": "filtering.vim",
      "script_version": "1.0.3.1",
      "date": "2010-07-29",
      "vim_version": "6.0",
      "author": {
        "user_id": "12839",
        "user_name": "nielsadb",
        "first_name": "Niels",
        "last_name": "Aan de Brugh",
        "email": "nielsadb at gmail.com",
        "homepage": ""
      },
      "release_notes": "Made some functions less dependent on custom mappings."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11349",
      "filename": "filtering.vim",
      "script_version": "1.0.3",
      "date": "2009-09-09",
      "vim_version": "7.0",
      "author": {
        "user_id": "12839",
        "user_name": "nielsadb",
        "first_name": "Niels",
        "last_name": "Aan de Brugh",
        "email": "nielsadb at gmail.com",
        "homepage": ""
      },
      "release_notes": "Fixed error where ,F always searched for \":echo\"."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11308",
      "filename": "filtering.vim",
      "script_version": "1.0.2",
      "date": "2009-09-03",
      "vim_version": "7.0",
      "author": {
        "user_id": "12839",
        "user_name": "nielsadb",
        "first_name": "Niels",
        "last_name": "Aan de Brugh",
        "email": "nielsadb at gmail.com",
        "homepage": ""
      },
      "release_notes": "Another bug found by a helpful user: called FancyEcho instead of s:FancyEcho in a couple of places. This is now fixed."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11304",
      "filename": "filtering.vim",
      "script_version": "1.0.1",
      "date": "2009-09-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "12839",
        "user_name": "nielsadb",
        "first_name": "Niels",
        "last_name": "Aan de Brugh",
        "email": "nielsadb at gmail.com",
        "homepage": ""
      },
      "release_notes": "No longer change the global wrapscan setting. Use an emulation for the j/k keys."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11284",
      "filename": "filtering.vim",
      "script_version": "1.0",
      "date": "2009-08-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "12839",
        "user_name": "nielsadb",
        "first_name": "Niels",
        "last_name": "Aan de Brugh",
        "email": "nielsadb at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}