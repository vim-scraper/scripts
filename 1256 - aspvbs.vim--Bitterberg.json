{
  "script_id": "1256",
  "display_name": "aspvbs.vim -- Bitterberg",
  "summary": "indenting for asp vbs files",
  "name": "aspvbs.vim--Bitterberg",
  "script_type": "indent",
  "description": "Having to write active server pages with visual basic script included is pain enough. Vim eases this and with this automatic indenter even more.\n\nThis script tries to be very smart and will probably fail horribly. Since version 0.4 (there is no 0.3) aspvbs.vim will do indenting based on the context. That means when you are in an html context, the html indenter will be used, otherwise the ASPVBS indenter.\n\nBut wait, there is even more! The script tries to pick up the previous indent of each block, so when you open a new ASP block with <% the indent of the last ASP block will be resumed.\n\nThe script works best when an opening <% and a closing %> are placed on a line on their own. You can most definitely break the script by writing code like '%><html></html><% ...'\n\nHere is an example of its indenting sprinkled with comments:\n\n<%\nfunction baz\n    if asd then\n        bcd\n%> \n<html>\n    <head>\n        <title><%=myTitle%></title>\n    </head>\n    <body>\n<% If myPage = 1 Then %>\n        <table> <!-- the indent of body is continued -->\n            <tr>\n                ...\n            </tr>\n        </table>\n<% End If %> <!-- the indent of < % if mypage = 1 is picked up -->\n    </body> <!-- the indent of </table> is continued\n<%\n        ' the indent of line 4 is continued (inside if)\n        efg\n    end if ' if asd then is closed\n\n    ' normal asp indent here\n    if foo then\n        select case blah\n            case foo\n                Response.Redirect \"google\"\n        end select\n    else\n        Response.Redirect \"yahoo\"\n    end if\n    =this_is_a_statement()\n%>\n</html>\nTest1<%testin1%>Test2<%testin2%>test3<%statement\n\n    ' for the previous line, the html indenter wins\n    =this_is_a_statement2()\nend function ' close function baz\n%>\n\n",
  "install_details": "Copy the script into your $VIMRUNTIME/indent/ folder and make sure you use the filetype feature. You should at least have \"filetype indent on\" in your vimrc",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4243",
      "filename": "aspvbs.vim",
      "script_version": "0.4",
      "date": "2005-05-04",
      "vim_version": "6.0",
      "author": {
        "user_id": "1132",
        "user_name": "tibit",
        "first_name": "Tilmann",
        "last_name": "Bitterberg",
        "email": "me at tibit.org",
        "homepage": "http://tibit.org/"
      },
      "release_notes": "Major feature enhancements. Context based indenting, resuming indent and tons of other stuff."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4196",
      "filename": "aspvbs.vim",
      "script_version": "0.2",
      "date": "2005-04-23",
      "vim_version": "6.0",
      "author": {
        "user_id": "1132",
        "user_name": "tibit",
        "first_name": "Tilmann",
        "last_name": "Bitterberg",
        "email": "me at tibit.org",
        "homepage": "http://tibit.org/"
      },
      "release_notes": "Incorporated case insensity fixes by Tavish Robinson,\nadded indent on ending keywords,\nadded class keyword,\nspeed improvements"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4141",
      "filename": "aspvbs.vim",
      "script_version": "0.1",
      "date": "2005-04-09",
      "vim_version": "6.0",
      "author": {
        "user_id": "1132",
        "user_name": "tibit",
        "first_name": "Tilmann",
        "last_name": "Bitterberg",
        "email": "me at tibit.org",
        "homepage": "http://tibit.org/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
