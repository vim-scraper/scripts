{
  "script_id": "1690",
  "name": "IndentConsistencyCop",
  "summary": "Is the buffer's indentation consistent and does it conform to tab settings?",
  "script_type": "utility",
  "description": "DESCRIPTION:\n  In order to achieve consistent indentation, you need to agree on the\n  indentation width (e.g. 2, 4 or 8 spaces), and the indentation method (only\n  tabs, only spaces, or a mix of tabs and spaces that minimizes the number of\n  spaces and is called 'softtabstop' in VIM). Unfortunately, different people\n  use different editors and cannot agree on \"the right\" width and method.\n  Consistency is important, though, to make the text look the same in\n  different editors and on printouts. If any editor inadvertently converts\n  tabs and spaces, version control and diff'ing will be much harder to do. \n\n  The IndentConsistencyCop examines the indent of the buffer and analyzes the\n  used indent widths and methods. If there are conflicting ones or if bad\n  combinations of tabs and spaces are found, it alerts you and offers help in\n  locating the offenders - just like a friendly policeman: \n\n  :IndentConsistencyCop\n  Found inconsistent indentation in this buffer; generated from these\n  conflicting settings:\n  - tabstop (1838 of 3711 lines) <- buffer setting\n  - 4 spaces (33 of 3711 lines)\n  - bad mix of spaces and tabs (4 of 3711 lines)\n\t[I]gnore, (H)ighlight wrong indents...: h\n  What kind of inconsistent indents do you want to highlight?\n\tNot [b]uffer settings (sts4), Not best (g)uess (tab), Not (c)hosen\n\tsetting..., (I)llegal indents only: g\n  Marked 180 incorrect lines.\n\n  If the buffer contents are okay, the IndentConsistencyCop can evaluate\n  whether VIM's buffer settings are compatible with the indent used in the\n  buffer. The friendly cop offers to correct your buffer settings if you run\n  the risk of screwing up the indent consistency with your wrong buffer\n  settings: \n  \n  :IndentConsistencyCop\n  The buffer's indent settings are inconsistent with the used indent '8\n  spaces'; these settings must be changed:\n  - expandtab from 0 to 1\n  How do you want to deal with the inconsistency?\n\t[I]gnore, (C)hange: c\n  The buffer settings have been changed: tabstop=8 softtabstop=0 shiftwidth=8\n  expandtab\n\n  The IndentConsistencyCop is only concerned with the amount of whitespace\n  from column 1 to the first visible character; it does not check the\n  alignment of tables, equals signs in variable assignments, etc. Neither does\n  it know any specifics about programming languages, or your personal\n  preferred indentation style. \n\nUSAGE:\n  Start the examination of the current buffer or range via:\n\t:[range]IndentConsistencyCop\n  The triggering can be done automatically for configurable filetypes with the\n  autocmds defined in IndentConsistencyCopAutoCmds.vim (vimscript #1691). \n\n  If you chose to highlight incorrect indents, either re-execute the\n  IndentConsistencyCop to update the highlighting, or execute\n\t:IndentConsistencyCopOff\n  to remove the highlightings. \n\n  If you just want to check a read-only file, or do not intend to modify the\n  file, you don't care if VIM's buffer settings are compatible with the used\n  indent. In this case, you can use \n\t:[range]IndentRangeConsistencyCop\n  instead of :IndentConsistencyCop. ",
  "install_details": "INSTALLATION:\n  Put the script into your user or system VIM plugin directory (e.g.\n  ~/.vim/plugin). \n\nDEPENDENCIES:\n  - Requires VIM 7.0 or higher. \n\nCONFIGURATION:\n  For a permanent configuration, put the following settings into your vimrc\n  file (see :help vimrc).  \n\n      \t\t\t\t   *g:indentconsistencycop_highlighting*\n  You can select method(s) of highlighting incorrect lines via\n  g:indentconsistencycop_highlighting; the default fills the search pattern,\n  jumps to the first error, sets 'list', uses the 'Error' highlighting and\n  folds away the correct lines. \n  The variable defines the highlighting methods of incorrect lines, when this is\n  requested by the user. Multiple methods can be combined by concatenating the\n  values. The changes done for highlighting are undone when highlighting is\n  removed via :IndentConsistencyCopOff. \n      s - Fill search pattern with all incorrect lines, so that you navigate\n          through all incorrect lines with n/N. \n      g - Jump to the first error. \n      l - As a visualization aid, execute ':setlocal list' to see difference\n          between tabs and spaces. \n      m - Use :2match error highlighting to highlight the wrong indent via the\n          'Error' highlighting group. This is especially useful if you don't\n          use the search pattern in combination with 'set hlsearch' to locate\n          the incorrect lines. \n      f:{n} (n = 0..9) - Fold correct lines with a context of {n} lines (like\n          in VIM diff mode). \n      TODO:\n      q - Populate quickfix list with all incorrect lines. IDEA: Use :cgetexpr. \n\n      \t\t\t     *g:indentconsistencycop_non_indent_pattern*\n  Some comment styles use additional whitespace characters inside the\n  comment block to neatly left-align the comment block, e.g. this is often\n  used in Java and C/C++ programs:\n      /* This is a comment that spans multiple \n       * lines; neatly left-aligned with asterisks. \n       */\n  The IndentConsistencyCop would be confused by these special indents, so the \n  non-indent pattern defined in g:indentconsistencycop_non_indent_pattern\n  removes these additional whitespaces from the indent when evaluating lines. ",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8995",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.20.017",
      "date": "2008-07-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BF: Undefined variable l:isEntireBuffer in IndentBufferConsistencyCop().  "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8982",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.20.016",
      "date": "2008-07-21",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: Added b:indentconsistencycop_result buffer-scoped dictionary containing the results of the check, which can be used by other integrations. \nAlso check consistency of buffer settings if the buffer/range does not contain indented text. Inconsistent indent settings can then be corrected with a queried setting. \nBF: Clear previous highlighting if buffer/range now does not contain indented text. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8841",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.10.012",
      "date": "2008-06-23",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Minor change: Added -bar to all commands that do not take any arguments, so that these can be chained together. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8359",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.10.011",
      "date": "2008-02-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Improved the algorithm so that 'softtabstop' is recognized even when a file only has small indents with either (up to 7) spaces or tabs, but no tab + space combination. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7898",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.00.010",
      "date": "2007-11-08",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BF: In an inconsistent and large buffer/range that has only one or a few small inconsistencies and one dominant (i.e. 99%) setting, the text \"Some minor / inconclusive potential settings have been omitted.\" is not printed. \nENH: Print \"noexpandtab/expandtab\" instead of \" expandtab to 0/1\", as the user would :setlocal the setting. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7199",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.00.009",
      "date": "2007-06-04",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: Improved detection accuracy for soft tabstops when the maximum indent is too small for a solid assessment. When the maximum indent of the buffer is not enough to be sure of the indent settings (i.e. differentiating between soft tabstops and spaces), an inconsistent indent was reported, even though it is much more likely that the indent is consistent with \"soft tabstop n\", but that wasn't recognized because of the small indents used in the file. If allowed, the cop now examines the buffer settings to possibly turn around the verdict of \"inconsistent indent\". "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6933",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.00.008",
      "date": "2007-04-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Allowing user to override wrongly found consistent setting (e.g. 'sts1' instead of 'tab') by choosing 'Wrong, choose correct setting...' in the IndentBufferConsistencyCop. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6370",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "0.07",
      "date": "2006-11-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Corrected unreasonable assumption of a consistent small indent setting (of 1 or 2 spaces) when actually only some wrong spaces spoil the consistency. Now, a perfect consistent rating is only accepted if its absolute rating number is also the maximum rating. \nBF: Avoiding runtime error in IndentBufferInconsistencyCop() if s:ratings is empty. \nBF: Suppressing 'Not buffer setting' option if the buffer setting is inconsistent ('badset'), which threw an exception when selected. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6353",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "0.05",
      "date": "2006-10-30",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Improved g:indentconsistencycop_non_indent_pattern to also allow ' *\\t' and ' *****' comments. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6329",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "0.04",
      "date": "2006-10-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}