{
  "script_id": "1690",
  "display_name": "IndentConsistencyCop",
  "summary": "Is the buffer's indentation consistent and does it conform to tab settings?",
  "name": "IndentConsistencyCop",
  "script_type": "utility",
  "description": "DESCRIPTION\nIn order to achieve consistent indentation, you need to agree on the\nindentation width (e.g. 2, 4 or 8 spaces), and the indentation method (only\ntabs, only spaces, or a mix of tabs and spaces that minimizes the number of\nspaces and is called 'softtabstop' in Vim). Unfortunately, different people\nuse different editors and cannot agree on \"the right\" width and method.\nConsistency is important, though, to make the text look the same in different\neditors and on printouts. If any editor inadvertently converts tabs and\nspaces, version control and diff'ing will be much harder to do. \n\nThe IndentConsistencyCop examines the indent of the buffer and analyzes the\nused indent widths and methods. If there are conflicting ones or if bad\ncombinations of tabs and spaces are found, it alerts you and offers help in\nlocating the offenders - just like a friendly policeman: \n\n    :IndentConsistencyCop\n    Found inconsistent indentation in this buffer; generated from these \n    conflicting settings: \n    - tabstop (1838 of 3711 lines) <- buffer setting \n    - 4 spaces (33 of 3711 lines) \n    - bad mix of spaces and tabs (4 of 3711 lines) \n\t[I]gnore, (H)ighlight wrong indents...: h \n    What kind of inconsistent indents do you want to highlight? \n\tNot [b]uffer settings (sts4), Not best (g)uess (tab), Not (c)hosen \n\tsetting..., (I)llegal indents only: g \n    Marked 180 incorrect lines. \n\nIf the buffer contents are okay, the IndentConsistencyCop can evaluate whether\nVim's buffer settings are compatible with the indent used in the buffer. The\nfriendly cop offers to correct your buffer settings if you run the risk of\nscrewing up the indent consistency with your wrong buffer settings: \n\n    :IndentConsistencyCop\n    The buffer's indent settings are inconsistent with the used indent '8 \n    spaces'; these settings must be changed: \n    - expandtab from 0 to 1 \n    How do you want to deal with the inconsistency? \n\t[I]gnore, (C)hange: c \n    The buffer settings have been changed: tabstop=8 softtabstop=0 shiftwidth=8 \n    expandtab \n\nThe IndentConsistencyCop is only concerned with the amount of whitespace from\ncolumn 1 to the first visible character; it does not check the alignment of\ntables, equals signs in variable assignments, etc. Neither does it know any\nspecifics about programming languages, or your personal preferred indentation\nstyle. \n\nRELATED WORKS\n- IndentConsistencyCopAutoCmds (vimscript #1691) complements this plugin. It\n  automatically triggers the IndentConsistencyCop for certain filetypes when\n  loading the buffer and optionally also on each write. \n- Indent Finder (vimscript #513) is a Python script and Vim plugin that scans\n  any loaded buffer and configures the appropriate indent settings. \n\nUSAGE\nStart the examination of the current buffer or range via: \n    :[range]IndentConsistencyCop\nThe triggering can be done automatically for configurable filetypes with the\nautocmds defined in IndentConsistencyCopAutoCmds.vim (vimscript #1691). \n\nIf you chose to highlight incorrect indents, either re-execute the\nIndentConsistencyCop to update the highlighting, or execute \n    :IndentConsistencyCopOff\nto remove the highlightings. \n\nIf you just want to check a read-only file, or do not intend to modify the\nfile, you don't care if Vim's buffer settings are compatible with the used\nindent. In this case, you can use \n    :[range]IndentRangeConsistencyCop\ninstead of :IndentConsistencyCop. ",
  "install_details": "INSTALLATION\nThis script is packaged as a vimball. If you have the \"gunzip\" decompressor\nin your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress\nthe archive first, e.g. using WinZip. Inside Vim, install by sourcing the\nvimball or via the :UseVimball command. \n    vim IndentConsistencyCop.vba.gz\n    :so %\nTo uninstall, use the :RmVimball command. \n\nDEPENDENCIES\n- Requires Vim 7.0 or higher. \n\nCONFIGURATION\nFor a permanent configuration, put the following commands into your vimrc: \n\nYou can select method(s) of highlighting incorrect lines via\ng:indentconsistencycop_highlighting; the default fills the search pattern,\njumps to the first error, sets 'list', uses the 'Error' highlighting and folds\naway the correct lines. \nThe variable defines the highlighting methods of incorrect lines, when this is\nrequested by the user. Multiple methods can be combined by concatenating the\nvalues. The changes done for highlighting are undone when highlighting is\nremoved via :IndentConsistencyCopOff. \n    s - Fill search pattern with all incorrect lines, so that you navigate\n        through all incorrect lines with n/N. \n    g - Jump to the first error. \n    l - As a visualization aid, execute ':setlocal list' to see difference\n        between tabs and spaces. \n    m - Use :2match error highlighting to highlight the wrong indent via the\n        'IndentConsistencyCop' highlight group. This is especially useful if\n        you don't use the search pattern in combination with 'set hlsearch'\n        to locate the incorrect lines. \n        You can customize this by defining / linking the\n        'IndentConsistencyCop' highlight group before this script is\n        sourced: \n    \thighlight link IndentConsistencyCop Error\n    f:{n} (n = 0..9) - Fold correct lines with a context of {n} lines (like\n        in Vim diff mode). \n    TODO:\n    q - Populate quickfix list with all incorrect lines. Idea: Use :cgetexpr.\n\n    let g:indentconsistencycop_highlighting = 'sglmf:3'\n\nSome comment styles use additional whitespace characters inside the comment\nblock to neatly left-align the comment block, e.g. this is often used in Java\nand C/C++ programs: \n    /* This is a comment that spans multiple \n     * lines; neatly left-aligned with asterisks. \n     */\nThe IndentConsistencyCop would be confused by these special indents, so the\nnon-indent pattern defined in g:indentconsistencycop_non_indent_pattern\nremoves these additional whitespaces from the indent when evaluating lines. \n    let g:indentconsistencycop_non_indent_pattern = ' \\*[*/ \\t]'",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14665",
      "filename": "IndentConsistencyCop.vba.gz",
      "script_version": "1.21",
      "date": "2010-12-31",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- Added b:indentconsistencycop_result.isIgnore to allow the IndentConsistencyCopAutoCmds integration to suspend further invocations of the cop in the buffer. \n- BUG: :IndentRangeConsistencyCop didn't report inconsistencies at all because of a bad conditional statement introduced in 1.20.014. \n- Using separate autoload script to help speed up Vim startup. \n- Added separate help file and packaging the plugin as a vimball. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8995",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.20.017",
      "date": "2008-07-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BF: Undefined variable l:isEntireBuffer in IndentBufferConsistencyCop().  "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8982",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.20.016",
      "date": "2008-07-21",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: Added b:indentconsistencycop_result buffer-scoped dictionary containing the results of the check, which can be used by other integrations. \nAlso check consistency of buffer settings if the buffer/range does not contain indented text. Inconsistent indent settings can then be corrected with a queried setting. \nBF: Clear previous highlighting if buffer/range now does not contain indented text. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8841",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.10.012",
      "date": "2008-06-23",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Minor change: Added -bar to all commands that do not take any arguments, so that these can be chained together. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8359",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.10.011",
      "date": "2008-02-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Improved the algorithm so that 'softtabstop' is recognized even when a file only has small indents with either (up to 7) spaces or tabs, but no tab + space combination. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7898",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.00.010",
      "date": "2007-11-08",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BF: In an inconsistent and large buffer/range that has only one or a few small inconsistencies and one dominant (i.e. 99%) setting, the text \"Some minor / inconclusive potential settings have been omitted.\" is not printed. \nENH: Print \"noexpandtab/expandtab\" instead of \" expandtab to 0/1\", as the user would :setlocal the setting. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7199",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.00.009",
      "date": "2007-06-04",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: Improved detection accuracy for soft tabstops when the maximum indent is too small for a solid assessment. When the maximum indent of the buffer is not enough to be sure of the indent settings (i.e. differentiating between soft tabstops and spaces), an inconsistent indent was reported, even though it is much more likely that the indent is consistent with \"soft tabstop n\", but that wasn't recognized because of the small indents used in the file. If allowed, the cop now examines the buffer settings to possibly turn around the verdict of \"inconsistent indent\". "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6933",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "1.00.008",
      "date": "2007-04-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Allowing user to override wrongly found consistent setting (e.g. 'sts1' instead of 'tab') by choosing 'Wrong, choose correct setting...' in the IndentBufferConsistencyCop. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6370",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "0.07",
      "date": "2006-11-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Corrected unreasonable assumption of a consistent small indent setting (of 1 or 2 spaces) when actually only some wrong spaces spoil the consistency. Now, a perfect consistent rating is only accepted if its absolute rating number is also the maximum rating. \nBF: Avoiding runtime error in IndentBufferInconsistencyCop() if s:ratings is empty. \nBF: Suppressing 'Not buffer setting' option if the buffer setting is inconsistent ('badset'), which threw an exception when selected. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6353",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "0.05",
      "date": "2006-10-30",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Improved g:indentconsistencycop_non_indent_pattern to also allow ' *\\t' and ' *****' comments. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6329",
      "filename": "IndentConsistencyCop.vim",
      "script_version": "0.04",
      "date": "2006-10-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
