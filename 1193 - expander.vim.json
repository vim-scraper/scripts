{
  "script_id": "1193",
  "display_name": "expander.vim",
  "summary": "flexible expansion of abbreviations/templates",
  "name": "expander.vim",
  "script_type": "utility",
  "description": "expander.vim requires Vim's Python interface-----\n\nexpander expands abbreviations. Its abbreviations can take arguments that are repeated in the expanded text. For instance, for C++ iterators you can type:\n\n@fib@vector<char>@vec<C-e>\n\nand this expands to:\n\nfor(vector<char>::iterator i = vec.begin(); i != vec.end(); ++i) {\n    *\n}\n\nWith your cursor in the place of the *. Defining new abbreviations is easy. The above one was defined like this:\n\n\"fib\": \"\"\"\nfor($1::iterator i = $2.begin(); i != $2.end(); ++i) {\n$#$0\n}\"\"\"\n\nWhen expander expands this, it replaces the string $# with spaces equal to your shiftwidth, it puts the cursor at $0, and it replaces $1, $2, etc, with the first, second, etc, arguments.",
  "rating_total": "0",
  "rating_votes": "0",
  "downloads": "227",
  "install_details": "Untar expander.tar.bz2 in your ~/.vim so that expander.vim goes into plugin/ and expander.txt goes into doc/. Run :helptags ~/.vim/doc.\n:help expander",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=3814",
      "filename": "expander.tar.bz2",
      "script_version": "1",
      "date": "2005-01-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "6802",
        "user_name": "leftfist",
        "first_name": "Michael",
        "last_name": "Benfield",
        "email": "leftfist at mac.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
