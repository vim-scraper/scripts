{
  "script_id": "3209",
  "display_name": "Quotes",
  "summary": "Minimal but smart quote handling for programming",
  "name": "Quotes",
  "script_type": "utility",
  "description": "Useful handling of quote-symbols for programming, without becoming too complicated or restrictive.\n\nThis script is designed so the sequence of keystrokes you would normally type (without any scripted assistance) yields the same result as with this script enabled. But that doesn\\\\&#039t mean you have to.\n\n- Typing \\\\\\\" introduces a new string and puts the cursor inside unless one of the following cases applies.\n- Typing \\\\\\\" just before the end of a string jumps out of the string (so you can continue typing).\n- Typing \\\\\\\" inside a string introduces a pair of escaped quote-symbols and puts the cursor in between.\n- Typing \\\\\\\" inside a string right after an escape character (i.e. an odd number of back-slashes) just inserts a \\\\\\\".\n- Typing \\\\\\\" just before \\\\\\\\\\\\\\\" inside a string jumps over the \\\\\\\\\\\\\\\", so (again) you can continue typing.\n\nIt\\\\&#039s pretty minimal, but useful I hope.\n\nThis is a 0.1 version, it has not yet been heavily used.",
  "rating_total": "0",
  "rating_votes": "0",
  "downloads": "42",
  "install_details": "Drop in plugins directory. Run RemapQuoteForBuffer inside each buffer (autocmd!) where you want this enabled.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13619",
      "filename": "quotes.vim",
      "script_version": "0.1",
      "date": "2010-08-18",
      "vim_version": "7.0",
      "author": {
        "user_id": "12839",
        "user_name": "nielsadb",
        "first_name": "Niels",
        "last_name": "Aan de Brugh",
        "email": "nielsadb at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
