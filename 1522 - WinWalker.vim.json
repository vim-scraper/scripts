{
  "script_id": "1522",
  "display_name": "WinWalker.vim",
  "summary": "Vim 7 windows navigator/manager",
  "name": "WinWalker.vim",
  "script_type": "utility",
  "description": "  Features:                                            *WW_Features* {{{~\n\n   -   Navigate and manage windows and layouts with blinding speed!\n\n   -   Multiple window operations are faster and easier because it creates\n       a window navigation and management mode where all window commands\n       are familiar single chars,  i.e.  h,H,^H  and j,J,^J  etc.  If you\n       weren't using Vim in full-screen mode, you'll start considering it.\n\n   -   More added functionality:\n\n       -   Better [im]movability:\n\n           -   Enhanced push/drag for windows and buffers.\n\n           -   Push/drag/exchange buffers between windows, and windows\n               between tabs.  Use adjacent tabs as if they were extensions\n               of the current visible screen.\n           \n           -   Constrained size and placement.  Windows can be 'attached'\n               to walls or other windows.\n\n       -   Quick search/jump to any window in any tab by giving the first\n           unique char(s).  It jumps to a buffer's window, instead of the\n           default action of editing buffers in the current window.\n\n       -   More intuitive for many operations:\n           \n           -   Incremental resizing is easier, using the [HJKL] and\n               [^h^j^k^l].\n\n           -   Resize in the direction specified, unlike  wincmd + - < > \n\n           -   Windows move/push past each other more like you'd expect.\n               They can push 'between', instead of just 'maximize at far\n               side'.\n\n       -   Other usability stuff:\n\n           -   A window-level jump list for ^I/^O  movement.\n\n           -   O/^O  as a tab-capable alternative to ^Wo .\n\n           -   Various shortcuts to help keep you from breaking your\n               stride, i.e. to  :edit,  :ex  mode, sessions, macros, remapping\n\n   -   All the commands are presented as a prompt menu in the command line\n       so forgetting stuff isn't a problem.\n\n   -   Many of the commands are the same as the default Vim window  ^W  and\n       'wincmd' for easy transition, others are shifted around to be more\n       consistent.\n\n   -   Different invocation modes:  |WW_timeoutlen| for menu, key pass-through.\n       The goal is to have the menu mode there when you want it, and keep\n       quiet otherwise.  Experiment with the different methods to find\n       what works best for you.\n\n\n\n  Useful Examples:                                            *WW_Useful_Examples* {{{~\n\n    ... Or, 'How is this going to help me?'\n\n\n    Ergonomics:\n\n        Overall speed dealing with multiple windows.  Try it out:\n\n        -   Start the WinWalker menu, ^W\n        -   Open a new tab with  'N'\n        -   Open a few windows with  'n' and 'v'\n        -   Jump around a little with  '[hljk]'\n        -   Put some files in them with 'e'\n        -   Push some around with '[HLJK]'\n        -   Smack them all down with 'q'\n\n        By now you should have a feel for the difference it makes to have\n        single keys to deal with the window system.\n\n\n    AutoResizing:\n\n        -   Your screen/terminal/GUI size will no longer cramp your style.\n            Create windows that are always big enough.\n\n            Example:  You have several windows open, vertical and\n            horizontal, which you set to 80 columns, but you only have\n            120 or whatever.\n\n            -   Quickly visit each window, set the dimensions with 'c'.\n                See |WW_Misc_Menu| => |WW_presets| if you want to change\n                the values.\n            \n            -   For more individualized sizing,  'grow' the window to\n                whatever size makes sense, and use the\n                |WW_Attach_Constrain_Menu| -> lc 'lock columns' (and/or\n                'll') command to cause the window to resize itself to the\n                current size each time it is entered.\n\n            Now all those windows will resize themselves each time they are\n            entered.\n\n    Templates:\n\n    -   Store a tab to a session with the windows arranged how you\n        want.\n\n    -   Create a macro key to retrieve the template like:\n\n        <F2>    srsessname^M\n\n                s               save menu\n                 r              restore\n                  sessname      name of the session (without Session. or .vim )\n                          ^M    literal carriage return, with ^V^M or ^Q^M\n                    \n\n    Keeping Track Of Buffers:\n\n        If you're using TabLineSet.vim with the verbose option, you'll be\n        able to see all open buffers in the tabline (especially if you have\n        the 'Tabline wrapping patch' installed).\n\n        The find, '/', command will show you all loaded buffers, or '?' for\n        all buffers.\n\n",
  "install_details": "        -   Unzip the distribution file above your plugin to extract:\n\n                plugin/WinWalker.vim\n                plugin/Char_menu.vim\n                doc/WinWalker.txt\n\n\n        -   Set up a key map.  I.e.\n\n                nmap <silent> <Leader>w :call WinWalkerMenu()<CR>\n\n                    Default.  I like it mapped to ^W, since I'm used to\n                    hitting ^W for windows stuff, and WinWalker is mostly a\n                    superset of the standard ^W/wincmd commands.\n\n        -   Look through the |WW_Misc_Menu| and |WW_Customizing| for other\n            options to change.\n\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5784",
      "filename": "WinWalker.2.2.zip",
      "script_version": "2.2",
      "date": "2006-05-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "2467",
        "user_name": "earnold",
        "first_name": "Eric",
        "last_name": "Arnold",
        "email": "eric_p_arnold@yahoo.com",
        "homepage": ""
      },
      "release_notes": "-\tRevamped window jump list ( ^I and ^O ); better\ntracking, cleanup, and display.\n-\tFixed a few problems with the find command and\nmenu handler returning early\n-\tSeparated startup and menu timeoutlen[s].\n-\tUpdated help file.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5707",
      "filename": "WinWalker.2.1.zip",
      "script_version": "2.1",
      "date": "2006-05-16",
      "vim_version": "7.0",
      "author": {
        "user_id": "2467",
        "user_name": "earnold",
        "first_name": "Eric",
        "last_name": "Arnold",
        "email": "eric_p_arnold@yahoo.com",
        "homepage": ""
      },
      "release_notes": "-\tadded 'follow' option, \n-\t'c' preset now sets the sticky auto-resize, \n\tline/column values, \n-\twindows and buffers auto-resize separately, \n-\tsmall cmdheight bug, \n-\tsmarter hondling of 'previous' window, \n-\tvarious sizing fixes, \n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5621",
      "filename": "WinWalker.2.0.zip",
      "script_version": "2.0",
      "date": "2006-04-27",
      "vim_version": "7.0",
      "author": {
        "user_id": "2467",
        "user_name": "earnold",
        "first_name": "Eric",
        "last_name": "Arnold",
        "email": "eric_p_arnold@yahoo.com",
        "homepage": ""
      },
      "release_notes": "-\tConstrained size and placement.  Windows can be\n'attached' to walls or other windows.\n-\tAdded key feedkeys() macros\n-\tSessions remember WinWalker constraints\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5596",
      "filename": "WinWalker.1.2.1.zip",
      "script_version": "1.2.1",
      "date": "2006-04-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "2467",
        "user_name": "earnold",
        "first_name": "Eric",
        "last_name": "Arnold",
        "email": "eric_p_arnold@yahoo.com",
        "homepage": ""
      },
      "release_notes": "Restored accidentally deleted function, kill spurious debug msg"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5592",
      "filename": "WinWalker.1.2.zip",
      "script_version": "1.2",
      "date": "2006-04-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "2467",
        "user_name": "earnold",
        "first_name": "Eric",
        "last_name": "Arnold",
        "email": "eric_p_arnold@yahoo.com",
        "homepage": ""
      },
      "release_notes": "-\thandle copen and exchange/push\n-\tfixed searching by bufnr bug\n-\tswitch to Unix file format\n-\tadded session quick-save\n-\trevamped help and help folding\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5588",
      "filename": "WinWalker.zip",
      "script_version": "1.1",
      "date": "2006-04-21",
      "vim_version": "7.0",
      "author": {
        "user_id": "2467",
        "user_name": "earnold",
        "first_name": "Eric",
        "last_name": "Arnold",
        "email": "eric_p_arnold@yahoo.com",
        "homepage": ""
      },
      "release_notes": " -   Added help extraction to standard help\n -   Tweaked to handle Taglist.vim\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5581",
      "filename": "WinWalker.zip",
      "script_version": "1.0",
      "date": "2006-04-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "2467",
        "user_name": "earnold",
        "first_name": "Eric",
        "last_name": "Arnold",
        "email": "eric_p_arnold@yahoo.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
