{
  "script_id": "367",
  "display_name": "DirDo.vim",
  "summary": "Performs Vim commands over files recursively under multiple directories.",
  "name": "DirDo.vim",
  "script_type": "utility",
  "description": "This plugin is like :argdo but it works recursively under a directory (or\nmultiple directories).  The limitation for :argdo is that it does not glob\nthe files inside the subdirectories.  DirDo works in a similar manner but\nyou're allowed to specify multiple directories (good for refactoring code\nand modifying files in a deep hierarchy).  DirDo also globs the files in\nthe subdirectories so you can make sure an operation is performed\nconsistantly.",
  "install_details": "REQUIREMENTS:\n  - The :argdo command in Vim 6.0\nPut this file in your ~/.vim/plugin directory.\n\nThe syntax of the commands:\n\nFirst we need to set what directory we would like to perform this\ncommand on\n\n    :DirDoDir [/my/directory1] [/my/directory2] [/my/directory3]\n\n    or\n\n    :DDD [/my/directory1] [/my/directory2] [/my/directory3]\n\nIf no argument is given, then it'll display the directories that you're\ngoing to work on and let you edit them by separating them with commas\n(',')\n\nYou can also use the following command to add a directory to the DirDoDir\nvariable:\n\n    :DirDoAdd [/my/dir]\n\n    or\n\n    :DDA [/my/dir]\n\nIf you do not give an argument to DDA, it'll add the current working\ndirectory to the DirDoDir variable.\n\nThen we set the file glob pattern\n\n    :DirDoPattern [file glob pattern1] [file glob pattern2] ...\n\n    or\n\n    :DDP [file glob pattern1] [file glob pattern2] ...\n\nIf no argument is given, then it'll display the patterns and let you\nedit them (separate each pattern with spaces).\n\nThen, you can do:\n\n    :DirDo [commands]\n\n    or\n\n    :DDO [commands]\n\nto executes the commands on each file that matches the glob pattern\nrecursively under the directories that you have specified.  The format of\n[commands] is just like what you do on :argdo. See :help argdo for\ndetails.\n\nIf no argument is given, then it'll reuse the last command.\n\nExamples:\n\nReplace all the instaces of \"Foo\" to \"Bar\" in all the Java or C files under\nthe directory /my/directory and its subdirectories, confirming each match:\n\n    :DDD /my/directory (or just :DDD<CR> and type it in)\n    :DDP *.java *.c (or just :DDP<CR> and type it in)\n    :DDO %s/Foo/Bar/gce | update\n\n(See :h argdo for the commands after DDO.)\n\nSame scenario but replacing \"Bar\" with \"Baz\" without confirmation for each\nmatch (note the directory and patterns are saved):\n\n    :DDO %s/Bar/Baz/ge | update\n\n(Since 1.2) There is a command called DirDoFast where you can set the\ndirectory, pattern, and command at once.  Note that your arguments need to\nbe escaped if there is an space to it, otherwise Vim will break up the\narguments incorrectly.  The syntax is:\n\n    :DirDoFast [directories] [patterns] command\n\n    or\n\n    :DDF [directories] [patterns] command\n\nMultiple directories need to be separated by comma.  Patterns need to be\nseparated by spaces.  Since space is used by Vim to separate the command\narguments, ALL spaces in the directory, pattern, or command need to be\nescaped.  For example, the last command using DDF would look like:\n\n:DDF /my/directory *.java\\ *.c %s/Foo/Bar/gce\\ |\\ update\n\nIf you only give 2 arguments to :DDF, you assume the directory is set to\n\".\".\n\nIf you only give 1 argument to :DDF, you assume the directory is set to\n\".\" and the pattern is set to \"*\".\n\n(Since 1.3) There is a command called DirReplace that simplifies the\nmulti-directory string replace procedure.  Essentially, it is the same\nas executing DirDoFast with a directory, pattern, and command (as \ns/[regex_pattern]/[replacement/gce | update).\n\n    :DirReplace\n\n    or\n\n    :DR\n\nYou will be asked for the directories, glob patterns, regex string, and\nthe replacement.\n\nThere is an option to run DirDo with less verbosity, to toggle the\nsetting, run:\n\n    :DirDoVerbose\n\n    or\n\n    :DDV\n\nYou can also set the following variables in your .vimrc to set the default\ndirectory and pattern.  This is good for pointing to the directories for\ncode refactoring:\n\nlet g:DirDoPattern = \"...\"\n\nlet g:DirDoDir = \"...\"\n\nFor example, if you want by default have the command apply on all your C,\nC++, and Java source, you can set the DirDoPattern to:\n\nlet g:DirDoPattern = \"*.c *.cpp *.java\"\n\nIf you want to apply your changes to /dir1, /dir2, and /dir3, you can do:\n\nlet g:DirDoDir = \"/dir1,/dir2,/dir3\"\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4583",
      "filename": "DirDo.vim",
      "script_version": "1.3",
      "date": "2005-09-14",
      "vim_version": "6.0",
      "author": {
        "user_id": "275",
        "user_name": "wlee",
        "first_name": "William",
        "last_name": "Lee",
        "email": "wl1012 at yahoo.com",
        "homepage": "http://wlee.net"
      },
      "release_notes": "Added the DirReplace command.  Fixed a bug on the directory listing that prevents DirDo from functioning properly."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2072",
      "filename": "DirDo.vim",
      "script_version": "1.2",
      "date": "2003-06-12",
      "vim_version": "6.0",
      "author": {
        "user_id": "275",
        "user_name": "wlee",
        "first_name": "William",
        "last_name": "Lee",
        "email": "wl1012 at yahoo.com",
        "homepage": "http://wlee.net"
      },
      "release_notes": "Added the DirDoFast command so you can set directory, pattern, and command at once.  Fixed bug where the unix hidden file will not show up in the file list.  Fixed bug where ~ in the path does not work."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1151",
      "filename": "DirDo.vim",
      "script_version": "1.1",
      "date": "2002-08-20",
      "vim_version": "6.0",
      "author": {
        "user_id": "275",
        "user_name": "wlee",
        "first_name": "William",
        "last_name": "Lee",
        "email": "wl1012 at yahoo.com",
        "homepage": "http://wlee.net"
      },
      "release_notes": "Added the option :DirDoAdd (:DDA) to add the current directory (getcwd()) to the list of directories that you want to apply DirDo on.  This is useful if you want to construct your list of DirDo directories quickly."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1089",
      "filename": "DirDo.vim",
      "script_version": "1.0",
      "date": "2002-08-07",
      "vim_version": "6.0",
      "author": {
        "user_id": "275",
        "user_name": "wlee",
        "first_name": "William",
        "last_name": "Lee",
        "email": "wl1012 at yahoo.com",
        "homepage": "http://wlee.net"
      },
      "release_notes": "Initial upload"
    }
  ]
}
