{
  "script_id": "801",
  "display_name": "javaDoc.vim",
  "summary": "Look up javadoc Help file from Vim [Unix Only]",
  "name": "javaDoc.vim",
  "script_type": "utility",
  "description": "Hi All,\nThis script looks up javaDoc HTML help files for J2SE and J2EE api classes.\nFirst of all I am not sure if there is already a utility to do this or not, so here is my version.\n\nAbout the script.\nFirst the script runs only on Unix boxes, Windows users are more that welcome to port it .\nMake sure that the following unix commands are present in directories mentioned in your $PATH variable.\ndirname,grep,xlswin,awk\nIt also uses a shell script provided along with this package.\nIt is heavily commented and can be easily modified.\n\nWhat it does and what it doesn't\nIt opens javaDoc HTML file in an external browser from VIM.\nIt can open the HTML in either Netscape (Netscape 4.x, 6,7.x, Mozilla , Firebird ) or\na text browser such as lynx or links. Personally I prefer to open help in netscape when I am using gvim and in a text browser when I am using vim.\nCurrently It only supports looking up classes and not methods , or members.\n\nHow it works.\nIt opens javaDoc HTML file in an external browser from VIM.\nIt can open the HTML in either Netscape (Netscape 4.x, 6,7.x, Mozilla , Firebird ) or\na text browser such as lynx or links.\nPersonally I prefer to open help in netscape when I am using gvim\nand in a text browser when I am using vim.\nCurrently It only supports looking up classes and not methods , or members.\n\nHow it works.\nYou have two ways to lookup help\n1)\nTo use the mapping <Leader>jh, the cursor has to be placed on the class name\nwhose help file is to be looked up. i.e.\nif your source is \"Connection conn = null;\"\nThe cursor will have to be on the word Connection.\nThe script can't do a reverse mapping of variable name to class name and look-up help. i.e.\nyou can't use the variable conn to look up help for connection.\n\n2)Use the :Javadoc command and supply the Class name as an argument.\ni.e. :Javadoc Connection\n",
  "install_details": "Extract the provided .tar.gz file .\nPut the javadoc.vim in your plugin directory of $VIMRUNTIME or ~/.vim.\nPut the javadoc.txt in your doc directory of $VIMRUNTIME or ~/.vim.\nRun\n:helptags ~/.vim/doc or :helptags $VIMRUNTIME/doc\nPlace the included shell script in a convenient location .\nMake sure to give execute permissions to the shell script.\n\nSettings                            *javadoc-settings* \nNow for stuff in your .vimrc file.\nThe script uses a trick to support several javaDoc locations, \ne.g. J2SE, J2EE, and any generated javadoc of your Code also.\nFirst define a global variable g_no_of_ID_Files to\nnumber of unique locations of your javaDocs.\ne.g. If you have J2SE and J2EE Api javadocs i.e. 2 javadocs,\n\nlet g:no_of_ID_Files=2\n\nThe define the actual locations of these API's\nThe file I use to look-up class name is \"allclasses-frame.html\",\nSo specify locations to the allclasses-frame.html for each javadoc.\nIf you have javaDoc of thirdparty APIs or you own Code, make sure that the allclasses-frames.html is present in it. \n\ne.g.\nlet g:javadoc_ID_File_1=\"/user/abcd/docs/javadoc/JDK/java/api/allclasses-frame.html\"\nlet g:javadoc_ID_File_2=\"/user/abcd/docs/javadoc//J2EE/java/api/allclasses-frame.html\"\n\nNote the first variable g:no_of_ID_Files determines how many g:_javadoc_ID_File_<cnt> should be defined.\n\nNext specify the location of the included shell script\nlet g:srchJdoc_loc=\"/user/abcd/softwares/usr/bin/srchJdoc.sh\"\n\nNext specify the commands for a GUI browser and a text browser,\nNote:- I use Netscape as my GUI browser and links as my text browser and\nthe executables for both are in my $PATH. You may want to specify the full-path\ndepending on your situation.\n\nlet g:javadoc_netscape_cmd=\"netscape\"\nlet g:javadoc_textbrowser_cmd=\"links\"\n\nBy default the Helpfile is opended using the text browser defined in g:javadoc_textbrowser_cmd.\nIf you want to open it using the GUI browser add the following too.\n\nlet g:jhelp_use_gui_browser=1\n\nNote:-Usually I prefer text browser, when I am using VIM from a terminal and GUI browser\nwhen I am using GVIM in X. For that you can put the above line in ~/.gvimrc. This way\neverytime u use vim, a text browser will be used and whenever you use gvim, GUI browser will be used.\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2429",
      "filename": "javadoc.tar.gz",
      "script_version": "v2",
      "date": "2003-10-28",
      "vim_version": "6.0",
      "author": {
        "user_id": "3668",
        "user_name": "vim_power",
        "first_name": "vim",
        "last_name": "power",
        "email": "vim_power@yahoo.com",
        "homepage": ""
      },
      "release_notes": "This is the second release. This contains lots of changes.\nMade compatible as per the write-plugin document, provided help file.\nNote:- The name of the plugin has been changed from javaDoc.vim to all lowercase\njavadoc.vim, So be sure to remove the earlier version."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2423",
      "filename": "javaDoc.tar.gz",
      "script_version": "1",
      "date": "2003-10-22",
      "vim_version": "6.0",
      "author": {
        "user_id": "3668",
        "user_name": "vim_power",
        "first_name": "vim",
        "last_name": "power",
        "email": "vim_power@yahoo.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
