{
  "script_id": "1234",
  "name": "YankRing.vim",
  "summary": "Maintains a history of previous yanks, changes and deletes",
  "script_type": "utility",
  "description": "Vim already maintains a list of numbered registers containing the last 9 deletes.  These previous deletes can be referenced using [register]p, so \"1p will paste the last delete, \"2p the 2nd last delete.  For more information see |quote_number|.\n\nVim does not provide any mechanism to reference previous yanked, deleted or changed text.  In Emacs this feature is called the \"kill ring\".\n\nThe YankRing plugin allows the user to configure the number of yanked, deleted and changed text.  A split window can be used to choose which element(s) from the yankring you wish to paste.  Alternately after text has been pasted (using p), it can be replaced with a previous value from the yankring with a single key stroke.\n\nThe captured text is stored in a file (location configurable) and is instantly available (also configurable) to any other instance of Vim also running on the same machine.\n\nStoring the capture text in a file allows the text to be shared easily between multiple instances of Vim running in X, Windows, SSH or Screen.\n\nA tutorial is included to take you through the various features of the plugin.  After you have installed the plugin just run:\n     :h yankring.txt\n     :h yankring-tutorial\n\nThe yankring can be interacted with in two ways:  a GUI or via maps.\n\nThe yankring supports all of Vim motions and text-objects.  There are very few new keystrokes the user must learn.   One keystroke to open the yankring to choose which item to paste is all that is required.  It has been designed work seamlessly with Vim\n\nAll the mappings and behaviours are configurable via global variables you can optionally specify in your vimrc.\n\nThe plugin can be toggled on and off, and supports:\n    Ranges\n    Registers\n    Counts\n    All visual modes (characterwise, linewise and blockwise)\n    All motions\n    All text-objects\n\nExamples:\n    yy - Adds the current line to the yankring.\n    dd - Adds the current line to the yankring and deletes it.\n   5yw - Adds 5 words to the yankring.\n  \"ade - Deletes the word, and puts it into both the yankring and the \"a register.\n    cw - Changes the word and stores the previous value in the yankring.\n10\"zyy - Places 10 lines into both the yankring and the \"z register.\n :1,4YRYankRange   - Similar to 1,4y\n :3,$YRDeleteRange  - Similar to 3,$d\n\nIf you wish to paste previous values from the yankring and do not want to use the GUI, there are only two additional maps you must learn (these are configurable via your vimrc if needed).  The purpose of the yankring is to gain access to previously yanked (or deleted) elements.  The YRReplace command will replace the previously pasted text with a different entry from the yankring.  By default, I choose <C-P> (P for previous) to replace the text last pasted while moving backwards through your previous text from the yankring and <C-N> (N for next) to replace the previous paste while moving forward through the yankring.\n\nA separate buffer window to allow you to easily interact with the contents of the yankring.  The window is similar to many other plugins: TagList, SelectBuf and so on.  You can use the mouse or standard Vim keys (p, gp, P, ...).  Visual mode is used to support counts, pasting multiple times and reversing the order of pasted elements.\n\nThe GUI significantly simplifies your interaction with the yankring for basic functions.  But often it useful to take advantage of the more powerful features of the yankring.\n\nHere is a small section from the tutorial (using maps) so you have some idea of how you interact with the plugin gaining access to previous yanks.  Using the GUI for basic operations is self explanatory.\n\n---- Partial Tutorial ----\nTo understand how to use the yankring, the following example should demonstrate the various features.\n\nAssume we have this buffer: \n        one\n        two\n        three\n        four\n        five\n\nNow yank (yy) each line separately starting at line 1.  Display the\ncontents of the yankring. \n        :YRShow  \n            --- YankRing ---\n            Elem  Content\n            5     five^@\n            4     four^@\n            3     three^@\n            2     two^@\n            1     one^@\nSince we yanked the text starting at line 1 and finishing at line 5, the most current yankring element is the last one, the contents of line 5.  \n\"five^@\" is displayed, the \"^@\" is a newline character (since we issued a \"yy\").\n\nNow, go to the end of the file and press p.  The resulting buffer appears as: \n        one\n        two\n        three\n        four\n        five\n        five\nNow press <C-P> to move backwards through the yankring, this results in: \n        one\n        two\n        three\n        four\n        five\n        four\nNow press 2<C-P>.  This would be the same as pressing <C-P> two times in a row.  This results in: \n        one\n        two\n        three\n        four\n        five\n        two\nNow press <C-N> to move forwards through the yankring, this results in: \n        one\n        two\n        three\n        four\n        five\n        three\n\nYou can create a map to display a buffer displaying the yankring's contents:\n    nnoremap <silent> <F11> :YRShow<CR>\n\nYRShow creates a new split buffer (you can configure where it should be and it's size)\n        :YRShow  \n            AutoClose=1;Cmds:<enter>,[g]p,[p]P,d,r,a,u,q,<space>;Help=?\n            --- YankRing ---\n            Elem  Content\n            3     three^@\n            2     two^@\n            1     one^@\n            5     five^@\n            4     four^@\nYou can simply hit \"p\", <enter>, double click on an item and it will be pasted into your document.  The window will automatically close (by default) after you have made a choice.  The element will be pasted into the correct buffer if you have multiple split windows.\n\nYou can paste multiple items using visual mode.\nYou can also remove items from the yankring.\n\n---- Partial Tutorial ----\n\nConcentrating on the last line of the buffer you could see how we were able to replace our pasted text with lines yanked previously.  This is a feature Vim only has for deletes, and is limited to 9.  This plugin enables the same features for both yanks, deletes and changes, the size of the history is configurable.\n\n\n\n",
  "rating_total": "659",
  "rating_votes": "189",
  "downloads": "7470",
  "install_details": "YankRing 4.0 and above, uses new features of Vim 7.2 which allows it to support all motions and text-objects Vim provides.  \nIf you are using Vim 7.1 or below it will still work as it did in previous versions.\nYankRing 3.0, Vim 7 is required.\nYankRing 2.2 requires Vim 6.2 or higher.\n\nCopy the yankring.vim script to your $HOME/.vim/plugin (or $VIM/vimfiles/plugin for windows) directory.  \nCopy yankring.txt to your $HOME/.vim/doc (or $VIM/vimfiles/doc for windows) directory.\n\nTo update the Vim Help, run:\n:helptags $HOME/.vim/doc  (Unix)\n:helptags $VIM/vimfiles/doc  (Windows) ",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13554",
      "filename": "yankring_110.zip",
      "script_version": "11.0",
      "date": "2010-08-12",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: Documented the global variables to customize the location of the YankRing menu.\n\nNF: The YankRing menu now shows the maps used for the default actions to help learn them more easily.\n\nNF: Added g:yankring_menu_root and g:yankring_menu_priority (David Barsam).\n\nNF: Added a warning indicating a stored value has been truncated based on g:yankring_max_element_length and a new option to suppress this warning, g:yankring_warn_on_truncate (Hans-GÃ¼nter).\n\nBF: The YRAfterMaps() function (if it exists) was not re-run if YRToggle was used to disable and enable the YankRing.\n\nBF: Multibyte strings may not have been pasted correctly (Dr. Chip).\n\nBF: When pasting a string of 1111's, and additional -1 could also be included in the output.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12258",
      "filename": "yankring_100.zip",
      "script_version": "10.0",
      "date": "2010-02-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: Change the buffer name to [YankRing] to resemble other non-user buffers.\n\nNF: Added g:yankring_min_element_length which can prevent items from being added to the YankRing if they are too small.  For example, single character deletes (Vedran M).\n\nBF: When shifting focus back to Vim, the YankRing may incorrectly report: \"YR:Failed to change to the yankring buffer, please contact author\".\n\nBF: When entering Vim for the first time and hitting \"p\" nothing was pasted (Mark Huiskes).\n\nBF: When entering Vim for the first time and the yankring_clipboard_monitor = 1, the clipboard entry was not automatically added to the yankring.\n\nBF: When overriding the default and setting g:yankring_window_use_bottom = 0, the YankRing would report the error (Sergey Khorev):  E21: Cannot make changes, 'modifiable' is off\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11289",
      "filename": "yankring_90.zip",
      "script_version": "9.0",
      "date": "2009-08-30",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "BF: You cannot execute a macro with \":normal @a\".  It is still not possible, but you can execute it with \":normal! @a\" (A S Budden).  \nBF: When g:yankring_persist = 0 the YankRing could go into an infinite loop (A S Budden).  \nBF: When replaying a macro which used any of the zap keys (f,F,t,T,/,?) you were prompted again for the string to match on (Ovidiu C).\nBF: When checking the clipboard for changes (g:yankring_clipboard_monitor == 1) only add the item if it is not already in the ring.  Previously, the item was moved to the top of the YankRing each time you flipped focus.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9731",
      "filename": "yankring_80.zip",
      "script_version": "8.0",
      "date": "2008-12-30",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: Changed the implementation of YRGetSearch() (David Liang).\nBF: Under some unknown circumstances, the yankring can fail to change to the correct buffer.  Put in code to double check and abort.\nBF: Yanking and pasting a line which ends in a backslash resulted in the backslash being replaced by \"@@@\".\nBF: When repeating a command (\".\") which used any of the zap keys (f,F,t,T,/,?) you were prompted again for the string to match on (Vasilii Pascal).\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9504",
      "filename": "yankring_70.zip",
      "script_version": "7.0",
      "date": "2008-11-15",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: Added support for the / and ? motions so that y/search is supported (Vasilii Pascal).\nNF: When the YankRing window is displayed (or updated) an additional check is made against the default register.  If it has changed since the YankRing recorded it, the value will be added to the history.\nNF: Added support for more motions h, j, k, l, H, M, L, ^, 0, -, +, _.  And a pile of g motions g_, g^, gm, g$, gk, gj, gg, ge, gE.\nNF: The YankRing window will display a message it is operating in a limited mode if not using Vim 7.2 or the correct patch level.\nBF: Correction to some internal code which could lead to an endless loop (John Beckett).\nBF: Opening and closing the YankRing window with \"set report=0\" reported \"1 line less\" messages (Bill McCarthy).\nBF: Changed the default value of g:yankring_paste_check_default_buffer to check if the default paste buffer has changed when pressing 'p'.  For example, if a plugin has changed the default registers it will be pasted rather than the top item from the YankRing.\nBF: YRMapsDelete did not remove all the maps created by the YankRing.\nBF: Under particular circumstances, yanking text with embedded @ characters were not properly stored and retrieved from the YankRing (Andrew Long).\nBF: Changed to use xmaps instead of vmaps so that the maps only work in visual mode and not select mode (David Liang).\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9421",
      "filename": "yankring_61.zip",
      "script_version": "6.1",
      "date": "2008-10-31",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "BF: If the g:yankring_history_dir contains spaces (default on Windows) an error was reported.  A simple work around was to let g:yankring_history_dir = 'c:\\Vim' or no spaces (Matt).  \nAll Windows users should download this version.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9415",
      "filename": "yankring_60.zip",
      "script_version": "6.0",
      "date": "2008-10-30",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: The YankRing now maintains the history in a file.  This means if you are running multiple instances of Vim, they all see the same yankring whether you are using X, Windows, SSH or Screen.\nNF: The location and name of the file is configurable by the user.\nNF: The g:yankring_separator is no longer used and has been removed.\nNF: The g:yankring_max_element_length can be used to limit the size of an element in the yankring.\nNF: The g:yankring_share_between_instances can be used to indicate whether each instance of Vim running on a machine should share the history file or whether each should have their own individual history file.\nNF: The g:yankring_clipboard_monitor can be used to indicate whether changes to the system clipboard should be added to the YankRing (default is on).\nNF: The YankRing window can toggle the clipboard monitor by pressing 'c'.  See the help in the window by pressing ?.\nNF: Added some highlighting to the YankRing window (Marty Grenfell).\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9263",
      "filename": "yankring_50.zip",
      "script_version": "5.0",
      "date": "2008-09-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: The yankring can recognize certain Vim commands which do not change the contents of a buffer and not attempt to capture it.\nNF: The global variables which allow you to customize the behaviour are now space separated instead of comma separated.  This provides greater flexibility but will require you to modify your vimrc (if you have customized it). (Andy Wokula)\nBF: If using <C-O> from within insert mode, the yankring inserted characters into the buffer instead of capturing the changes, this was fixed by Andy Wokula (Agathoklis Hatzimanikas).\nBF: The yankring did not properly account for all the different forms of counts \"5yy\" worked but \"y5y\" did not (Edwin Shao).\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9098",
      "filename": "yankring_41.zip",
      "script_version": "4.1",
      "date": "2008-08-09",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: The yankring now allows you to override which operators should be ignored (yankring_ignore_operator).  By default this is set for the standard Vim operators which do not modify any registers (Examples: = and gu) (Andy Wokula).\nNF: The yankring did not map v_x (Matt Tolton).\nBF: The expression register (quote=) was not accounted for correctly (Agathoklis Hatzimanikas).\nBF: Using the v:operator variable must be escaped when used in a regular expression.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8849",
      "filename": "yankring_40.zip",
      "script_version": "4.0",
      "date": "2008-06-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: The yankring by default now captures all |text-objects| and all motions (|motion.txt|) which Vim supports.  Version 3.0 only supported a subset of the basic motion commands.\nNF: Prior to this version only predefined maps triggered the capture of data into the yankring.  These maps only supported yanks and deletes.  The yankring now also supports operator-pending mode, which allows a greater range of operations to be automatically captured and added to the yankring.  \nOperating pending mode functionality requires Vim 7.2 or Vim 7.1 with patch #205.  If using Vim 7.1 you can determine this with: \n       echo has(\"patch205\")\nNF: Prior to this version only yanks and deletes were registered in the yankring.  Changes are now also captured into the yankring.\nNF: The yankring will also capture the system cliboard when focus is returned to the vim window.  This is useful if you copy text between applications.\nNF: The yankring window always opened bottom horizontal.  Now it can be opened top or bottom and horizontal or vertically.  This can be controlled via variables in your .vimrc.\nBF: The yankring has an option to persist between instances of Vim by storing the values in global variables within the viminfo.  This has led to some unusual ordering of items in the ring from conflicts between instances.  This option has been turn off by default.\nBF: Their was an issue with yanking using y$.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7629",
      "filename": "yankring_30.zip",
      "script_version": "3.0",
      "date": "2007-09-07",
      "vim_version": "7.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: Converted the yankring to use the new Vim7's List object which means it is no longer compatible with Vim6.\nNF: By default the yankring will now maintain the yankring's items persistently by default.  It does this via the |viminfo| file. This means the contents of the yankring rely on the internal variables of only 1 Vim instance.\nBF: YRToggle was not unmapping 'gp' and 'gP'.\nBF: YRSearch prompted the user for a regex even if one was provided on the command line.\nBF: If g:yankring_manage_numbered_reg is enabled, the \".\" operator did not correctly repeat the previous action (Pedro DeRose)."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4692",
      "filename": "yankring_22.zip",
      "script_version": "2.2",
      "date": "2005-10-21",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "BF: If you pressed '?' to toggle the display of the help in the\nyankring window, the yankring window would close.  This also applied to\n'a', which allowed you to toggle the autoclose feature."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4667",
      "filename": "yankring_21.zip",
      "script_version": "2.1",
      "date": "2005-10-11",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: Much improved usability, the yankring now has a \"GUI\" to service \n    the yankring.  If YRShow or YRSearch is used, a split buffer is\n    opened which displays all the elements in the yankring.  There\n    are a number of maps that allow you to interact with the\n    contents.  The window can be positioned vertically or\n    horizontally as well as being sized all through options \n    specified in your vimrc.\nNF: Added the ability for the yankring to override Vim's numbered \n    registers.  Instead of the numbered registers holding the last\n    yanked value, and the 9 previous deletes, they will now reflect\n    the top 10 items in the yankring.  This allows you to reference\n    them directly with \"5p.\nNF: YRPop can now delete any items from the yankring, rather \n    that just from the top.\nNF: YRSetTop has been removed, it is no longer required as the\n    internal representation of the yankring has changed.\nBF: If g:yankring_ignore_duplicate is set (which is the default)\n    you could get some unpredicable results when moving \n    backwards and forwards (<C-P> and <C-N>) through the \n    previous values.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4512",
      "filename": "yankring_20_beta1a.zip",
      "script_version": "2.0 Beta1a",
      "date": "2005-08-22",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "Some people reported an error when selecting the first item from the yankring. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4503",
      "filename": "yankring_20_beta1.zip",
      "script_version": "2.0 Beta1",
      "date": "2005-08-20",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "Added a new split buffer that allows you to visually interact with the yankring.  This makes using it much better, no more commands you need to remember.\nPrevious commands are still available.  The new buffer is configurable.  Please see the tutorial for further details.\n\nFeedback is greatly appreciated."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4256",
      "filename": "yankring_16.zip",
      "script_version": "1.6",
      "date": "2005-05-07",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: YRSearch is similar to YRGetElem.  Given a regular expression it will interactively display all the elements in the yankring that match the regular expression.  You can enter the number of the element to paste it.  If you have many elements within the yankring, this can help you identify them more easily.\nNF: Updated the default history size from 30 to 100, which is partially the reason for the YRSearch command.\nNF: By default it supports \"gp\" and \"gP\", in addition to \"p\" and \"P\".\nNF: Added support for the expression register (:h quote=).  Here is an example of how it is used:\n       \"=\"X\"<CR>P\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4110",
      "filename": "yankring_15.zip",
      "script_version": "1.5",
      "date": "2005-04-01",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: The yankring now respects the cpoptions setting, if 'y' is included and you press '.', the previous yank command is executed and added to the yankring.  You can also add this behaviour by setting this in your |vimrc|: \n       let g:yankring_dot_repeat_yank = 1\n\nNF: Duplicates will not be added to the yankring by default.  If a duplicate is found, the element will be moved to the top of the yankring.  This can be controlled by setting this in your |vimrc|: \n       let g:yankring_ignore_duplicate = 0 (1 is default)\n\nBF: Regression from version 1.4, the '.' operator may incorrectly insert garbage.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4086",
      "filename": "yankring_14.zip",
      "script_version": "1.4",
      "date": "2005-03-27",
      "vim_version": "6.0",
      "author": {
        "user_id": "837",
        "user_name": "fishburn",
        "first_name": "David",
        "last_name": "Fishburn",
        "email": "dfishburn dot vim at gmail dot com",
        "homepage": ""
      },
      "release_notes": "NF: YRToggle has been updated.  If you toggle the yankring off (disable) the maps it creates are removed.  Calling YRToggle again will recreate the maps.  This truly disables the yankring, where the previous version attempted to do this via code.\nBF: Using the '.' operator was not corrected replaying operations that did not move text in some way (g~t_) changed the case of the text but a '.' did not replay it.\nBF: When replacing previously pasted text the yankring did not respect what key was used to paste the text originally.  All replaced items were pasted using 'p', even if you had originally pasted the text with 'P'.\n"
    }
  ]
}