{
  "script_id": "3107",
  "display_name": "writebackupToAdjacentDir",
  "summary": "Backup to an adjacent backup directory. ",
  "name": "writebackupToAdjacentDir",
  "script_type": "utility",
  "description": "Redirect backups made by the writebackup plugin (vimscript #1828) that would\nnormally go into the original file's directory into an adjacent directory with a\n\"{dir}.backup\" name, if it exists. This allows to use the plugin in places where\nbackup files would cause problems. \n\nDESCRIPTION\nMany customization directories (e.g. /etc/profile.d/) consider all contained\nfiles, regardless of file extension or execute permissions. Creating a\n{file}.YYYYMMDD[a-z] backup in there causes trouble and strange effects,\nbecause the backups are used in addition to the main configuration file - not\nwhat was intended! However, putting the backups in the same directory\ngenerally is a good idea - just not for these special directories. \n\nThis script offers a solution by integrating into the writebackup.vim script\nso that it checks for a directory with a '.backup' extension (e.g.\n/etc/profile.d.backup/), and places the backups in there, in case it exists.\nIn all other cases, the backup is made in the same directory, as before. \n\nUSAGE\nAdjacent backup directories are never created by this script; you have to\ncreate such a directory yourself to indicate that backups should be placed in\nthere. \n\n:WriteBackupMakeAdjacentDir [{prot}]\n\t\tCreate a backup directory adjacent to the current file's\n\t\tdirectory. If {prot} is given it is used to set the protection\n\t\tbits; default is 0755. \n\nAfter the adjacent backup directory has been created, just use :WriteBackup\nas before. ",
  "rating_total": "1",
  "rating_votes": "1",
  "downloads": "41",
  "install_details": "INSTALLATION\nThis script is packaged as a vimball. If you have the \"gunzip\" decompressor\nin your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress\nthe archive first, e.g. using WinZip. Inside Vim, install by sourcing the\nvimball or via the :UseVimball command. \n    vim writebackupToAdjacentDir.vba.gz\n    :so %\nTo uninstall, use the :RmVimball command. \n\nDEPENDENCIES\n- Requires Vim 7.0 or higher. \n- writebackup.vim plugin (vimscript #1828). \n- The writebackupVersionControl.vim plugin (vimscript #1829), which\n  complements writebackup.vim, fully supports this extension, but is not\n  required. \n\nCONFIGURATION\nFor a permanent configuration, put the following commands into your vimrc (see\n:help vimrc):\n\nTo change the name of the adjacent backup directory, specify a different\ntemplate via\n    let g:WriteBackupAdjacentDir_BackupDirTemplate = '%s.backup'\nThis must contain the \"%s\" placeholder, which is replaced with the original\nfile's directory, e.g. \"backup of %s\". ",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13088",
      "filename": "writebackupToAdjacentDir.vba.gz",
      "script_version": "1.00",
      "date": "2010-06-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
