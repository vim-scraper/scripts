{
  "script_id": "160",
  "display_name": "gtkvim.tgz",
  "summary": "GTK+ widget interface to gvim",
  "name": "gtkvim.tgz",
  "script_type": "utility",
  "description": "C source to 'GtkVim' widget, which embeds a gvim into your application as if it were a normal widget (actually runs a gvim as another process, displaying in your widget via a GtkSocket).\n\nThe current version is for GTK2, and unfortunately requires a pached vim.  This is pending, should make it into vim 7.0 in some fashion, and may even make it into 6.4.  I'll update this note as and when a decision is made.\n\nNext step I guess is to extend GtkVim to be a full Bonobo (?) widget to allow more flexible use in applications which support that (like evolution, I think).\n\n==== Old GTK1 notes ====\n\nVersions 1.x require a GTK+ gvim 6.0 and probably GTK+ 1.2.8 or later.\n\nIf you have focusing problems, you may also require the following patch to your GTK libraries (inc. the latest [at time of writing] 1.2.10) for automatic focusing (e.g., upon <Tab>) to work correctly.  Point-and-click activation will still work OK without this patch.\n\nCurrently still /not/ working is the ability to set the GtkVim widget's focus at startup (gtk_widget_grab_focus() or gtk_window_set_focus()).\n\n--- gtk/gtkwindow.c.focus\tFri Mar  9 18:39:16 2001\n+++ gtk/gtkwindow.c\tThu Jul  5 10:34:00 2001\n@@ -985,7 +985,13 @@\n       break;\n     case EnterNotify:\n     case LeaveNotify:\n-      if (xev->xcrossing.detail != NotifyInferior &&\n+      /* We only track the actual destination of keyboard events for real\n+       * toplevels, not for embedded toplevels such as GtkPlug. The reason for\n+       * this is that GtkPlug redirects events so the widget may effectively not\n+       * have the focus even if it actually has the focus.\n+       */\n+      if (gdk_window_get_parent (GTK_WIDGET (window)->window) == GDK_ROOT_PARENT () &&\n+\t  xev->xcrossing.detail != NotifyInferior &&\n \t  xev->xcrossing.focus && !window->window_has_focus)\n \t{\n \t  window->window_has_pointer_focus = (xev->xany.type == EnterNotify) ? TRUE : FALSE;\n",
  "rating_total": "10",
  "rating_votes": "6",
  "downloads": "825",
  "install_details": "Unpack the tgz file ('tar zxf gtkvim.tgz') somewhere and 'make' in the new directory it creates.  Sorry, no configure or anything, but it's pretty minimalist so shouldn't cause any problems.\n\nLink the gtkvim.o with your app.  See included example cadged from the GTK+ release ('rangewidgets').",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5452",
      "filename": "gtkvim.tgz",
      "script_version": "2.0",
      "date": "2006-03-17",
      "vim_version": "6.0",
      "author": {
        "user_id": "363",
        "user_name": "FNX",
        "first_name": "Neil",
        "last_name": "Bird",
        "email": "neil at fnxweb.com",
        "homepage": "http://www.fnxweb.com/"
      },
      "release_notes": "Updated to build against GTK2 by default."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=568",
      "filename": "gtkvim.tgz",
      "script_version": "1.7",
      "date": "2002-02-08",
      "vim_version": "6.0",
      "author": {
        "user_id": "363",
        "user_name": "FNX",
        "first_name": "Neil",
        "last_name": "Bird",
        "email": "neil at fnxweb.com",
        "homepage": "http://www.fnxweb.com/"
      },
      "release_notes": "Fixed coredump due to incorrectly initialised string (Evan Martin).\n\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=391",
      "filename": "gtkvim.tgz",
      "script_version": "1.6",
      "date": "2001-12-03",
      "vim_version": "6.0",
      "author": {
        "user_id": "363",
        "user_name": "FNX",
        "first_name": "Neil",
        "last_name": "Bird",
        "email": "neil at fnxweb.com",
        "homepage": "http://www.fnxweb.com/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
