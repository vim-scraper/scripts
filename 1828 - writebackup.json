{
  "script_id": "1828",
  "display_name": "writebackup",
  "summary": "Write backups of current file with date file extension.",
  "name": "writebackup",
  "script_type": "utility",
  "description": "DESCRIPTION\nThis is a poor man's revision control system, a primitive alternative to CVS,\nRCS, Subversion, etc., which works with no additional software and almost any\nfile system. \nThe :WriteBackup command writes subsequent backups of the current file with a\n'current date + counter' file extension (format '.YYYYMMDD[a-z]'). The first\nbackup of a day has letter 'a' appended, the next 'b', and so on. (So that a\nfile can be backed up up to 26 times on any given day.) \n\nBy default, backups are created in the same directory as the original file,\nbut they can also be placed in a directory relative to the original file, or\nin one common backup directory for all files (similar to Vim's 'backupdir'\noption), or even in a file-specific location that is determined via a\nuser-provided callback function. \n\nUSAGE\n:WriteBackup[!]\n\t\t\tWrite the whole current buffer to the next available\n\t\t\tbackup file with a '.YYYYMMDD[a-z]' file extension. \n\t\t\tIf the last backup is identical with the current\n\t\t\tbuffer contents, no (redundant) backup is written. \n\t\t\tWith [!], creation of a new backup file is forced: \n\t\t\t- even if the last backup is identical\n\t\t\t- even when no more backup versions (for this day) are\n\t\t\t  available (the last '.YYYYMMDDz' backup gets\n\t\t\t  overwritten, even if it is readonly)\n\nPS: In addition to this Vim script, I also provide the basic writebackup\nfunctionality outside of Vim as VBScript and Korn Shell script versions at\nhttp://ingo-karkat.de/downloads/tools/writebackup/index.html",
  "rating_total": "40",
  "rating_votes": "16",
  "downloads": "1895",
  "install_details": "INSTALLATION\nThis script is packaged as a vimball. If you have the \"gunzip\" decompressor\nin your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress\nthe archive first, e.g. using WinZip. Inside Vim, install by sourcing the\nvimball or via the :UseVimball command. \n    vim writebackup.vba.gz\n    :so %\nTo uninstall, use the :RmVimball command. \n\nDEPENDENCIES\n- Requires Vim 7.0 or higher. \n- The writebackupVersionControl plugin (vimscript #1829) complements this\n  script with addtional commands and enhances the :WriteBackup command with\n  additional checks, but is not required. \n\nCONFIGURATION\nFor a permanent configuration, put the following commands into your vimrc file\n(see :help vimrc). Note: With version 1.30, the variable was renamed from\ng:writebackup_BackupDir. Please update your configuration! \n\nTo put backups into another directory, specify a backup directory via \n    let g:WriteBackup_BackupDir = 'D:\\backups'\n\nA directory starting with './' or '../' (or the backslashed-variants '.&#039 for\nMS-DOS et al.) puts the backup file relative to where the backed-up file is.\nThe leading '.' is replaced with the path name of the current file: \n    let g:WriteBackup_BackupDir = './backups'\n\nIf you want to automatically create a non-existing backup directory,\ndynamically determine the backup directory based on the current filespec or\nany other changing circumstances, you can set a custom callback function: \n\n    function MyResolveBackupDir(originalFilespec, isQueryOnly) ...\n    let g:WriteBackup_BackupDir = function('MyResolveBackupDir')\n\nYou can override this global setting for specific buffers via a buffer-scoped\nvariable, which can be set by an autocmd, ftplugin, or manually: \n    let b:WriteBackup_BackupDir = 'X:\\special\\backup\\folder'\n\nIf the writebackupVersionControl plugin is installed, no backup is written if\nthere is an identical predecessor, so you don't need to remember whether\nyou've already backed up the current file; no redundant backups will be\ncreated. If you don't like this check, turn it off via: \n    let g:WriteBackup_AvoidIdenticalBackups = 0\n\nIn case you already have other custom Vim commands starting with W, you can\ndefine a shorter command alias ':W' in your vimrc to save some keystrokes. I\nlike the parallelism between ':w' for a normal write and ':W' for a backup\nwrite. \n    command -bar -bang W :WriteBackup<bang>",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10694",
      "filename": "writebackup.vba.gz",
      "script_version": "2.10",
      "date": "2009-05-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Replaced simple filespec escaping with built-in fnameescape() function (or\nemulation for Vim 7.0 / 7.1) via escapings.vim wrapper."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10045",
      "filename": "writebackup.vba.gz",
      "script_version": "2.00",
      "date": "2009-02-26",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- Using separate autoload script to help speed up VIM startup. This is an\n  incompatible change that also requires the corresponding\n  writebackupVersionControl plugin version. *** PLEASE UPDATE\n  writebackupVersionControl (vimscript #1829), too, if you're using it ***\n- ENH: Disallowing backup of backup file if the writebackupVersionControl\n  plugin is installed. \n- ENH: No backup is written if there is an identical previous backup. This\n  requires the writebackupVersionControl plugin and can be configured via\n  g:WriteBackup_AvoidIdenticalBackups. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9980",
      "filename": "writebackup.vba.gz",
      "script_version": "1.31.013",
      "date": "2009-02-16",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Split off documentation into separate help file. Now packaging as VimBall. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9950",
      "filename": "writebackup.vim",
      "script_version": "1.30.011",
      "date": "2009-02-11",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: The backup directory can now be determined dynamically through a callback function. \nRenamed configuration variable from g:writebackup_BackupDir to g:WriteBackup_BackupDir. *** PLEASE UPDATE YOUR CONFIGURATION ***\nBF: Now also allowing relative backup dir in an upper directory (i.e. g:WriteBackup_BackupDir starting with '../'. \nBF: Unnamed buffers were backed up as '.YYYYMMDDa'. \nNow setting v:errmsg on errors and using ErrorMsg instead of Error highlight group. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8839",
      "filename": "writebackup.vim",
      "script_version": "1.20.006",
      "date": "2008-06-23",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Minor change: Added -bar to :WriteBackup, so that commands can be chained together.  "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7688",
      "filename": "writebackup.vim",
      "script_version": "1.20.005",
      "date": "2007-09-18",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: Added support for writing backup files into a different directory (either one static backup dir or relative to the original file) via g:writebackup_BackupDir configuration, as suggested by Vincent DiCarlo. \nNow requiring VIM 7.0 or later, because it's using lists. \nBF: Special ex command characters ' \\%#' must be escaped for ':w' command. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6883",
      "filename": "writebackup.vim",
      "script_version": "1.00.004",
      "date": "2007-03-16",
      "vim_version": "6.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo at karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
