{
  "script_id": "2033",
  "name": "trag",
  "summary": "A language & project-aware regexp builder & runner for vimgrep",
  "script_type": "utility",
  "description": "Trag builds regular expressions for vimgrep or its own grep-like function (depending on the task at hand) that allow you to find out where a variable is defined, where it is assigned to another variable, where a method is called etc. At least that's the idea. Since it doesn't use a database it's only suitable for smaller projects -- whatever that means.\n\nFirst, define which files belong to your project. Most likely your project's source files are already registered in your tags or manifest.txt files, which will be used if available. Alternatively you can set the variable [wbg]:trag_files to a list of files that will be used instead. (Setting this variable will prevent the use of tags.)\n\nSecondly, perform certain operations on these files, like:\n\n    - Select a file to edit\n    - Scan/search files for an expression (somewhat like grep)\n    - Provide for \"modes\", i.e. format the regular expression so that \n      you can easily search for, e.g., only variable definitions or only \n      function calls.\n\n\n:TRag[!] MODE REGEXP\n    Run |:TRagsearch| and instantly display the result with |:TRagcw|.\n    See |trag#Grep()| for help on the arguments.\n    Examples:\n      \" Find any matches\n      TRag . foo\n\n      \" Find variable definitions (word on the left-hand): foo = 1\n      TRag l foo\n    \n      \" Find variable __or__ function/method definitions\n      TRag d,l foo\n    \n      \" Find function calls like: foo(a, b)\n      TRag f foo\n",
  "rating_total": "8",
  "rating_votes": "2",
  "downloads": "937",
  "install_details": "Edit the vba file and type: >\n\n    :so %\n\nSee :help vimball for details. If you have difficulties or use vim 7.0, \nplease make sure, you have the current version of vimball \n(vimscript #1502) installed.\n\nThis script requires tlib (vimscript #1863) to be installed.\n\nSuggested maps (best set in ~/vimfiles/after/plugin/trag.vim): >\n\n    noremap <Leader>r. :TRag * \n    noremap <Leader>r# :TRag #w <c-r><c-w><cr>\n    for c in keys(g:trag_modes)\n        exec \"nnoremap <Leader>r\". c .' :TRag #'. c .' <c-r><c-w><cr>'\n        exec \"vnoremap <Leader>r\". c .' y<esc>:TRag #'. c .' <c-r>\"<cr>'\n    endfor\n\n\nAlso available via git\nhttp://github.com/tomtom/trag_vim",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12752",
      "filename": "trag.vba",
      "script_version": "0.8",
      "date": "2010-03-31",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Moved the definition of some variables from plugin/trag.vim to autoload/trag.vim\n- :TRagcw! (show :cw even if there are no recognized errors)\n- Require tlib 0.37\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11932",
      "filename": "trag.vba.gz",
      "script_version": "0.7",
      "date": "2009-12-21",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- trag#QuickList(): Accept a dict as optional argument.\n- trag#Grep(): rx defaults to '\\.{-}'\n- trag#Grep(): use :g (instead of search()) for non-vimgrep mode\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11546",
      "filename": "trag.vba.gz",
      "script_version": "0.6",
      "date": "2009-10-18",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- trag#viki#Rename()\n- Generalized trag#rename#Rename()\n- Enabled \"trace cursor\" functionality (mapped to the <c-insert> key).\n- :Traglw\n- TRagGitFiles, trag#SetGitFiles(), g:trag_git"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10036",
      "filename": "trag.vba.gz",
      "script_version": "0.5",
      "date": "2009-02-25",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Update the qfl when running a command on selected lines\n- Enable certain operations for multiple choices\n- Java, Ruby: x ... find subclasses (extends/implements)\n- Experimental rename command for refactoring (general, java)\n- NEW: [bg]:trag_get_files_{&filetype}\n- Traggrep: If the second argument (glob pattern) is missing, the \ndefault file list will be used.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9545",
      "filename": "trag.vba.gz",
      "script_version": "0.4",
      "date": "2008-11-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- trag_proj* variables were renamed to trag_project*.\n- Traggrep: Arguments have changed for conformity with grep commands (an implicit .-argument is prepended)\n- Make sure tlib is loaded even if it is installed in a different rtp-directory.\n- Post-process lines (strip whitespace) collected by vimgrep\n- tlib#Edit(): for list input, set pick_last_item=0, show_empty=1\n- Aliases for some commands: Trag, Traggrep ...\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8350",
      "filename": "trag.vba.gz",
      "script_version": "0.3",
      "date": "2008-02-26",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Use vimgrep with set ei=all as default search mode (can be configured via g:trag_search_mode); by default trag now is a wrapper around vimgrep that does the handling of project-related file-sets and regexp builing for you.\n- FIX: ruby/f regexp\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8307",
      "filename": "trag.vba.gz",
      "script_version": "0.2",
      "date": "2008-02-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Quite a few things have changed and I haven't had the time yet to test \nthese changes thorougly. There is a chance that nested patterns thus \ndon't work as described (please report).\n- Enable search for more than one kinds at once (as comma-separated \nlist)\n- Enabled <c-e>: Run ex-command on selected lines (e.g. for refactoring \npurposes)\n- Enabled <c-s>, <c-v>, <c-t>: Open selected lines in (vertically) split \nwindows or tabs.\n- Renamed vV kinds to lL (~ let)\n- New kind: r/R (right hand side argument of an assignment/let, i.e. \nvalue)\n- New kind: fuzzy (typo-tolerant search)\n- INCOMPATIBLE CHANGE: Renamed \"mode\" to \"kind\"\n- TRag now has some idea of negation. E.g., \"TRag !i,w call\" will search \nfor the word \"call\" but ignore matches in comments (if defined for the \n    current filetype)\n- Alternative methods to define project files: g:trag_files, \ng:trag_glob, g:trag_proj.\n- Improved support for ruby, vim\n- TRagKeyword, trag#CWord(): Customize keyword rx.\n- g:trag_get_files\n- [bg]:trag_proj_{&filetype}: Name of the filetype-specific project \nfiles catalog (overrides [bg]:trag_proj if defined)\n- trag#Edit() will now initally select files with the same \"basename \nroot\" (^\\w\\+) as the current buffer (the command is thus slightly more \nuseful and can be used as an ad-hoc alternative file switcher)\n- FIX: Match a line only once\n- FIX: Caching of regexps\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7734",
      "filename": "trag.vba.gz",
      "script_version": "0.1",
      "date": "2007-09-30",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}