{
  "script_id": "2787",
  "name": "Melt Vim",
  "summary": "Plugin for Melt files",
  "script_type": "syntax",
  "description": "Plugin for Melt (http://melt.forge.ocamlcore.org/) files: \n- syntax colouring (with handling of spelling) \n- filetype detection \n- filetype plugin \n- compiler plugin \n\nFeatures: \n* automatic detection of .mlt files \n* syntax coloration \n* compiler error handling (i.e. go to the location of the error indicated by Melt - warning: approximative) \n* handling of spelling, english is the default, see :h spell for more details \n* and the following commands: \n\n+ normal mode: \n - gf on a module name will open the corresponding file \n\n+ visual mode (xxx denotes the selected text, xxx -> ... means \"xxx is rewritten as ...\"): \n - <LocalLeader>\": xxx -> \"xxx\" (i.e. inserts quotes around xxx) \n - <LocalLeader>(: xxx -> (xxx) \n - <LocalLeader>{: xxx -> {xxx} \n - <LocalLeader>[: xxx -> [xxx] \n - <LocalLeader>cc: xxx -> (*xxx*) \n - <LocalLeader>e: xxx -> {emph \"xxx\"} \n - <LocalLeader><LocalLeader>: ask for a string s (typically a caml function), then xxx -> {s \"xxx\"} \nNote: <LocalLeader> is generally bound to ',' \n\n+ if the matchit plugin (http://www.vim.org/scripts/script.php?script_id=39) is installed then '%' will switch between struct/end, let/in, match/with, ... \n\n+ if the Nerd commenter plugin (http://www.vim.org/scripts/script.php?script_id=1218) is installed then its usual commands handle melt comments \n\n+ if you set the variable g:MeltCloseDelimiters then: \n - typing \" will write \"\" and put the cursor between the quotes \n - typing ( will write () and put the cursor between the parentheses \n - typing { will write {} and put the cursor between the braces \n - typing [ will write [] and put the cursor between the brackets \n\n+ main rule to detect the compiler for :make (see compiler/melt.vim for details): \n1. if there is a Makefile then :make launches make \n2. if there is a myocamlbuild.ml then :make launches ocamlbuild \n3. otherwise launch melt \n",
  "rating_total": "0",
  "rating_votes": "0",
  "downloads": "106",
  "install_details": "1. untar the archive meltvim.tar.gz \n2. cp -r meltvim-xxx/* $HOME/.vim/ \n\nThe archive contains ftdetect/melt.vim, ftplugin/melt.vim, compiler/melt.vim and syntax/melt.vim.\n ",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12840",
      "filename": "meltvim-0.2.tar.gz",
      "script_version": "0.2",
      "date": "2010-04-15",
      "vim_version": "6.0",
      "author": {
        "user_id": "13128",
        "user_name": "Vincent Aravantinos",
        "first_name": "Vincent",
        "last_name": "Aravantinos",
        "email": "vincent.aravantinos at gmail.com",
        "homepage": "http://membres-lig.imag.fr/aravantinos"
      },
      "release_notes": "- added handling of *spelling*\n- added the filetype plugin with various commands\n- better syntax coloration\n- now goes to the location of an error\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11374",
      "filename": "meltsyntax-0.1.tar.gz",
      "script_version": "0.1",
      "date": "2009-09-14",
      "vim_version": "6.0",
      "author": {
        "user_id": "13128",
        "user_name": "Vincent Aravantinos",
        "first_name": "Vincent",
        "last_name": "Aravantinos",
        "email": "vincent.aravantinos at gmail.com",
        "homepage": "http://membres-lig.imag.fr/aravantinos"
      },
      "release_notes": "Initial upload"
    }
  ]
}
