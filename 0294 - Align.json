{
  "script_id": "294",
  "name": "Align",
  "summary": "Help folks to align text, eqns, declarations, tables, etc",
  "script_type": "utility",
  "description": "                                                    [ALIGN/ALIGNMAPS NEEDS VIM 7.0 AS OF V29/34]\n\nAlign and AlignMaps lets you align statements on their equal signs, make comment boxes, align comments, align declarations, etc.\n\nNote: this plugin is not a left&right margin justification tool!  See vimscript#177 or vimscript#2324 for that.\nNote: if you have vim 7.1 or later, your vimball should unpack just fine without having to update it.\n\nThere are two basic commands provided by this package:\n\n        AlignCtrl options sep1 sep2 sep3 ...\n        [range]Align sep1 sep2 sep3 ...\n\nThe \"sep#\" are regular expressions which describe separators that delineate fields; Align will line up the separators. The range may be any Vim range, _including_ visual-blocks.  Align works on lines of the form:\n(ws==whitespace, sep==separator, field==text)\n\n    ws-field-ws-sep-ws-field-ws-sep-ws-field-...\n    ws-field-ws-sep-ws-field-ws-sep-ws-field-...\n\nNote that white-space (ws) surrounding separators is ignored.\n\nThe Align package includes:\n\n  Align : the basic alignment command\n  AlignCtrl : provides options for the next call to :Align\n  AlignMaps : many three or four key maps which support aligning C/C++ style declarations, ()?..:.., expressions, C/C++ comments, numbers, C preprocessor definitions, tables based on tabs or spaces, and more.\n\nIn addition, AutoAlign (vimscript#884) uses the Align function to align =s as you type.\n\nAlign handles alignment on multiple separators, not just the first one, and the separators may be the same across the line or different.  With AlignCtrl one may specify that separators are cyclic (re-used sequentially) or equivalent (all separators are simultaneously active).\n\nThere are several options to help with deciding what to do with initial white space.   By default Align re-uses the first line's initial white space, but one may use AlignCtrl to retain or remove each line's initial white space.\n\nThe <Align.vim> and <AlignMaps.vim> files are plugins and require vim 6.1 or higher.\n\n\nEXAMPLES:\n\n:5,10Align =\n    Align on '=' signs\n\n:'<,'>Align = + - \\* /\n    Align on any of the five separator characters shown.\n    Note that visual block mode was used to fire off Align.\n\n:AlignCtrl =lp1P1I\n    which means:\n    = all separators are equivalent\n    l fields will be left-justified\n    p1 pad one space before each separator\n    P1 pad one space after each separator\n    I  preserve and apply the first line's leading white space to all\n       Align'd lines\n\n:help align\n    Gives help for Align\n\n\nALIGNMENT CONTROL\n\nAlignment control allows for left or right justification or centering of fields, cyclic (sequentially active) or equivalent (simultaneously active) regular expressions to specify field separators, initial white space control, optional visual-block use (ie. apply Alignment only within a block), user-specified white-space padding about separators, and multiple separators.\n\nMANY ALIGNMENT MAPS\n\nAlignMaps.vim provides a number of maps which make using this package easy.  They typically either apply to the range 'a,. (from mark a to current line) or use the visual-selection (V, v, or ctrl-v selected):\n\n\t\\t=  : align assignments (don't count logic, like == or !=)\n\t\\t,  : align on commas\n\t\\t|  : align on vertical bars (|)\n\t\\tsp : align on whitespace\n\t\\tt  : align LaTeX tabular tables\n\nAlignMaps also provides some internally complex maps for aligning C declarations, Ansi C function arguments, html tables, LaTeX tabulars, and trailing comments:\n\n\t\\acom : align comments\n\t\\adec : align C declarations (one variable per line)\n\t\\afnc : align ansi-style C function input arguments\n\t\\Htd  : align html tables\n\t\nTo see some examples of this, check out\n\n    http://mysite.verizon.net/astronaut/vim/align.html#Examples\n\n(the proportional fonts used by most browsers in showing you this page preclude showing the examples here). The help for Align and AlignCtrl also contains many examples.\n\nALIGNMENT ON VISUAL BLOCKS AND g,v-LIKE CONTROL\n\nSometimes one wants to align only a subset of text in a range, based on patterns or column extents.  Align supports both types of restrictions!\n    \n    Visual-block selection may be used to restrict Align to operate only\n    within that visual block.\n    \n    AlignCtrl supports \"g\" and \"v\" patterns that restrict Align to\n\n    operate on lines which match (or don't match, respectively) those\n    patterns.\n\nNEW STUFF:\n\nThere's a number of new AlignCtrl options:\n    \n    - allows one to skip a separator (treat it as part of a field)\n    + repeat the last lrc justification (ex. lr+ == lrrrrrr... )\n    : treat the rest of the line as a field; acts as a modifier\n      to the last lrc. \n    < left-justify the separator\n    > right-justify the separator\n    | center the separator\n\nThese are, except for the \":\", cyclic parameters.  In other words, >< is equivalent to ><><><><... .  Thus separators can be of differing lengths (ex.  -\\+ as a separator pattern can match -, --, ---, etc and the separators will be left/right/center justified as you wish).\n\nTo get automatic, as-you-type, aligning of = in the C, vimL, and other languages, check out vimscript#884 for several ftplugins (which use Align).\n\n\nAlternative Aligners:\n    Gergely Kontra's vimscript#176\n\nThank you for rating Align!\n\n---------------------------------------\nDISCUSSION and COMMENTS:\n---------------------------------------\n\nPlease use email for bugs.  Enjoy!\n\n(alpha/beta version available at http://mysite.verizon.net/astronaut/vim/index.html#ALIGN)\n",
  "rating_total": "1407",
  "rating_votes": "436",
  "downloads": "19802",
  "install_details": "1. You'll need to have plugins enabled: in your home directory, have at least the following two lines in your .vimrc file:\n   set nocp\n   filetype plugin on\n\n2. Using vim 7.1 or later:\n  vim Align.vba.gz\n   :so %\n   :q\n\n3. Using vim 7.0: see http://mysite.verizon.net/astronaut/vim/index.html#VIMBALL to get and install an up-to-date version of vimball.  Then follow the simple directions for installation of Align/AlignMaps above!  Or, preferably: upgrade your copy of vim.\n\n(this version of Align/AlignMaps requires vim 7.0)\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10110",
      "filename": "Align.vba.gz",
      "script_version": "35/41",
      "date": "2009-03-04",
      "vim_version": "7.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "Align: save and restore of mod now done with the local version of the option\nAlign: new sanity check for an AlignStyle of just \":\"\nAlignMaps: new maps: \\ts; ts: \\ts< \\ts= \\a(\nAlignMaps: default g:Align_xstrlen often is now 1 for multi-byte support\nAlignMaps: bug fixed for \\ts,\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9414",
      "filename": "Align.vba.gz",
      "script_version": "34/40",
      "date": "2008-10-29",
      "vim_version": "7.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "(AlignMaps) split into plugin/ and autoload/ sections (faster [g]vim startup)\n(AlignMaps) maps use <Plug>s and <script>s: allowing users to invoke the maps how they wish, and preventing user maps from interfering with the internal workings of the maps.\n(Align)     bugfix - using :AlignCtrl before entering any alignment ctrl cmds was causing an error\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8407",
      "filename": "Align.vba.gz",
      "script_version": "33/39",
      "date": "2008-03-06",
      "vim_version": "6.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "* Align now aligns multi-byte characters correctly (see :help align-strlen) -- choose g:Align_xstrlen for the type of codepoint you want handled.\n\n* Align now accepts \\\"...\\\" arguments, so one can pass whitespace to Align as a separator\n\n* AlignMaps&#039 \\\\t= map now avoids comment aligning when the filetype is not *.c or *.cpp"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7531",
      "filename": "Align.vba.gz",
      "script_version": "32/38",
      "date": "2007-08-20",
      "vim_version": "7.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "The <leader>tt map wasn't working right; Align now uses <q-args> instead of <f-args>, so it does the argument splitting itself, thus allowing patterns containing backslashes to be used without lots of backslash-duplication.  This allows the \\tt map in AlignMaps to work, and to work without a lot of extra backslashes."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7511",
      "filename": "Align.vba.gz",
      "script_version": "31/36",
      "date": "2007-08-16",
      "vim_version": "7.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "New feature -- one can embed AlignCtrl settings into Align (as a one-shot):\n\n   [range]Align! [AlignCtrl settings] pattern(s)\n\nPlus some small improvements to some of the AlignMaps."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6210",
      "filename": "Align.vba.gz",
      "script_version": "30/35",
      "date": "2006-09-20",
      "vim_version": "7.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "* \\acom can now work with doxygen style /// comments\n* \\t= and cousins used \"`\"s.  They now use \\xff characters.\n* <char-0xff> used in \\t= \\T= \\w= and \\m= instead of backquotes.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5608",
      "filename": "Align.vba.gz",
      "script_version": "29/34",
      "date": "2006-04-25",
      "vim_version": "7.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "Align and AlignMaps now use vim 7.0 style autoloading (quicker startup, loads only when used)\ncecutil updated to use keepjumps\nNow being distributed as a vimball - simply :so % it after decompressing it to install\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4788",
      "filename": "Align.tar.gz",
      "script_version": "28/33",
      "date": "2005-11-21",
      "vim_version": "6.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "bugfix: (Align) Align now works around the report option setting.\nbugfix: (Align) AlignCtrl l: wasn't behaving as expected; fixed!\nbugfix: (AlignMap) \\ts, now uses P1 in its AlignCtrl call\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4421",
      "filename": "Align.tar.gz",
      "script_version": "27/32",
      "date": "2005-07-12",
      "vim_version": "6.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "Align v27 : cpo and ignorecase workarounds\nAlignMaps v32: s:WrapperStart() -> AlignWrapperStart(), s:WrapperEnd() -> AlignWrapperEnd()\n These changes let the wrappers be used outside of AlignMaps.vim (customized map support)\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=4167",
      "filename": "Align.tar.gz",
      "script_version": "27/31",
      "date": "2005-04-15",
      "vim_version": "6.0",
      "author": {
        "user_id": "96",
        "user_name": "cec",
        "first_name": "Charles",
        "last_name": "Campbell",
        "email": "drchip at campbellfamily.biz",
        "homepage": "http://mysite.verizon.net/astronaut/index.html"
      },
      "release_notes": "Align: GetLatestVimScripts/AutoInstall supported\nAlignMaps: new map: \\\\adcom (align declaration-style comments), \\\\a, now wors across multiple lines with different types, cecutil.vim now used, more number alignment maps (\\\\aenum, \\\\aunum)\n"
    }
  ]
}
