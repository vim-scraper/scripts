{
  "script_id": "1631",
  "display_name": "gnuchangelog",
  "summary": "Changelog support like Emacs/GNU",
  "name": "gnuchangelog",
  "script_type": "utility",
  "description": "Enhances the default changelog support with a global mapping that opens and adds an entry in the appropriate ChangeLog file.  The entry now includes the edited filename and if configured, the class/method/function name.  The function that finds the class/method/function name can be configured with filetype plugins so that one can use different tag searchers for different languages.\n\nThe ChangeLog file is only edited if it already exists, which  is searched upwards starting in the directory where the  edited file is located.  If the corresponding ChangeLog file is already opened, the script either splits the window to edit the buffer or switches to the window where the buffer is already opened.\n\nThis behavior is identical to how emacs handles ChangeLog  files with the change-log-mode provided by C-x 4 a.\n\nSee also:\n\nhttp://gnudist.gnu.org/software/emacs/manual/html_node/Change-Log.html\nhttp://www.gnu.org/prep/standards/html_node/Change-Log-Concepts.html\n",
  "install_details": "To install and use this plugin:\n\n - Set the EMAIL environment to your email address, e.g.,  export EMAIL=\"John Doe <jdoe@foo.com>\".  This is the user name  that will be included in the changelog entry.\n\n - Copy plugin/gnuchlog.vim to your ~/.vim/plugin dir.\n\n - Copy ftplugin/changelog.vim to your ~/.vim/ftplugin dir.  This overrides the changelog.vim included by default in vim.\n\n - Make sure you have \"filetype plugin on\" in your .vimrc\n\nIf you want to auto-include class/method/function name in the ChangeLog entry using the pythonhelper.py plugin:\n\n - If you don't have it already, copy plugin/pythonhelper.vim to your ~/.vim/plugin dir, which will give you this info in the status line all by itself.\n\n - Copy the ftplugin/python_gnuchlog.vim script to your ~/.vim/ftplugin dir to make the gnuchlog.vim plugin use the pythonhelper.vim info to get the class/method/name when invoked from a python source.  This is an additional python filetype plugin (i.e., loaded and run in addition to the standard python.vim filetype plugin) that configures a global variable that allows the gnuchlog.vim plugin to use information provided by the pythonhelper.vim plugin.\n\n - You can override the statusline setting to your liking by adding a 'set stl' command to ~/.vim/after/plugin/pythonhelper.vim.  See ':help statusline' for info on how to configure the status line.\n   For example:\n\n   set stl=%-f%r\\ %2*%m%*%h%w\\ %1*%{TagInStatusLine()}%*%=%l,%c%V\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6089",
      "filename": "gnuchlog_1.3.tgz",
      "script_version": "1.3",
      "date": "2006-08-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "10614",
        "user_name": "lpc",
        "first_name": "Luis",
        "last_name": "Caamano",
        "email": "lcaamano@gmail.com",
        "homepage": ""
      },
      "release_notes": "Build the path name of the edited file in the entry title relative to the directory where the ChangeLog file is, an emacs ChangeLog behavior I missed.  Thanks to Donald Curtis <donald-curtis@uiowa.edu> for catching that and providing a patch."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6064",
      "filename": "gnuchlog_1.2.tgz",
      "script_version": "1.2",
      "date": "2006-08-11",
      "vim_version": "7.0",
      "author": {
        "user_id": "10614",
        "user_name": "lpc",
        "first_name": "Luis",
        "last_name": "Caamano",
        "email": "lcaamano@gmail.com",
        "homepage": ""
      },
      "release_notes": "Added ';' to findfile() call to make sure we always search upwards.  There are some cases where findfile() doesn't find the ChangeLog file if the semicolon is not added to the path to search.\n"
    }
  ]
}
