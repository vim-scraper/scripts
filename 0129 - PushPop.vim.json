{
  "script_id": "129",
  "name": "PushPop.vim",
  "summary": "Pushd/Popd implementation for vim command-line",
  "script_type": "utility",
  "description": "PLEASE READ THE INSTALL SECTION.\n\n- The script provides a pushd/popd functionality for Vim taking Bash as a\n  reference. It defines new commands called Pushd, Popd and Cd and Dirs.\n  It also defines abbreviations pushd and popd (the lower case versions)\n  to make it easier to type and get used to, but if it causes any\n  trouble for your regular command line typing (as the abbreviations are\n  expanded anywhere you type), just set the g:pushpopNoAbbrev variable in\n  your .vimrc, or install cmdalias.vim also along with PushPop.vim (in\n  which case additional abbreviations are defined for dirs and cdp as\n  well). The cmdalias.vim plugin provides support for defining\n  abbreviations that expand only at the start of the command-line, which\n  make the abbreviations behave just like bash aliases, or like the Vim\n  built-in commands (read the plugin's description for more information).\n- Most of the Bash pushd/popd syntax is supported.\n- The plugin integrates seamlessly with the vim features such as 'cdpath'.\n  It handles the protected command and space chars correctly as expected,\n  however, unprotected spaces are not treated as separators (which is the\n  case with 'cdpath' for the sake of backward compatibility with age old\n  vim 3.0).\n- Vim provides a \"cd -\" command to quickly jump back to the previous\n  directory on the lines of bash, to make it complete, the script\n  sets the g:OLDPWD variable to mimic the $OLDPWD variable of bash.\n- The Cdp command will push the directory of the current file on to the\n  stack and cd into it.\n- It provides commands to make it easy to manipulate the \"cdpath\" and save\n  and restore it (unless the persistence feature of genutils.vim is\n  disabled), without needing to manually edit the vimrc. The \"PPAddDir\"\n  command will allow you to add the specified directory or the current\n  directory (with no arguments) to 'cdpath'. The \"PPRemoveDir\" command can\n  be used to remove a directory by its name or index, or just the current\n  directory (whith no arguments). Both commands accept \"-l\" as an option\n  to specify the directory argument literally (the directory name is then\n  not modified). The \"-l\" option with no arguments can also be used to\n  add/remove \"empty\" directory entry (represented as ^, or ,, or ,$ in the\n  'cdpath'). If you need to add entried that have wild-cards in them (such\n  as \"src/**\", the above commands can't be used as Vim will try to expand\n  the wildcards before the plugin can see them, so in this case use\n  \"PPAddPat\" and \"PPRemovePat\" commands. Pass \"-l\" option to avoid\n  modification.\n- To view the list of directories in your 'cdpath', use the regular \"set\n  cdpath?\" command or just \"Cdpath\". In addition, the \"Cd\" command accepts\n  \"-i\" option to cd directly into one of the directories in 'cdpath'. With\n  no arguments, you will be prompted with the list of directories to\n  select from, and with an index as the argument (starting from 0), you\n  can directly cd into the directory at that index.\n- If g:pushpopCdable_vars is set, the plugin emulates the bash\n  'cdable_vars' feature. When the built-in \":cd\" fails, the argument is\n  assumed to be the name of a global variable whose value is the directory\n  to change to. Normally, you don't necessarily need to use the :Cd\n  command instead of :cd command, but in this particular case, the feature\n  will not work unless you use the :Cd command. Consider aliasing :cd to\n  :Cd as described in Deprecations section below.\n- The main functions are also exposed as global functions, which can be used\n  by the script writers to recursively traverse directories and finally\n  return back to the original directory.\n\nPlease see the script header for more information such as deprecations etc.\n\nPlease send in your comments/feedback/suggestions/contributions for improving the script.\n\n=================================================\nYou can refer to the bash manual page for more information on how to use Pushd, Popd and Dirs commands. In case you don't have access to it, here is an extract from bash man page (on cygwin):\n\n       pushd [-n] [dir]\n       pushd [-n] [+n] [-n]\n              Adds a directory to the top of the directory stack,\n              or  rotates  the  stack,  making the new top of the\n              stack the current working directory.  With no argu-\n              ments,   exchanges  the  top  two  directories  and\n              returns 0, unless the  directory  stack  is  empty.\n              Arguments,  if  supplied,  have the following mean-\n              ings:\n              +n     Rotates the stack so that the nth  directory\n                     (counting from the left of the list shown by\n                     dirs, starting with zero) is at the top.\n              -n     Rotates the stack so that the nth  directory\n                     (counting  from  the right of the list shown\n                     by dirs, starting with zero) is at the  top.\n              -n     Suppresses  the  normal  change of directory\n                     when adding directories  to  the  stack,  so\n                     that only the stack is manipulated.\n              dir    Adds  dir to the directory stack at the top,\n                     making it the new current working directory.\n\n              If  the pushd command is successful, a dirs is per-\n              formed as well.  If the first form is  used,  pushd\n              returns  0  unless  the  cd to dir fails.  With the\n              second form, pushd returns 0 unless  the  directory\n       popd [-n] [+n] [-n]\n              Removes  entries from the directory stack.  With no\n              arguments,  removes  the  top  directory  from  the\n              stack,  and performs a cd to the new top directory.\n              Arguments, if supplied, have  the  following  mean-\n              ings:\n              +n     Removes the nth entry counting from the left\n                     of the list shown  by  dirs,  starting  with\n                     zero.   For example: ``popd +0'' removes the\n                     first directory, ``popd +1'' the second.\n              -n     Removes the  nth  entry  counting  from  the\n                     right  of  the  list shown by dirs, starting\n                     with zero.  For example: ``popd -0'' removes\n                     the  last directory, ``popd -1'' the next to\n                     last.\n              -n     Suppresses the normal  change  of  directory\n                     when removing directories from the stack, so\n                     that only the stack is manipulated.\n\n              If the popd command is successful, a dirs  is  per-\n              formed  as  well, and the return status is 0.  popd\n              returns false if an invalid option is  encountered,\n              the directory stack is empty, a non-existent direc-\n              stack is empty, a non-existent directory stack ele-\n              ment is specified, or the directory change  to  the\n              specified new current directory fails.\n              tory stack entry is  specified,  or  the  directory\n              change fails.\n       dirs [-clpv] [+n] [-n]\n              Without  options,  displays  the  list of currently\n              remembered directories.  The default display is  on\n              a  single  line  with  directory names separated by\n              spaces.  Directories are added to the list with the\n              pushd  command;  the  popd  command removes entries\n              from the list.\n              +n     Displays the nth  entry  counting  from  the\n                     left  of the list shown by dirs when invoked\n                     without options, starting with zero.\n              -n     Displays the nth  entry  counting  from  the\n                     right of the list shown by dirs when invoked\n                     without options, starting with zero.\n              -c     Clears the directory stack by  deleting  all\n                     of the entries.\n              -l     Produces a longer listing; the default list-\n                     ing format uses a tilde to denote  the  home\n                     directory.\n              -p     Print the directory stack with one entry per\n                     line.\n              -v     Print the directory stack with one entry per\n                     line, prefixing each entry with its index in\n                     the stack.\n\n              The return value is 0 unless an invalid  option  is\n              supplied  or n indexes beyond the end of the direc-\n              tory stack.\n=================================================\n\nSearch_key_words: push pop directory cd change bash csh dirs pushpop genutils Hari Krishna Dara",
  "rating_total": "27",
  "rating_votes": "11",
  "downloads": "2352",
  "install_details": "Just drop it in your plugin directory. \n\nRequires:\ngenutils.vim (2.0): vimscript #197 \nDepends on (Not required):\ncmdalias.vim (1.0): vimscript #745\n\nPlease note that prior to 4.0 version, the plugin depended on the older versions of genutils and multvals\ngenutils.vim (1.1): vimscript #197 \nmultvals.vim (3.0): vimscript #171\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6710",
      "filename": "PushPop.vim",
      "script_version": "4.0",
      "date": "2007-02-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "Made to work with Vim7. Also, it uses the Vim7 Lists instead of\nmultvals, so it no longer depends on multvals and it is a lot cleaner.\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2277",
      "filename": "PushPop.vim",
      "script_version": "2.4",
      "date": "2003-08-28",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Refined the handling of 'cdpath'. It works better now.\n- Subtle improvements in the Pushd/Popd command usage.\n- Delayed syncing is used to sync the top level directory in the stack with the current directory. You don't have to use the custom Cd command anymore, which means one less abbreviation to deal with. This also means that it will work seamlessly with other plugins that change directory as well (like fileexplorer).\n- The script now takes advantage of cmdalias.vim when available for creating aliases to the capitalized commands. This is better than the plain cabbr's.\n- There is a new 'cdable_vars' feature on the lines of bash.\n- Fixed some misc. minor issues.\n\nPlease read the complete header in the script for changes and new usage."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1583",
      "filename": "PushPop.vim",
      "script_version": "2.3",
      "date": "2002-12-26",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Fixed bugs. \n- Respect protected commas in cdpath and directory names. \n- Minor improvements: Pushd also now takes -i argument. AddDir and RemoveDir take -l argument. Use g:pushpopPersistCdpath to control the persistnce of cdpath.\n- Requires the new version of multvals.vim\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1126",
      "filename": "PushPop.vim",
      "script_version": "2.2",
      "date": "2002-08-14",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "I missed to do an integration, so ended up with a wrong file here. I apologize, please update your version with this."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1122",
      "filename": "PushPop.vim",
      "script_version": "2.1",
      "date": "2002-08-14",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "I have totally redesigned it to work seamlessly with vim's cd and cdpath features. You can now pushd into a diretory that is in the cdpath. Also added new commands to manage the cdpath itself, without needing to change the .vimrc. Removed unnecessary command-line abbreviations. Removed Cdp command as it is a duplicate of \"cd -\" command and renamed Cdc command as Cdp. The script now requires genutils.vim for storing and retrieving cdpath."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=699",
      "filename": "PushPop.vim",
      "script_version": "2.0.5",
      "date": "2002-03-19",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "Fixed pushd with no-arg to switch between the top two dirs, instead of rotating (like with an index). Fixed cd to not to do a dirs. Added new commands cdp to quickly go back to the previous directory and cdc to pushd in to the directory of the currently open file."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=576",
      "filename": "PushPop.vim",
      "script_version": "2.0.2",
      "date": "2002-02-10",
      "vim_version": "6.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "I finally made the script complete and plugin compatible. It now supports most of the bash pushd/popd syntax and is very compliant with it in the functionality and messages. Give it a shot, I am sure you will like it.\n\nIt also provided an commandline abbreviation for cd command to adjust the top most directory. You can set the global variable pushpopNoAbbrev to disable the commandline abbreviations such as cd, dirs, pushd etc., if they interfere with your regular usage."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=298",
      "filename": "PushPop.vim",
      "script_version": "1.0beta5",
      "date": "2001-10-22",
      "vim_version": "5.7",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}