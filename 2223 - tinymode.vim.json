{
  "script_id": "2223",
  "name": "tinymode.vim",
  "summary": "allows definition of tiny modes for Normal mode",
  "script_type": "utility",
  "description": "We cannot add new Vim modes using Vim script.  But we can map keys in a way\nthat comes close.  Example:\n\n    nmap          <C-W>+     <C-W>+<SID>ws\n    nmap          <C-W>-     <C-W>-<SID>ws\n    nn <script>   <SID>ws+   <C-W>+<SID>ws\n    nn <script>   <SID>ws-   <C-W>-<SID>ws\n    nmap          <SID>ws    <Nop>\n\nThese mappings make the builtin CTRL-W_+ and CTRL-W_- (in short ^W+, ^W-)\nkeys a little smarter: You can now type ^W++- instead of ^W+^W+^W- to change\nthe window size.  It's like ^W+ enters a \"Vim mode\" with the new keys + and - .\n\ntinymode.vim is not needed to create such mappings, but it adds some\nbenefits:\n\n- tinymode-style notation of the above mappings:\n\n    call tinymode#EnterMap(\"winsize\", \"<C-W>+\", \"+\")\n    call tinymode#EnterMap(\"winsize\", \"<C-W>-\", \"-\")\n    call tinymode#Map(\"winsize\", \"+\", \"wincmd +\")\n    call tinymode#Map(\"winsize\", \"-\", \"wincmd -\")\n\nOk, no benefits yet, but read on:\n\n- you can enable support for a count typed within a mode:\n\n    call tinymode#ModeArg(\"winsize\", \"owncount\", 1)\n\n  you need a literal [N] in the commands for the count to be recognized:\n\n    call tinymode#Map(\"winsize\", \"+\", \"[N]wincmd +\")\n    call tinymode#Map(\"winsize\", \"-\", \"[N]wincmd -\")\n\n- mode message\n\n    call tinymode#ModeMsg(\"winsize\", \"Change window size +/-\")\n\n  The mode message makes it easy to spot that a mode is active.  It is even\n  more useful when it shows the available keys.\n\n- different 'timeoutlen'\n\n    call tinymode#ModeArg(\"winsize\", \"timeoutlen\", 5000)\n\n  In most cases, the default 'timeoutlen' of 1000 ms is too short.  That's\n  why tinymode sets the default to 3000 ms throughout a mode.  If this is\n  not enough, another value can be given.\n\n- interruption recovery\n\n    LeaveMode\n\n  The \"tinymode technique\" has a backdraw: If a command \"beeps\" or you press\n  CTRL-C, the chain of mappings is interrupted, which means the necessary\n  clean up before leaving a mode is skipped.  \"Clean up\" means to set some\n  options back to previous values ('timeoutlen', 'cpo', 'showcmd').\n  Unfortunately, a beep cannot be catched like other errors.\n\n  If you detect this situation, you can start and leave a mode in a clean\n  way or execute :LeaveMode .\n\n- timeout warning\n\n  Sooner or later a tiny mode times out automatically.  As a visual hint\n  that a mode will time out soon the color of the mode message will be\n  changed from ModeMsg to Normal.\n\n(btw: this exact description is not part of the zip package)\n\n2008 Nov 14\n\nlooks as if a similar script has been added:\nvimscript #2467\n",
  "rating_total": "22",
  "rating_votes": "7",
  "downloads": "545",
  "install_details": "extract the archive to your vim folder (e.g. ~/.vim or ~\\vimfiles), files in the archive:\n    autoload\\tinymode.vim\n    autoload\\tinym_ex.vim\n    doc\\tinymode.txt\n\ntinym_ex.vim is not required, it contains examples.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=9130",
      "filename": "tinymode_0.5.zip",
      "script_version": "0.5",
      "date": "2008-08-15",
      "vim_version": "7.0",
      "author": {
        "user_id": "8357",
        "user_name": "anwo",
        "first_name": "Andy",
        "last_name": "Wokula",
        "email": "anwoku at yahoo.de",
        "homepage": ""
      },
      "release_notes": "still work in progress, but an upload is due:\nresets more important options (lz, cpo), custom 'timeoutlen', 2nd timeout step, more mode options, modes no longer quit on (catchable) errors, 0 can be command or count, some more ..."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8688",
      "filename": "tinymode.vim",
      "script_version": "0.3",
      "date": "2008-05-14",
      "vim_version": "7.0",
      "author": {
        "user_id": "8357",
        "user_name": "anwo",
        "first_name": "Andy",
        "last_name": "Wokula",
        "email": "anwoku at yahoo.de",
        "homepage": ""
      },
      "release_notes": "exec commands when entering/leaving a mode, via ModeArg()\nnow works with i_Ctrl-O\nkeep error messages on screen\nnow ModeMsg(..., \"\") removes the message entry\nfixed init bug with Map() followed by EnterMap() for same key"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8635",
      "filename": "tinymode.zip",
      "script_version": "0.2",
      "date": "2008-05-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "8357",
        "user_name": "anwo",
        "first_name": "Andy",
        "last_name": "Wokula",
        "email": "anwoku at yahoo.de",
        "homepage": ""
      },
      "release_notes": "added support for the count (both initial v:count and digits typed within the mode)"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8626",
      "filename": "tinymode.zip",
      "script_version": "0.1",
      "date": "2008-05-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "8357",
        "user_name": "anwo",
        "first_name": "Andy",
        "last_name": "Wokula",
        "email": "anwoku at yahoo.de",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}