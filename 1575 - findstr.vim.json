{
  "script_id": "1575",
  "display_name": "findstr.vim",
  "summary": "Using MS-Windows findstr utility to search for text with Vim",
  "name": "findstr.vim",
  "script_type": "utility",
  "description": "Overview\nThe findstr plugin integrates the MS-Windows findstr search utility with\nVim. You can use this plugin to search for a pattern or text in multiple\nfiles in the current directory or in a directory tree and easily jump to the\nmatches. This plugin is useful only on MS-Windows based systems where the\nfindstr utility is available.\n\nUsage\nThe findstr plugin introduces the \":Findstring\", \":Findpattern\",\n\":Rfindstr\" and \":Rfindpattern\" Vim commands to search for text and patterns\nin files.\n\nThe \":Findstring\" command is used to search for literal strings in files in\nthe current directory. The \":Rfindstring\" command is used to search for a\nliteral string in the files in a directory tree.\n\nThe \":Findpattern\" command is used to search for a regular expression\npattern in files in the current directory. The \":Rfindpattern\" command is\nused to search for a regular expression pattern in the files in a directory\ntree.\n\nThe syntax of these commands is\n\n   :Findstring [ <options> ] [ <search_string> [ <file_name(s)> ] ]\n   :Findpattern [ <options> ] [ <search_pattern> [ <file_name(s)> ] ]\n   :Rfindstring [ <options> ] [ <search_string> [ <file_name(s)> ] ]\n   :Rfindpattern [ <options> ] [ <search_pattern> [ <file_name(s)> ] ]\n\nIn the above commands, all the arguments are optional.\n\nYou can specify findstr options like /i (ignore case) to the above command.\nIf the <options> are not specified, then the default findstr options\nspecified by the variable Findstr_Default_Options is used. Refer to the\nfindstr MS-Windows documentation for the command-line options supported by\nthe findstr command.\n\nYou can specify the search text/pattern as an argument to the above\ncommands.  If the <search_pattern> is not specified, then you will be\nprompted to enter a search pattern. By default, the keyword under the cursor\nis displayed for the search pattern prompt. You can accept the default or\nmodify it. The regular expression patterns supported by the findstr command\ncan be used in the pattern argument. Refer to the findstr MS-Windows\ndocumentation for more information.\n\nIf you want to specify a search pattern with space characters or a\nmulti-word pattern, then you should use the \":Findstring\" command text input\nprompt to supply the pattern.\n\nYou can specify one or more file names (or file patterns) to the above\ncommands.  If the <file_names> are not specified, then you will be prompted\nto enter file names.  By default, the pattern specified by the\nFindstr_Default_Filelist variable is used. To specify the file name(s) as an\nargument to the above commands, you have to specify the search pattern also.\n\nWhen you enter only the command name, you will be prompted to enter the\nsearch pattern and the files in which to search for the pattern. By default,\nthe keyword under the cursor is displayed for the search pattern prompt.\nDepending on the command, you may prompted for additional parameters like\nthe directories to search for the pattern.\n\nYou can retrieve previously entered values for the \":Findstring\" prompts\nusing the up and down arrow keys. You can cancel the command by pressing the\nescape key.  You can use CTRL-U to erase the default shown for the prompt\nand CTRL-W to erase the previous word in the prompt. For more information\nabout editing the prompt, read ':help cmdline-editing' Vim help topic.\n\nYou can cancel the \":Findstring\" command when you are prompted for a search\npattern or file names by pressing the <Esc> key. You cannot cancel (or kill)\nthe findstr command after the external command is invoked.\n\nYou can map a key to invoke \":Findstring\". For example, the following map\ninvokes the \":Findstring\" command to search for the keyword under the\ncursor:\n\n      nnoremap <silent> <F3> :Findstring<CR>\n\nThe output of the findstr command will be listed in the Vim quickfix window.\n1. You can select a line in the quickfix window and press <Enter> or double\n   click on a match to jump to that line.\n2. You can use the \":cnext\" and \":cprev\" commands to the jump to the next or\n   previous output line.\n3. You can use the \":colder\" and \":cnewer\" commands to go between multiple\n   findstr quickfix output.\n4. The quickfix window need not be opened always to use the findstr output.\n   You can close the quickfix window and use the quickfix commands to jump\n   to the findstr matches.  Use the \":copen\" command to open the quickfix\n   window again.\n\nFor more information about other quickfix commands read \":help quickfix\"\n\nConfiguration\nBy changing the following variables you can configure the behavior of this\nplugin. Set the following variables in your .vimrc file using the 'let'\ncommand.\n\nThe \":Findstring\" command will prompt you for the files in which to search\nfor the pattern. The 'Findstr_Default_Filelist' variable is used to specify\nto default value for this prompt. By default, this variable is set to '*'.\nYou can specify multiple matching patterns separated by spaces. You can\nchange this settings using the let command:\n\n      :let Findstr_Default_Filelist = '*.[chS]'\n      :let Findstr_Default_Filelist = '*.c *.cpp *.asm'\n\nThe 'Findstr_Default_Options' is used to pass default command line options\nto the findstr command. By default, this is set to an empty string. You can\nchange this using the let command:\n\n      :let Findstr_Default_Options = '/i'\n\nBy default, when you invoke the \":Findstring\" command the quickfix window\nwill be opened with the search output.  You can disable opening the quickfix\nwindow, by setting the 'Findstr_OpenQuickfixWindow' variable  to zero:\n\n      :let Findstr_OpenQuickfixWindow = 0\n\nYou can manually open the quickfix window using the :cwindow command.\n",
  "rating_total": "16",
  "rating_votes": "4",
  "downloads": "776",
  "install_details": "1. Copy the findstr.vim file to the $HOME/vimfiles/plugin or\n   $VIM/vimfiles/plugin directory. \n   Refer to the following Vim help topics for more information about Vim\n   plugins:\n      :help add-plugin\n      :help add-global-plugin\n      :help runtimepath\n2. Restart Vim.\n3. You can now use the \":Findstring\" or \":Findpattern\" command to search for\n   text/patterns in files.\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=5839",
      "filename": "findstr.vim",
      "script_version": "0.1",
      "date": "2006-06-16",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
