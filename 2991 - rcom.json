{
  "script_id": "2991",
  "display_name": "rcom",
  "summary": "Evaluate R (www.r-project.org) code via rcom (windows only)",
  "name": "rcom",
  "script_type": "ftplugin",
  "description": "The rcom ftplugin uses the RCom interface (http://rcom.univie.ac.at)\nto the R Statistical Package (http://www.r-project.org) for sending \ncode to a running instance of R. This way any R snippet can be easily \nevaluated in that instance of R GUI.\n\nAfter installation, interaction with R via rcom is enabled for all\nbuffers with filetype r. For other filetypes, you can use the\nfunctions |rcom#EvaluateInBuffer()|.\n\nFeatures:\n\n    - Evaluate R code\n    - Omnicompletion for R\n    - Maps for normal, visual, and insert mode\n    - Keyword map (|K|)\n    - Operator\n\nNormal usage~\n\n    1. Start an instance of R GUI and load the image you want.\n    2. Open an R source file in VIM.\n    3. Type <c-cr> to evaluate the current line/visual area in R.\n    4. Type [count]+ or +{motion} to evaluate some text in R. (You can \n       type ++ to invoke |+|.)\n\nFull docs: http://github.com/tomtom/rcom_vim/blob/master/doc/rcom.txt",
  "rating_total": "0",
  "rating_votes": "0",
  "downloads": "113",
  "install_details": "Requirements:\n\n    - Windows only (because of rcom)\n    - A ruby-enabled version of vim\n    - R\n    - A suitable version of rcom (http://rcom.univie.ac.at). The rcom \n      library has to be loaded in R, which should be the default \n      behaviour after installing rcom.\n\nYou can check if your installation meets these requirements by \nevaluating the following line in vim. If it doesn't print an error, \nyou're ready to go:\n\n      :ruby require 'win32ole'; r = WIN32OLE.new(\"StatConnectorSrv.StatConnector\"); r.Init(\"R\"); r.Close\n\nIt is recommended to set |g:rcom#server| and |g:rcom#reuse| = 1 for \nimproved stability.\n\nIn order to install the vba, open the vba file and type: >\n\n    :so %\n\nSee :help vimball for details. If you have difficulties or use vim 7.0,\nplease make sure, you have the current version of vimball\n(vimscript #1502) installed or update your runtime.\n\nhttp://github.com/tomtom/rcom_vim",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12583",
      "filename": "rcom.vba.gz",
      "script_version": "0.2",
      "date": "2010-03-09",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Add cursor markers only if w:tskeleton_hypercomplete exists\n- g:rcom#reuse: If 0, don't use a running instance of R GUI (transcribe the results in VIM; be aware that some problems could cause problems)\n- If there is a vim server named RCOM running, evaluate R code remotely (this won't block the current instance of gvim)\n- Use g:rcom#server to start an instance of gvim that acts as server/proxy\n- Transcript, log"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12495",
      "filename": "rcom.vba.gz",
      "script_version": "0.1",
      "date": "2010-02-25",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
