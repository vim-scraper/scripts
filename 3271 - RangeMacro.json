{
  "script_id": "3271",
  "display_name": "RangeMacro",
  "summary": "Execute macro repeatedly until the end of a range is reached. ",
  "name": "RangeMacro",
  "script_type": "utility",
  "description": "DESCRIPTION\nMacros are a fantastic way to apply the same modification many many times.\nJust record once and then repeat, repeat, repeat...\n\nThough it's easy to repeat (@@, [count]@{0-9a-z\".=*}) a macro, explicit\nrepeating becomes cumbersome when you're dealing with hundreds of repeats. You\ncan write a recursive macro (i.e. invoking the macro at the end), but that\nwill execute over the entire buffer, until the macro errors out on the border\nof the buffer. Simple macros that mostly restrict themselves to a single line\ncan be repeated via :[range]normal @{0-9a-z\".=*}, but that breaks when lines\nare inserted or removed, or the macro jumps to other lines. \n\nWhat's needed for extensive macro repetitions is to repeatedly execute the\nmacro over a range, and stop once the macro navigates out of the range. \n\nThis plugin provides a :RangeMacro command and mappings that execute a\nrecorded macro over a range, area of text covered by {motion}, or the current\nseletion. \n\nRELATED WORKS\n- CommandWithMutableRange.vim (vimscript #3270) executes commands which may\n  add or remove lines for each line in the range. \n\nUSAGE\n:[range]RangeMacro {0-9a-z\".*+}\n\t\t\tPosition the cursor on the first column of the start\n\t\t\tof [range] and execute the contents of register\n\t\t\t{0-9a-z\".*+} repeatedly until the cursor moves beyond\n\t\t\tthe lines covered by [range]. \n\n<Leader>@{0-9a-z\".*+}{motion}\n\t\t\tRepeatedly execute the contents of register\n\t\t\t{0-9a-z\".*+} until the cursor moves outside the text\n\t\t\tcovered by {motion}. \n\n{Visual}<Leader>@{0-9a-z\".*+}\n\t\t\tPosition the cursor on the first column of the\n\t\t\tselection and execute the contents of register\n\t\t\t{0-9a-z\".*+} repeatedly until the cursor moves outside\n\t\t\tthe selection. All selection modes are supported:\n\t\t\tcharacterwise, linewise and blockwise. \n\nNote: The check whether the macro moved outside the range is only done _after_\neach macro invocation. During macro evaluation, jumps outside the range can be\nused and will not stop macro execution. \n\nSUITABLE MACROS\nTo make a macro repeatable, the macro must move to the position where the next\nmacro call needs to take place, typically either as the first or last command\nof the macro. The macro will always be executed from top to bottom of the\nrange, regardless of how {motion} or the selection was made. \nSo, for example, if the macro processes line(s) sequentially, append the \"j\"\ncommand to move to the next line; if the buffer areas are located via\nsearching, you could use the \"n\" command to move to the next match. ",
  "install_details": "INSTALLATION\nThis script is packaged as a vimball. If you have the \"gunzip\" decompressor\nin your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress\nthe archive first, e.g. using WinZip. Inside Vim, install by sourcing the\nvimball or via the :UseVimball command. \n    vim RangeMacro.vba.gz\n    :so %\nTo uninstall, use the :RmVimball command. \n\nDEPENDENCIES\n- Requires Vim 7.0 or higher. \n\nCONFIGURATION\nFor a permanent configuration, put the following commands into your vimrc: \n\nAs there must be mappings for all supported registers, the mapping cannot be\neasily customized via the <Plug> mechanism. Instead, if you prefer a different\nmapping, redefine the start of the normal and visual mode mappings (before\nthe plugin is sourced): \n    let g:RangeMacro_Mapping = '<Leader>@'",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14021",
      "filename": "RangeMacro.vba.gz",
      "script_version": "1.00",
      "date": "2010-10-07",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
