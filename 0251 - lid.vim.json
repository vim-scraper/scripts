{
  "script_id": "251",
  "display_name": "lid.vim",
  "summary": "Plugin to integrate GNU id-utils tool with Vim",
  "name": "lid.vim",
  "script_type": "utility",
  "description": "Overview\nThe lid.vim Vim plugin provides a way to interact with the lid tool to\nlookup keywords in the ID database.\n\nFor more information about id utilities (lid, aid, etc), visit the \nfollowing pages: \n\n    http://www.delorie.com/gnu/docs/id-utils/id-utils_toc.html \n    http://www.gnu.org/software/idutils/idutils.html \n\nYou can download the id-utils binaries for MS-Windows from: \n\n    http://gnuwin32.sourceforge.net/packages/id-utils.htm\n\nUsage\nYou can lookup keywords in the ID database using the 'Lid' command. For\nexample,\n\n      :Lid<Enter> \n\nThis will prompt you for the keyword to lookup.  The default is the current\nkeyword under the cursor.  You can retrieve previously entered keywords\nusing the up and down arrow keys. You can cancel the lookup by pressing the\nescape key.\n\nYou can map a key to invoke the Lid command:\n\n      nnoremap <silent> <F4> :Lid <C-R><C-W><CR>\n\nAdd the above mapping to your ~/.vimrc file.\n\nYou can also specify the keyword to the Lid command like this:\n\n      :Lid <keyword>\n\nIn the above command format, you can press the <Tab> key to expand\nkeywords from a tags file.\n\nYou can use the \"-p\" and \"-v\" option to the 'Lid' command to selectively\ndisplay lines from the lid output. You can use the \"-p\" option to the 'Lid'\ncommand to list only those lid matches that contain a pattern. You can use\nthe \"-v\" option to the 'Lid' command to list only those lid matches that\ndoes not contain a pattern. Only one of the \"-p\" or \"-v\" options can be used\nat a time.\n\n       :Lid -p\n       :Lid -v\n\nIf you use the any one of the above options, you will prompted to enter the\npattern you are interested in.\n\nThe output of the lid command will be listed in the Vim quickfix window.\n1. You can select a line in the quickfix window and press <Enter> or double\n   click on a match to jump to that line.\n2. You can use the \":cnext\" and \":cprev\" commands to the jump to the next or\n   previous output line.\n3. You can use the \":colder\" and \":cnewer\" commands to go between multiple\n   Lid quickfix output windows.\n4. The quickfix window need not be opened always to use the lid output.\n   You can close the quickfix window and use the quickfix commands to jump\n   to the lid matches.  Use the \":copen\" command to open the quickfix\n   window again.\n\nFor more information about other quickfix commands read \":help quickfix\"\n\nConfiguration\nBy changing the following variables you can configure the behavior of this\nplugin. Set the following variables in your .vimrc file using the 'let'\ncommand.\n\nThe path to the lid executable is specified by the 'LID_Cmd' variable.  By\ndefault, this variable is set to lid. You can change the lid executable path\nby setting the 'LID_Cmd' variable:\n\n      let LID_Cmd = '/my/path/lid'\n\nBy default, this plugin uses 'ID' as the name of the database.  This is\ndefined by the 'LID_File' variable.  You can change the name/location of the\nID database by setting the 'LID_File' variable:\n\n      let LID_File = '/my/path/ID'\n\nYou can also specify more than one ID file names in the LID_File variable.\nThe ID file names should be separated by a ',' character.\n\n      let LID_File = '/my/path1/ID,/my/path2/ID,/my/path3/ID'\n\nThe plugin will use the first ID file name and run lid using that filename.\nIf a match is found, it will return the results. If a match is not found,\nthen the second ID file name will be used and this will be repeated till\neither a match is found or all the specified ID file names are processed.\n\nIf more than one ID file is specified using the 'LID_File' variable, you can\nset the 'LID_Search_Multiple_ID_Files' variable to 1 to always search for a\nkeyword in all the specified ID files. By default,\n'LID_Search_Multiple_ID_Files' variable is set to one. All the specified ID\nfiles are searched for the keyword. \n\n      let LID_Search_Multiple_ID_Files = 0\n\nBy default, when you invoke the :Lid command the quickfix window will be\nopened with the lid output.  You can disable opening the quickfix window,\nby setting the 'LID_OpenQuickfixWindow' variable to 1:\n\n      let LID_OpenQuickfixWindow = 1\n\nYou can manually open the quickfix window using the :cwindow command.\n\nThe 'LID_Shell_Quote_Char' variable specifies the character to use to\nescape the keyword before passing it to the lid command.  By default,\nfor MS-Windows systems, no shell quote character is set.  For other\nsystems, \"'\" is used as the the shell quote character.  You can change\nthis by setting the 'LID_Shell_Quote_Char' variable:\n\n      let LID_Shell_Quote_Char = '\"'\n\nBy default, the ID file specified by the LID_File variable will be used.  If\nyou set the 'LID_Prompt_ID_Filename' variable to 1, then every time the LID\ncommand will prompt for the location of the ID file.  The default ID file\nlocation displayed will be the last used value.  You can again set the\n'LID_Prompt_ID_Filename' variable back to 0, to turn off this prompt.  The\nlast supplied ID file will be used for further Lid invocations.\n\n      let LID_Prompt_ID_Filename = 1\n\nBy default, when the lid output is displayed, the cursor will be\nautomatically positioned at the first matching line.  You can set the\nLID_Jump_To_Match variable to 0 to prevent this.  In this case, only the\noutput from LID will be displayed.\n\n      let LID_Jump_To_Match = 0\n",
  "rating_total": "95",
  "rating_votes": "29",
  "downloads": "1959",
  "install_details": "1. Copy the lid.vim script to the .vim/plugin directory. Refer to \n     'help add-plugin', 'help add-global-plugin' and 'help runtimepath' for \n     more details.\n2. Set the LID_Cmd variable to point to the lid utility path.\n3. Restart Vim.\n4. You can use the \":Lid\" command to search for a keyword.\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2028",
      "filename": "lid.vim",
      "script_version": "2.4",
      "date": "2003-05-29",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Fixed a problem in searching multiple ID files when some of the ID files are not present."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1221",
      "filename": "lid.vim",
      "script_version": "2.3",
      "date": "2002-09-18",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Added optional support for searching a keyword always in more than one ID file."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=733",
      "filename": "gid.vim",
      "script_version": "1.1",
      "date": "2002-03-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "244",
        "user_name": "yega",
        "first_name": "Yegappan",
        "last_name": "Lakshmanan",
        "email": "yegappan at yahoo.com",
        "homepage": ""
      },
      "release_notes": "Updated script comments."
    }
  ]
}
