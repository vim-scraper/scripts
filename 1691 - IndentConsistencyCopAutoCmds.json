{
  "script_id": "1691",
  "display_name": "IndentConsistencyCopAutoCmds",
  "summary": "autocmds for IndentConsistencyCop.vim",
  "name": "IndentConsistencyCopAutoCmds",
  "script_type": "utility",
  "description": "DESCRIPTION\nThe autocmds in this script automatically trigger the IndentConsistencyCop for\ncertain, configurable filetypes (such as c, cpp, html, xml, ... which\ntypically contain lots of indented lines) once when you load the file in Vim,\nand (optionally) also on every write of the buffer. The entire buffer will be\nchecked for inconsistent indentation, and you will receive a report on its\nfindings. With this automatic background check, you'll become aware of\nindentation problems before you start editing and in case you accidentally\nintroduce an inconsistency with your edits. \n\nUSAGE\nTriggering happens automatically; of course, you can still manually execute\nthe :IndentConsistencyCop command to re-check the buffer at any time. \n\nFor very large files, the check may take a couple of seconds. You can abort\nthe script run with CTRL-C, like any other Vim command. \n\nIf you chose to \"Ignore\" any inconsistent indents in the IndentConsistencyCop\nreport, further automatic invocations on buffer writes are suspended. It is\nassumed that you don't bother for this particular file. You can re-enable\nautomatic invocations by manually invoking :IndentConsistencyCop once and then\nchoosing an option other than \"Ignore\". \n\n:IndentConsistencyCopAutoCmdsOff\n:IndentConsistencyCopAutoCmdsOn\n\t\t\tDisable / re-enable the autocommands. This affects all\n\t\t\texisting buffers as well as any newly opened files. ",
  "install_details": "INSTALLATION\nThis script is packaged as a vimball. If you have the \"gunzip\" decompressor\nin your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress\nthe archive first, e.g. using WinZip. Inside Vim, install by sourcing the\nvimball or via the :UseVimball command. \n    vim IndentConsistencyCopAutoCmds.vba.gz\n    :so %\nTo uninstall, use the :RmVimball command. \n\nDEPENDENCIES\n- Requires Vim 7.0 or higher. \n- Requires the IndentConsistencyCop.vim plugin (vimscript #1690). \n\nCONFIGURATION\nFor a permanent configuration, put the following commands into your vimrc: \n\nIf you don't like the default filetypes that are inspected, define your own\ncomma-separated list of filetypes or add to the existing ones: \n    let g:indentconsistencycop_filetypes = 'ant,c,cpp,cs,csh,css,dosbatch,html,java,javascript,jsp,lisp,pascal,perl,php,python,ruby,scheme,sh,sql,tcsh,vb,vbs,vim,wsh,xhtml,xml,xsd,xslt,zsh'\n    let g:indentconsistencycop_filetypes .= ',perl6'\n\nTurn off the IndentConsistencyCop run after each write via \n    let g:indentconsistencycop_CheckAfterWrite = 0\nThe IndentConsistencyCop will only run once after loading a file. \n\nTo avoid blocking the user whenever a large buffer is written, the\nIndentConsistencyCop is only scheduled to run on the next 'CursorHold' event\nin case the buffer contains many lines. The threshold can be adjusted (to the\nsystem's performance and personal level of patience): \n    let g:indentconsistencycop_CheckAfterWriteMaxLinesForImmediateCheck = 1000\n\nBy default, both indent consistency and consistency with the buffer settings\nwill be checked when a file is loaded. \nOnly indent consistency is checked after a write of the buffer. The user\nalready was alerted to inconsistent buffer settings when the file was loaded\nand editing the file did't change anything in that regard. \nIf you don't want the check for consistency with the buffer settings, set \n    let g:indentconsistencycop_AutoRunCmd = 'IndentRangeConsistencyCop'",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14712",
      "filename": "IndentConsistencyCopAutoCmds.vba.gz",
      "script_version": "1.31",
      "date": "2011-01-09",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BUG: \"E216: No such group or event: IndentConsistencyCopBufferCmds\" on :IndentConsistencyCopAutoCmdsOff. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14666",
      "filename": "IndentConsistencyCopAutoCmds.vba.gz",
      "script_version": "1.30",
      "date": "2010-12-31",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- ENH: Do not invoke the IndentConsistencyCop if the user chose to ignore the cop's report of an inconsistency. Requires b:indentconsistencycop_result.isIgnore flag introduced in IndentConsistencyCop 1.21. \n- ENH: Only check indent consistency after a write of the buffer, not consistency with buffer settings. \n- BUG: :IndentConsistencyCopAutoCmdsOff only works for future buffers, but does not turn off the cop in existing buffers. Must remove all buffer-local autocmds, too. \n- Allowing to just run indent consistency check, not buffer settings at all times via g:indentconsistencycop_AutoRunCmd. \n- Added separate help file and packaging the plugin as a vimball. \n- ENH: Added \"check after write\" feature, which triggers the IndentConsistencyCop whenever the buffer is written. To avoid blocking the user, in large buffers the check is only scheduled to run on the next 'CursorHold' event. \n- BUG: The same buffer-local autocmd could be created multiple times when the filetype is set repeatedly. \n- BUG: By clearing the entire IndentConsistencyCopBufferCmds augroup, pending autocmds for other buffers were deleted by an autocmd run in the current buffer. Now deleting only the buffer-local autocmds for the events that fired. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8840",
      "filename": "IndentConsistencyCopAutoCmds.vim",
      "script_version": "1.10.004",
      "date": "2008-06-23",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Minor change: Added -bar to all commands that do not take any arguments, so that these can be chained together. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8330",
      "filename": "IndentConsistencyCopAutoCmds.vim",
      "script_version": "1.10.003",
      "date": "2008-02-22",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Avoiding multiple invocations of the IndentConsistencyCop when reloading or switching buffers. Now there's only one check per file and VIM session. \nAdded commands :IndentConsistencyCopAutoCmdsOn and :IndentConsistencyCopAutoCmdsOff to re-enable/disable autocommands.  "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6330",
      "filename": "IndentConsistencyCopAutoCmds.vim",
      "script_version": "0.01",
      "date": "2006-10-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
