{
  "script_id": "336",
  "display_name": "lh-cpp-ftplugins",
  "summary": "C++ (and C) ftplugins",
  "name": "lh-cpp-ftplugins",
  "script_type": "ftplugin",
  "description": "This package contains several ftplugins addressed at the edition of \nC and C++ files. I think the C ftplugin <c_set.vim> could be used \nwith other type of files like Java, C#, etc.\n\nFor a complete and quite extensive description of what is contained, \nyou can take a look at my web site :\n    http://hermitte.free.fr/vim/c.php\nand http://hermitte.free.fr/vim/ressources/vimfiles/ftplugin/c/doc/lh-cpp-readme.txt\n\nShortly, the C control statements ('if', 'else', 'elif', 'switch', 'while', 'for') are expanded as they are typed, with respect of the context: i.e. they are not expanded within string or comment contexts. So, there is no need of having obscure keybindings to expands them.\nIn Visual (/normal) mode, we can hit ',if', ',for' (',' beeing the localleader), etc to insert the control statement around the current visual selection (/line).\nIf the bracketing system I propose is installed, markers (<< and >>) will be inserted. This can be very disturbing when one is not used to this addicting little feature -> \"vim foo.cpp ;; :help lh-cpp-first-steps\". Give it a try!\n\nRegarding the C++ part, there are some other statements (like 'try', 'catch') supported in the same way.\n\n\nMore important, there are several commands (and indirectly functions) aimed at inserting C++ lines of code and comments. The two most interresting are certainly:\n(*) ;AA that will guide you all along the insertion of class attributes (member data) and their accessors and mutators (getters and setters).\n(*) ;GI that will split-open the implementation file (.cpp) and jump to the implementation of the current function-prototype under the cursor. If there is no implementation for this function, a default one will be provided on the fly.\nThe main ideas regarding this facility come from Leif Wickland and Robert KellyIV ;  check vimtip#335\n\nIn the archive, you will also find some other ftplugins (of interrest for C and C++ programming, like a folding plugin for C&C++, ...) that come from here (vim.sf.net), and many plugins *needed* by the ftplugins -- actually some are only recommended or useful.\n\nIn the plugins, there is for instance a late customisation of Gergely Kontra's mu-template for C and C++ programming.\n\nFeedback welcome.\nPS: a more up-to-date version may be available on my web site.\nPPS: a changelog is available here: http://hermitte.free.fr/vim/ressources/vimfiles/ftplugin/cpp/changelog",
  "rating_total": "24",
  "rating_votes": "16",
  "downloads": "2564",
  "install_details": "untar the archive into your $HOME/vimfiles/ (or $HOME/.vim/) directory.\n  cd $HOME\n  gzip -cd lh-cpp.tar.gz | tar xf -\n  mv lh-cpp vimfiles\n  \nand from VIM, execute ':helptags $HOME/vimfiles/doc'\n\nN.B.: \n* an old version of a.vim is required ; the last ones don't suit\n* for other (ft)plugins, if you found a version older that the version you already \nhave, take the more recent.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2848",
      "filename": "lh-cpp.tar.gz",
      "script_version": "20040316",
      "date": "2004-03-20",
      "vim_version": "6.0",
      "author": {
        "user_id": "102",
        "user_name": "hermitte",
        "first_name": "Luc",
        "last_name": "Hermitte",
        "email": "hermitte at free.fr",
        "homepage": "http://hermitte.free.fr/vim"
      },
      "release_notes": "Many things have been enhanced. Several more options to tune the mappings. More complete documentation. Check the changelog for more info."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1287",
      "filename": "lh-cpp.tar.gz",
      "script_version": "1.3",
      "date": "2002-10-08",
      "vim_version": "6.0",
      "author": {
        "user_id": "102",
        "user_name": "hermitte",
        "first_name": "Luc",
        "last_name": "Hermitte",
        "email": "hermitte at free.fr",
        "homepage": "http://hermitte.free.fr/vim"
      },
      "release_notes": "Some annoying bugs fixed regarding Triggers.vim and pathnames ; folding enhanced ; documentation updated ; facilities to jump to functions (member or not) implementations, if the implementation does not exist yet, a default one is provided -- cf VIM TIP#135 ; plus some other minor bonuses."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1012",
      "filename": "lh-cpp.tar.gz",
      "script_version": "1.2",
      "date": "2002-07-11",
      "vim_version": "6.0",
      "author": {
        "user_id": "102",
        "user_name": "hermitte",
        "first_name": "Luc",
        "last_name": "Hermitte",
        "email": "hermitte at free.fr",
        "homepage": "http://hermitte.free.fr/vim"
      },
      "release_notes": "Documentation added ; dependencies simplified : it will be easier to use only some scripts and not others."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1008",
      "filename": "lh-cpp.tar.gz",
      "script_version": "1.1",
      "date": "2002-07-10",
      "vim_version": "6.0",
      "author": {
        "user_id": "102",
        "user_name": "hermitte",
        "first_name": "Luc",
        "last_name": "Hermitte",
        "email": "hermitte at free.fr",
        "homepage": "http://hermitte.free.fr/vim"
      },
      "release_notes": "Triggers.vim has been fixed and should not cause troubles anymore."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1004",
      "filename": "lh-cpp.tar.gz",
      "script_version": "1.0",
      "date": "2002-07-09",
      "vim_version": "6.0",
      "author": {
        "user_id": "102",
        "user_name": "hermitte",
        "first_name": "Luc",
        "last_name": "Hermitte",
        "email": "hermitte at free.fr",
        "homepage": "http://hermitte.free.fr/vim"
      },
      "release_notes": "Initial upload"
    }
  ]
}
