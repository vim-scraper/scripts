{
  "script_id": "3382",
  "display_name": "textobj-rubyblock",
  "summary": "A custom text object for selecting ruby blocks.",
  "name": "textobj-rubyblock",
  "script_type": "utility",
  "description": "A custom text object for selecting ruby blocks.\n\nDepends on vimscript #2100, which provides a framework for creating custom\ntext objects.\n\nAlso requires that matchit.vim vimscript #39 is enabled.\n\n# Usage #\n\nWhen textobj-rubyblock is installed you will gain two new text objects, which\nare triggered by `ar` and `ir` respectively. These follow Vim convention, so\nthat `ar` selects _all_ of a ruby block, and `ir` selects the _inner_ portion\nof a rubyblock.\n\nIn ruby, a block is always closed with the `end` keyword. Ruby blocks may be\nopened using one of several keywords, including `module`, `class`, `def` `if`\nand `do`. This example demonstrates a few of these:\n\n    module Foo\n      class Bar\n        def Baz\n          [1,2,3].each do |i|\n            i + 1\n          end\n        end\n      end\n    end\n\nSuppose your cursor was positioned on the word `def`. Typing `var` would\nenable visual mode selecting _all_ of the method definition. Your selection\nwould comprise the following lines (also, see screenshot:\nhttp://vimcasts.org/images/blog/rubyblock-all.png):\n\n    def Baz\n      [1,2,3].each do |i|\n        i + 1\n      end\n    end\n\nWhereas if you typed `vir`, you would select everything _inside_ of the method\ndefinition, which looks like this (also, see screenshot:\nhttp://vimcasts.org/images/blog/rubyblock-inner.png):\n\n    [1,2,3].each do |i|\n      i + 1\n    end\n\nNote that the `ar` and `ir` text objects always enable _visual line_ mode,\neven if you were in visual character or block mode before you triggered the\nrubyblock text object.\n\nNote too that the `ar` and `ir` text objects always position your cursor on\nthe `end` keyword. If you want to move to the top of the selection, you can do\nso with the `o` key.\n\n# Limitations #\n\nSome text objects in Vim respond to a count. For example, the `a{` text object\nwill select _all_ of the current `{}` delimited block, but if you prefix it\nwith the number 2 (e.g. `v2i{`) then it will select all of the block that\ncontains the current block. The rubyblock text object does not respond in this\nway if you prefix a count. This is due to a limitation in vimscript #2100.\n\nHowever, you can achieve a similar effect by repeating the rubyblock\ntext-object manually. So if you press `var` to select the current ruby block,\nyou can expand your selection outwards by repeating `ar`, or contract your\nselection inwards by repeating `ir`.\n",
  "install_details": "First of all, ensure that you have installed vimscript #2100, without which\nthis plugin will not work.\n\nThen, ensure that you have enabled the matchit.vim vimscript #39 plugin. This\ncan be achieved by running (or placing this in your vimrc file):\n\n    :runtime macros/matchit.vim\n\nFinally, you need to ensure that Vim is not running in vi-compatiable mode, and\nthat filetype plugins are enabled. Placing these lines in your vimrc file will\nset up this configuration for you:\n\n    set nocompatible\n    if has(\"autocmd\")\n      filetype indent plugin on\n    endif\n\nThis plugin is distributed as a vimball, so to install it you just need to\nopen the file with Vim and run the command:\n\n    :source %\n\nIf you prefer to manage your plugins using pathogen (vimscript #2332), then\nyou might prefer to checkout the latest version directly from github:\n\n* https://github.com/nelstrom/vim-textobj-rubyblock\n* https://github.com/kana/vim-textobj-user\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14652",
      "filename": "textobj-rubyblock.vba",
      "script_version": "0.0.2",
      "date": "2010-12-29",
      "vim_version": "7.2",
      "author": {
        "user_id": "24538",
        "user_name": "nelstrom",
        "first_name": "Drew",
        "last_name": "Neil",
        "email": "drew@vimcasts.org",
        "homepage": "http://vimcasts.org"
      },
      "release_notes": "Do not be fooled by postfix conditionals."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14630",
      "filename": "textobj-rubyblock.vba",
      "script_version": "0.0.1",
      "date": "2010-12-27",
      "vim_version": "7.2",
      "author": {
        "user_id": "24538",
        "user_name": "nelstrom",
        "first_name": "Drew",
        "last_name": "Neil",
        "email": "drew@vimcasts.org",
        "homepage": "http://vimcasts.org"
      },
      "release_notes": "Initial upload"
    }
  ]
}
