{
  "script_id": "1915",
  "display_name": "tbibtools",
  "summary": "bibtex-related utilities (sort, reformat, list contents ...)",
  "name": "tbibtools",
  "script_type": "utility",
  "description": "tbibtools provide a simple regexp-based bibtex parser. Please be aware \nthat this script makes a few assumptions on how a bib file should look \nlike and that it may fail on files formatted in unusual ways. Failure \nmay lead to loss of bib entries and malformed or incomplete output.  \nComments and other text will be stripped when reformatting entries. Any \nfeature of bibtex I don't know and/or don't use myself is most likely \nnot supported by this script/class.\n\nPlease take care when using this script. Make backups and check the \noutput, especially when using the -f command-line option. Don't blame me \nif you lose information or end up with corrupted bib files.\n\n\nFeatures:\n    - sort bib files\n    - reformat bib files\n    - list keys in a bib file\n    - show bib entries matching a regular expression\n\n\nFrom the commands line:\n\nThe ruby directory contains a file tbibtools.rb that can be used as a \nstand-alone script from the command line. For command-line use, only the \nfile tbibtools.rb and a ruby interpreter is needed.\n\n    tbibtools [OPTIONS] < IN > OUT\n\n\nFor vim users:\n\nThe file plugin/tbibtools.vim provides the commands\n\n    :'<,'>TBibTools [OPTIONS]\n        Filter the selected text or the whole buffer through \n        tbibtools.rb. The command line options are the same as for the \n        script.\n\n    :'<,'>TBibList [OPTIONS]\n        List keys in a bibtex file (mostly the same as TBibTools --ls \n        but lets you select an entry and jump to its position in the \n        bibtex file).\n\n\nOptions:\n\n    -i          ... case insensitive\n    -e REGEXP   ... display entries matching the regexp\n    -f FORMATS  ... re-format (order matters, comma-separated list): \n                    align, bracket, check, downcaseType, gsub, indent, \n                    list, nil, nnIsYear, ls, tml, stripEmpty, \n                    stripRedundantTitel, unwrap, upcaseType, wrap\n    --ls        ... synonym for: -f list,stripPrelude (\"list\" implies \n    \"unwrap\")\n    -l FORMAT   ... format string for list\n    -q FIELD=RX ... show entries for which field matches the regexp\n    -P          ... strip the prelude: same as -f stripPrelude but helps \n    to maintain the original formatting\n    -s FIELD    ... sort (default: sort by key; key = _id, type = _type)\n    -S          ... replace/expand strings\n    --strip FIELDS ... ignore/strip fields\n    -u          ... unsorted\n\n\nFormats:\n\nFormats can be easily plugged in by defining a method (see \nTBibTools#format). As the formatters process the entry one after the \nother, the order given on the command line matters.\n\nPlease scrutinize the output carefully. The use of an incomplete or simply \nthe wrong set of formatters can easily result in a corrupted bib file \nthat bibtex cannot read.\n\n    align\n         Align the = sign.\n\n    bracket\n         Enclose non-numeric values in curly braces.\n\n    gsub=FROM1:TO2:FROM2:TO2\n         Replace text in the value.\n\n    indent,\n         indent=N (default=4) Indent the entry's key-value pairs.\n\n    nil\n         Don't print any output.\n\n    stripRedundantTitel\n         If an entry has a title and a booktitle field with the\n         same value, only the booktitle field will be propagated.\n\n    stripEmpty\n         Drop fields with empty values.\n\n    unwrap\n         Put wrapped text into a single line.\n\n    wrap\n         Try to cheaply wrap the value.\n\n    check\n         Print a warning on invalid entries\n\n    nnIsYear\n         Try to correctly sort two-digit numbers in the key, i.e. sort \n         example99 before example00.\n\n    downcaseType\n         Downcase the bibtex type.\n\n    upcaseType\n         Put the bibtex type in upper case letters.\n\n    list\n         List keys only.\n\n    stripPrelude\n         Drop any prelude (useful in conjunction with some other \n         commands). It is supposed the bibtex file is made up of a \n         prelude containing @string definitions and a series of bibtex \n         entries.\n\n    tml\n        A shortcut for: \n        nnIsYear,downcaseType,stripRedundantTitle,stripEmpty,bracket,align,unwrap,indent \n        (see also TBibTools#format_option_tml)\n\n\nExamples:\n\nReformat the bib file\n\n  tbibtools -f tml < monos.bib > monos_sorted.bib\n\n  tbibtools -f gsub=Ã¤:\\\"a:Ã¶:\\\"o:Ã¼:\\\"u < monos.bib > monos_sorted.bib\n\nList the contents (see also TBibTools#format_option_ls)\n\n  tbibtools --ls < monos.bib\n  tbibtools --ls -l \"#{_lineno}: #{author|editor|institution}: #{title|booktitle}\" < monos.bib\n\nExtract a few entries à la grep (kind of):\n\n  tbibtools -P -e Hugo < monos.bib\n  tbibtools -P -q author=Adorno -q keywords=Adorno < monos.bib\n  tbibtools -P -q author=\"Husserl|Merleau-Ponty\" < monos.bib\n\n",
  "rating_total": "1",
  "rating_votes": "1",
  "downloads": "1004",
  "install_details": "Install as vim plugin:\nExtract the archive to ~/.vim or ~/vimfiles (Windows).\n\nA vim with compiled-in ruby support is required.\n\nThe TBibList command requires tlib (vimscript #1863).\n\n\nInstall as script:\nThe ruby directory contains a rudimentary makefile:\n    make -f Makefile.tbibtools install\n\n\nAlso available via git\nhttp://github.com/tomtom/tbibtools_vim",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7364",
      "filename": "tbibtools.zip",
      "script_version": "0.5",
      "date": "2007-07-17",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- VIM: Require tlib 0.9\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7259",
      "filename": "tbibtools.zip",
      "script_version": "0.4",
      "date": "2007-06-18",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- sortCrossref: Put cross-referenced entries to the back.\n- New format: (un)selectCrossref: View only entries that are (not) cross-referenced\n- Improved TBibList (include keywords in list; if g:tbibUseCache is set, the listing will be cached between editing sessions)\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7220",
      "filename": "tbibtools.zip",
      "script_version": "0.3",
      "date": "2007-06-08",
      "vim_version": "7.0",
      "author": {
        "user_id": "4037",
        "user_name": "t.link",
        "first_name": "Tom",
        "last_name": "Link",
        "email": "micathom at gmail.com",
        "homepage": ""
      },
      "release_notes": "- Syntax of the query command has changed: query FIELD1 => RX1, FIELD2 => RX2 ...\n- Merge duplicate entries\n- Merge certain conflicting fields\n- FIX: Problem with --ls\n"
    }
  ]
}
