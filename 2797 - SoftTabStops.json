{
  "script_id": "2797",
  "display_name": "SoftTabStops",
  "summary": "Set typewriter like tabstops.",
  "name": "SoftTabStops",
  "script_type": "utility",
  "description": "Description:\n  This plugin provides the ability to enter tabular data quickly in two\n  different ways:\n      - Set explicit stops at the columns.\n      - Enter a sample row and have the stops inferred from it.\n  The plugin provides a visual editor such that you can set explicit stops\n  with ease. The stops can be toggled using a mouse or keyboard. You can\n  toggle the plugin functionality on and off at the buffer or global\n  level.\n\nUsage:\n  - Use :STTgl to toggle using tabstops. This maps/unmaps <Tab> and <BS>.\n    When buffer-local tabs are enabled (the default), the maps are made\n    local to the current buffer, otherwise, the maps are global.\n  - Use :STEdit[!] to bring up an editor for setting explicit tab stops (or\n    to just view them). You would see three lines, two with numbers to guide\n    the column number and another to show the current tab stops. To toggle\n    stop at a any column, move cursor to the column and push spacebar or\n    directly click left mouse button. To save changes at the end, use :wq\n    command (or just :w, to leave the window open). You can press \"q\" to\n    quit when no changes have been made. When buffer-local tabs have been\n    enabled (the default), use bang to edit the global tabstops.\n  - Use STReset to reset the tabstops to one every 8 columns (or whatever\n    'tabstop' is set to), or STClear to clear all of them.\n  - By default the stops are lcoal to a buffer\n    (g:softtabstops_local_to_buffer setting is set). This helps to localize\n    the stops and maps to the current buffer of interest, but as a result\n    are not shared across buffers. The tabstops will be stored as a list of\n    columns in the buffer local variable called \"b:softtabstops\". To have\n    same set of stops for all buffers reset this setting and have the stops\n    stored in the global variable \"g:softtabstops\".\n  - You can manipulate softtabstops in any of these ways:\n      - directly, by using the Vim's |List| functions. You can even clone\n        (using |copy()| function) the global \"g:softtabstops\" to the buffer\n        local variable \"b:softtabstops\"\n      - using plugin commands :STAddTab, :STRemoveTab, :STReset and :STClear\n      - using visual editor started by :STEdit command\n  - When softtabstops is toggled on and off, the plugin doesn't try to\n    restore any prior maps for <Tab> and <BS>, this is because Vim doesn't\n    provide any means to capture a map completely. If the experimental\n    g:softtabstops_restore_original_map option is turned on the plugin\n    attempts to capture the maps by parsing the :map command output and the\n    maparg() result, but this method is very limited, and will not work for\n    many scenarios. If you have have your own insert mode mappings for <Tab>\n    and <BS> or use a plugin that defines them, make sure this plugin\n    doesn't conflict with them.\n\nSettings:\n  - g:softtabstops_local_to_buffer (default: 1). Set to 0 to make tabstops\n    shared globally by all buffers. This also makes :STTgl create global\n    maps.\n  - g:softtabstops_repeat_last_stop (default: 0). When set to 1, the plugin\n    repeats the entire sequence of tabstops when it needs to extend them.\n  - g:softtabstops_align_line_with_editor (default: 1): Set to 0 to avoid\n    repositioning the current line when the tab editor is opened.\n  - g:softtabstops_infer_tabstops (default: 1). Set to 0, if you don't want\n    the plugin to infer the tabstops based on the previous lines, when no\n    explicit tabstops are set (or existing ones are cleared using :STClear)\n  - g:softtabstops_infer_imm_nonblank_only (default: 1). Set to 0, if you\n    want the tabstops to be inferred from the previous line, only when there\n    are no blank lines between them.\n  - g:softtabstops_editor_guide_start_num (default: 0). Controls the column\n    number sequence in the tab editor. Should be between 0 to 9.\n  - g:softtabstops_editor_guide_end_num (default: 9). Controls the column\n    number sequence in the tab editor. Should be between 0 to 9 and greater\n    than g:softtabstops_editor_guide_start_num.\n  - g:softtabstops_restore_original_map (default: 0). Set to 1 to enable the\n    experimental feature to save and restore maps while toggling on and off.\n\nLimitations:\n  - Can only insert all spaces, not a mix of tabs and spaces.\n",
  "rating_total": "0",
  "rating_votes": "0",
  "downloads": "118",
  "install_details": "Unzip the file into your runtime. Also make sure the latest version of genutils (vimscript #197) is installed.",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11467",
      "filename": "softtabstops-1.0.zip",
      "script_version": "1.0",
      "date": "2009-10-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "292",
        "user_name": "haridsv",
        "first_name": "Hari Krishna",
        "last_name": "Dara",
        "email": "hari.vim at gmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
