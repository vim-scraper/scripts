{
  "script_id": "3241",
  "display_name": "bufsurf",
  "summary": "Plugin for navigating buffers webbrowser style.",
  "name": "bufsurf",
  "script_type": "utility",
  "description": "When editing multiple files oftentimes it would be nice to be able to go back\nand forth between the last edited files, just like a web browser allows the\nuser to navigate web pages forward and backward in history. The standard\n:bn(ext) and :bp(revious) Vim commands allow to switch between next and\nprevious buffers respectively, but they do no take the history of the last\nused files into account. Instead, they use the order in which the files were\nopened, which can cause confusion in case the user expects to navigate forward\nand backwards in history.  For example, in case the user opened the files A,\nB, and C in the order:\n\nA, B, C\n\nand the navigation history would be\n\nA, B, C, B\n\nthen :bp(revious) in the last buffer (B) would open up buffer A, where C is\npreferable. This buffer supplies the user with the commands :BufSurfForward\nand :BufSurfBack to navigate buffers forwards and backwards according to the\nnavigation history.\n\nThe latest version of this plugin is available at:\n\n  http://github.com/ton/vim-bufsurf\n\nBugs can be reported there as well.\n\nbufsurf allows the user to navigate between buffers in a window based on the\nnavigation history. The navigation history is maintained per window / tab.\nYou can navigate backwards in history by issuing the command:\n\n  :BufSurfBack\n\nSimilarly, to navigate forward in history, issue the command:\n\n  :BufSurfForward\n\nNo default keymappings are provided, but can easily be defined by the user.\nFor example, to map Control+I to :BufSurfBack, and Control+O to\n:BufSurfForward, include the following lines in your Vim configuration:\n\n  nmap <silent> <C-i> :BufSurfBack<CR>\n  nmap <silent> <C-o> :BufSurfForward<CR>",
  "rating_total": "8",
  "rating_votes": "2",
  "downloads": "25",
  "install_details": "The plug-in requires Vim compiled with Ruby support. You can check for Ruby\nsupport by launching Vim with the --version switch:\n\n  vim --version\n\nIf \"+ruby\" appears in the version information then your version of Vim has\nRuby support.\n\nAnother way to check is to simply try using the :ruby command from within Vim\nitself:\n\n  :ruby 1\n\nIf your Vim lacks support you'll see an error message like this:\n\n  E319: Sorry, the command is not available in this version",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13847",
      "filename": "bufsurf.tar.gz",
      "script_version": "0.1",
      "date": "2010-09-17",
      "vim_version": "7.2",
      "author": {
        "user_id": "5382",
        "user_name": "blukske",
        "first_name": "Ton",
        "last_name": "van den Heuvel",
        "email": "blukske at hotmail.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
