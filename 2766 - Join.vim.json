{
  "script_id": "2766",
  "display_name": "Join.vim",
  "summary": "Improved Algorithm for joining lines in large files",
  "name": "Join.vim",
  "script_type": "utility",
  "description": "ATTENTION: Vim 7.3 contains a bugfix, so this plugin isn't needed anymore!\n\nThis plugin tries to implement a different method for joining lines. This is,\nbecause the :join command from within vim suffers from a serious performance\nissue, if you are trying to join many lines (>1000).\n\nThis has been discussed on the vim development mailing list (see\nhttp://thread.gmane.org/gmane.editors.vim.devel/22065) as well as on the vim\nuser mailing list (see http://thread.gmane.org/gmane.editors.vim/80304).\n\nThere has also been a patch proposed, to improve the algorithm used by :join.\nThis patch is available at http://repo.or.cz/w/vim_extended.git, but this\nmeans, you'll have to build and patch your vim manually (you can't use it with\na prebuilt vim).\n\nUntil this patch is accepted and incorporated into mainline vim, this plugin\ntries to improve the joining algorithm by the method mentioned in the user\nmailinglist above. It basically works by breaking up the join algorithm into\nsmaller pieces and joining the smaller pieces together. This may have an\nimpact on memory usage, though.\n\n                                                              *Join-benchmark*\nFor reference I include some timings, joining many lines:\n\n      Lines joined      :%join      |      :%Join\n        25.000           3,305s     |      0,240s\n        50.000          13,667s     |      0,336s\n       100.000          64,140s     |      0,588s\n       200.000         331,410s     |      1,431s\n     1.000.000            -[1]      |      7,419s\n\n[1] benchmarking was aborted after 53 Minutes (after which only about 480.000\nlines have been joined).\n\nPlease also note, that using a substitute command does not prove to be faster.\nIt also suffers from the performance impact.\n\nAlso note, that really the best way to remove '\\n' on a file with millions\nof lines is using tr:\n\n~$ tr -d '\\n' <large_file >output_file\n\n2. Usage                                                          *Join-usage*\n\n:[range]J[oin][!]\n                        Join [range] lines.  Same as \"J\", except with [!]\n                        the join does not insert or delete any spaces.\n                        The default behavior is to join the current line\n                        with the line below it.\n\n:[range]J[oin][!] {count}\n                        Join {count} lines, starting with [range] (default:\n                        current line |cmdline-ranges|).  Same as \"J\", except\n                        with [!] the join does not insert or delete any\n                        spaces.\n\n\nYou should be able to use :Join as drop in replacement for :join. It behaves\nexactly like :join and understands it's syntax, with the exception of 1 point:\n\n1) :Join does not accept the use of [flags] as |:join| does.\n\nIf you want the J command to call :Join, you can use something like:\n:nmap J :Join<CR>\nto have J call :Join in normal mode and\n:vmap J :Join<CR>\n\n                                                            *Join-differences*\n3. Differences\n\nThis plugin has been made to make :Join and :join behave almost identically.\nIf there are further differences than those described at |Join-usage|, I am\ninterested at any bug describing exactly what went wrong, so I can fix this.\nPlease send any bug report to the mail address mentioned at the top of this\npage.\n\n",
  "rating_total": "12",
  "rating_votes": "3",
  "downloads": "237",
  "install_details": "simply source the Join.vba file:\nvim Join.vba\n:so %",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12870",
      "filename": "Join.vba",
      "script_version": "2.4",
      "date": "2010-04-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "- Plugin is now autoloadable\n- public repository at http://github.com/chrisbra/Join"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11462",
      "filename": "Join.vba",
      "script_version": "2.2",
      "date": "2009-10-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "fixed Copyright, which included wrong Plugin name"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11303",
      "filename": "Join.vba",
      "script_version": "2.1",
      "date": "2009-09-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "fixed Documenation\nenabled GetLatestVimScripts"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11297",
      "filename": "Join.vba",
      "script_version": "2",
      "date": "2009-08-31",
      "vim_version": "7.0",
      "author": {
        "user_id": "17599",
        "user_name": "chrisbra",
        "first_name": "Christian",
        "last_name": "Brabandt",
        "email": "cb at 256bit.org",
        "homepage": "http://blog.256bit.org"
      },
      "release_notes": "Initial upload"
    }
  ]
}
