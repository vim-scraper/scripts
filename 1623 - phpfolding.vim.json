{
  "script_id": "1623",
  "display_name": "phpfolding.vim",
  "summary": "Automatic folding of PHP functions, classes,.. (also folds related PhpDoc)",
  "name": "phpfolding.vim",
  "script_type": "utility",
  "description": "This script can fold PHP functions and/or classes, properties with their PhpDoc, \nwithout manually adding marker style folds ({{{ and }}}). It will generate the following \nfolds when executed:\n\n<?php\n/**\n* This is Foo...\n* @author Foo\n*/\nclass Foo {\n+-- 11 lines: function fooFunction($bar) ** -----------------------------------------\n+--   8 lines: function fooFunction2($bar) ** ----------------------------------------\n+-- 24 lines: function fooFunction3($bar) -------------------------------------------\n}\n\n+--112 lines: class Foo2 ** -------------------------------------------------------------\n?>\n\nBased on e.g. functions declared like this:\n\n<?php\n/**\n * This is fooFunction...\n * \n * @param mixed $bar \n * @access public\n * @return void\n */\nfunction fooFunction($bar) {\n    [...]\n}\n?>\n\nSCREENSHOT\nYou can view a screenshot here: http://www.fighterz.net/trig/folding.gif\n\nFEATURES\n- It remembers fold settings. If you add functions and execute the script again, \n  your opened folds will not be closed.\n- It will not be confused by brackets in comment blocks or string literals.\n- The folding of class properties with their PhpDoc comments.\n- The folding of all class properties into one fold.\n- Folding the original marker style folds too.\n- An \"**\" postfixing the fold indicates PhpDoc is inside (configurable).\n- An \"**#@+\" postfixing the fold indicates PhpDocBlock is inside (configurable).\n- Empty lines postfixing the folds can be configured to be included in the fold.\n- Nested folds are supported (functions inside functions, etc.)\n\nFUTURE\n- Better 'configurability' as opposed to editting the PHPCustomFolds() function and\n  some \"Script configuration\" global variables.\n\nNOTE\nIf anyone has emailed me and I have not replied, it's probably lost. I just found out \nhotmail recognizes alot as junk. I now turned off the junk filter..\n\nNOTE2:\nI'm currently more active again with this project, so if you have any contributions to \nthis project, please let me know.\n\nCOMPATIBILITY\nThis script is tested successfully with Vim version >= 6.3 on windows and linux\n(With 6.0 it works *sometimes*, I don't recommend using it in that version)",
  "rating_total": "79",
  "rating_votes": "30",
  "downloads": "2660",
  "install_details": "INSTALL\n 1. Put phpfolding.vim in your plugin directory (~/.vim/plugin)\n 2. You might want to add the following keyboard mappings to your .vimrc:\n\n      map <F5> <Esc>:EnableFastPHPFolds<Cr>\n      map <F6> <Esc>:EnablePHPFolds<Cr>\n      map <F7> <Esc>:DisablePHPFolds<Cr>\n\n 3. You might want to add the following lines to php.vim in your after/ftplugin\n    directory (~/.vim/after/ftplugin/php.vim), this will be executed after \n    opening a .php file:\n\n      \" Don't use the PHP syntax folding\n      setlocal foldmethod=manual\n      \" Turn on PHP fast folds\n      EnableFastPHPFolds\n\n It might be necessary that you load the plugin from your .vimrc, i.e.:\n   let php_folding=0 \n     (if you can't use the after directory in step 3)\n   source ~/path/to/phpfolding.vim\n     (if you're not using the default plugin directory)\n\nKNOWN ISSUES\n1. C++ style commented brackets can still interfere with the bracket matching.\nFor example comments like are not recognized as comments:  // old: for (...) { \nWhereas C-style comments are, e.g.:  /* old: for (...) { */\n2. The following won't be matched with the Regex in FindFoldStart():\nfunction (...,\n    ....,\n    ....,\n) {\nThough Steve McConnell (writer of Code Complete) would ask why you'd need \nmore then two lines for function parameters :)",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12114",
      "filename": "phpfolding.vim",
      "script_version": "1.7",
      "date": "2010-01-16",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "The following much appreciated contributions are from LiTWoL (Oleg Terenchuk):\n1. Check if filetype is PHP before automatically creating folds \n2. Call EnableFastPHPFolds after reading file into the buffer \n3. Avoid reload check \n4. Added configuration variable to disable autofolding."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6102",
      "filename": "phpfolding.vim",
      "script_version": "1.6",
      "date": "2006-08-26",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "1. Added nested fold support (recursion).\n2. Improved install instructions. Thanks to Peter Hodge for some useful information.\n3. Added phpdoc \"docblock\" support (/**#@+ and #@- templates).\n4. Minor adjustments in FindPureBlockStart and FindPatternStart."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6075",
      "filename": "phpfolding.vim",
      "script_version": "1.5",
      "date": "2006-08-16",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "1. Previously opened folds are now remembered again. I accidentally broke this in another version.\n2. The script now can fold abstract classes too. Thanks to Stefan Walk for adjusting the regex.\n3. Changed behaviour and fixed a bug in searching for trailing empty lines.\n4. Correct folding of nested folds will be supported in the *next* version.\n5. Changed some default settings."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6049",
      "filename": "phpfolding.vim",
      "script_version": "1.4.1",
      "date": "2006-08-08",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "1. Removed windows carriage returns (^M) throughout the file."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6045",
      "filename": "phpfolding.vim",
      "script_version": "1.4",
      "date": "2006-08-06",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "1. The sequence of creating the custom folds no longer matters.\n2. Added some more custom folds (includes, defines, .. with phpdoc can now be folded too).\n3. It can search farther for PhpDoc comments.\n4. It can be configured to fold more empty 'trailing' lines.\n5. Adjusted PHPFoldText a bit. \n6. Fixed a minor bug in the class fold regex (PEAR's QuickForm.php works now too)."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6011",
      "filename": "phpfolding.vim",
      "script_version": "1.3",
      "date": "2006-07-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "1. Extensive/slow parsing of brackets is now optional.\n2. Class variables \"var $foo = '';\" can be folded with their PhpDoc.\n3. Marker style folds ({{{, }}}) can be folded now too."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6009",
      "filename": "phpfolding.vim",
      "script_version": "1.2",
      "date": "2006-07-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "1. Previously opened folds are restored when executing the script multiple times (thanks to Marijn Koesen for that idea)\n2. The cursor position is now remembered and restored in Linux\n3. Cleaned up foldtext a bit"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6006",
      "filename": "phpfolding.vim",
      "script_version": "1.1",
      "date": "2006-07-29",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "1. PHP API comments no longer appear in the fold names.\n2. The following function header is now recognized:\n\nfunction (...,\n    ....)\n{"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6005",
      "filename": "phpfolding.vim",
      "script_version": "1.0",
      "date": "2006-07-29",
      "vim_version": "6.0",
      "author": {
        "user_id": "10556",
        "user_name": "Ray Burgemeestre",
        "first_name": "Ray",
        "last_name": "Burgemeestre",
        "email": "trigen_ at hotmail.com",
        "homepage": "http://trig.ath.cx"
      },
      "release_notes": "Initial upload"
    }
  ]
}
