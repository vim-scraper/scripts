{
  "script_id": "1905",
  "display_name": "camelcasemotion",
  "summary": "Motion through CamelCaseWords and underscore_notation.",
  "name": "camelcasemotion",
  "script_type": "utility",
  "description": "DESCRIPTION\nVim provides many built-in motions, e.g. to move to the next word, or end of\nthe current word. Most programming languages use either CamelCase\n(\"anIdentifier\") or underscore_notation (\"an_identifier\") naming conventions\nfor identifiers. The best way to navigate inside those identifiers using Vim\nbuilt-in motions is the [count]f{char} motion, i.e. f{uppercase-char} or f_,\nrespectively. But we can make this easier: \n\nThis script defines motions ',w', ',b' and ',e' (similar to 'w', 'b', 'e'),\nwhich do not move word-wise (forward/backward), but Camel-wise; i.e. to word\nboundaries and uppercase letters. The motions also work on underscore notation,\nwhere words are delimited by underscore ('_') characters. From here on, both\nCamelCase and underscore_notation entities are referred to as \"words\" (in double\nquotes). Just like with the regular motions, a [count] can be prepended to move\nover multiple \"words\" at once. Outside of \"words\" (e.g. in non-keyword\ncharacters like // or ;), the new motions move just like the regular motions. \n\nVim provides a built-in 'iw' text object called 'inner word', which works in\noperator-pending and visual mode. Analog to that, this script defines inner\n\"word\" motions 'i,w', 'i,b' and 'i,e', which select the \"word\" (or multiple\n\"words\" if a [count] is given) where the cursor is located. \n\nUSAGE\nUse the new motions',w',',b' and ',e' in normal mode, operator-pending mode (cp.\n:help operator), and visual mode. For example, type 'bc,w' to change 'Camel' in\n'CamelCase' to something else. \n\nEXAMPLE: motions\nGiven the following CamelCase identifiers in a source code fragment:\n    set Script31337PathAndNameWithoutExtension11=%~dpn0\n    set Script31337PathANDNameWITHOUTExtension11=%~dpn0\nand the corresponding identifiers in underscore_notation:\n    set script_31337_path_and_name_without_extension_11=%~dpn0\n    set SCRIPT_31337_PATH_AND_NAME_WITHOUT_EXTENSION_11=%~dpn0\n\n,w moves to ([x] is cursor position): [s]et, [s]cript, [3]1337, [p]ath,\n    [a]nd, [n]ame, [w]ithout, [e]xtension, [1]1, [d]pn0, dpn[0], [s]et\n,b moves to: [d]pn0, [1]1, [e]xtension, [w]ithout, ...\n,e moves to: se[t], scrip[t], 3133[7], pat[h], an[d], nam[e], withou[t],\n    extensio[n], 1[1], dpn[0]\n\nEXAMPLE: inner motions\nGiven the following identifier, with the cursor positioned at [x]:\n    script_31337_path_and_na[m]e_without_extension_11\n\nv3i,w selects script_31337_path_and_[name_without_extension_]11\nv3i,b selects script_31337_[path_and_name]_without_extension_11\nv3i,e selects script_31337_path_and_[name_without_extension]_11\nInstead of visual mode, you can also use c3i,w to change, d3i,w to delete,\ngU3i,w to upper-case, and so on. \n\nSource: Based on http://vim.wikia.com/wiki/Moving_through_camel_case_words by\nAnthony Van Ham.",
  "install_details": "INSTALLATION\nThis script is packaged as a vimball. If you have the \"gunzip\" decompressor\nin your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress\nthe archive first, e.g. using WinZip. Inside Vim, install by sourcing the\nvimball or via the :UseVimball command. \n    vim camelcasemotion.vba.gz\n    :so %\nTo uninstall, use the :RmVimball command. \n\nDEPENDENCIES\n- Requires Vim 7.0 or higher. \n\nCONFIGURATION\nIf you want to use different mappings, map your keys to the\n<Plug>CamelCaseMotion_? mapping targets _before_ sourcing this script (e.g. in\nyour .vimrc).  \n\nEXAMPLE: Replace the default 'w', 'b' and 'e' mappings instead of defining\nadditional mappings',w', ',b' and ',e':\n    map <silent> w <Plug>CamelCaseMotion_w\n    map <silent> b <Plug>CamelCaseMotion_b\n    map <silent> e <Plug>CamelCaseMotion_e\n    sunmap w\n    sunmap b\n    sunmap e\n\nEXAMPLE: Replace default 'iw' text-object and define 'ib' and 'ie' motions:\n    omap <silent> iw <Plug>CamelCaseMotion_iw\n    xmap <silent> iw <Plug>CamelCaseMotion_iw\n    omap <silent> ib <Plug>CamelCaseMotion_ib\n    xmap <silent> ib <Plug>CamelCaseMotion_ib\n    omap <silent> ie <Plug>CamelCaseMotion_ie\n    xmap <silent> ie <Plug>CamelCaseMotion_ie",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10530",
      "filename": "camelcasemotion.vba.gz",
      "script_version": "1.50",
      "date": "2009-05-05",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- Do not create mappings for select mode; according to|Select-mode|, printable\n  character commands should delete the selection and insert the typed\n  characters. Now using :xmap to only target visual mode. \n- Moved functions from plugin to separate autoload script. \n- Split off documentation into separate help file. Now packaging as VimBall. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8708",
      "filename": "camelcasemotion.vim",
      "script_version": "1.40.017",
      "date": "2008-05-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BF: Now using :normal! to be independent from any user mappings. Thanks to Neil Walker for the patch."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8612",
      "filename": "camelcasemotion.vim",
      "script_version": "1.40.016",
      "date": "2008-04-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BF: Wrong forward motion stop at the second digit if a word starts with multiple numbers (e.g. 1234.56789). Thanks to Wasim Ahmed for reporting this. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8599",
      "filename": "camelcasemotion.vim",
      "script_version": "1.40.015",
      "date": "2008-04-24",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: Added inner \"word\" text objects 'i,w' etc. that work analoguous to the built-in 'iw' text object. Thanks to David Kotchan for this suggestion. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8587",
      "filename": "camelcasemotion.vim",
      "script_version": "1.30.014",
      "date": "2008-04-20",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "The motions now also stop at non-keyword boundaries, just like the regular motions. This has no effect inside a CamelCaseWord or inside underscore_notation, but it makes the motions behave like the regular motions (which is important if you replace the default motions). Thanks to Mun Johl for reporting this. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=8536",
      "filename": "camelcasemotion.vim",
      "script_version": "1.30.013",
      "date": "2008-04-09",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Allowing users to use mappings different than ,w ,b ,e by defining <Plug>CamelCaseMotion_? target mappings. This can even be used to replace the default 'w', 'b' and 'e' mappings, as suggested by Mun Johl. \nNow requires VIM 7.0 or higher. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7210",
      "filename": "camelcasemotion.vim",
      "script_version": "1.20.012",
      "date": "2007-06-06",
      "vim_version": "6.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BF: Corrected motions through mixed CamelCase_and_UnderScore words by re-ordering and narrowing the search patterns.  "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7189",
      "filename": "camelcasemotion.vim",
      "script_version": "1.20.011",
      "date": "2007-06-02",
      "vim_version": "6.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Thanks again to Joseph Barker for discussing the complicated visual mode mapping on the vim-dev mailing list and coming up with a great simplification. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7177",
      "filename": "camelcasemotion.vim",
      "script_version": "1.20.010",
      "date": "2007-05-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: The visual mode motions now also (mostly) work with the (default) setting 'set selection=inclusive' / 'behave xterm', instead of selecting one character too much. So far, you had to 'set selection=exclusive' / 'behave mswin'. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7176",
      "filename": "camelcasemotion.vim",
      "script_version": "1.10.009",
      "date": "2007-05-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Incorporated major improvements and simplifications done by Joseph Barker:\nOperator-pending and visual mode motions now accept [count] of more than 9. \nVisual selections can now be extended from either end. \nInstead of misusing the :[range], the special variable v:count1 is used. Custom commands are not needed anymore. \nOperator-pending and visual mode mappings are now generic: There's only a single mapping for ,w that can be repeated, rather than having a separate mapping for 1,w 2,w 3,w ...\nBF: The operator-pending and visual mode ,e mapping doesn't work properly when it reaches the end of line; the final character of the moved-over \"word\" remains. Fixed this problem unless the \"word\" is at the very end of the buffer. \nBF: Degenerate CamelCaseWords that consist of only a single uppercase letter (e.g. \"P\" in \"MapPRoblem\") are skipped by all motions. Thanks to Joseph Barker for reporting this. \nBF: In CamelCaseWords that consist of uppercase letters followed by decimals (e.g. \"MyUPPER123Problem\", the uppercase \"word\" is skipped by all motions. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7152",
      "filename": "camelcasemotion.vim",
      "script_version": "1.00.007",
      "date": "2007-05-22",
      "vim_version": "6.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
