{
  "script_id": "244",
  "display_name": "imaps.vim",
  "summary": "another template or stub expander",
  "name": "imaps.vim",
  "script_type": "utility",
  "description": "imaps.vim is yet another template expander or Stubs expander like several\nothers out there.\n\nThe expander works by the user pressing '\\&#039 (or whatever the leader\ncharacter is), after a \"keyword\". the keywords are filetype specific. to\ngive an example, suppose you press '\\&#039 after the word 'bfg' in a latex file\n(filetype = tex), then the word 'bfg' will expand to:\n\n\\begin{figure}[h]\n\\centerline{\\psfig{figure=*.eps}}\n\\caption{}\n\\label{fig:}\n\\end{figure}\n\nand the cursor will be placed where '*' is shown. vim remains in insert\nmode so that you can continue typing. if you type '\\&#039 after something which\nis not defined as a keyword for the current filetype, then you will simply\nget a '\\&#039.\n\nthe file already contains several mappings mainly for latex and some for\nhtml. however it should be very easy to extend it to your liking. it should\nbe fairly obvious how to extend it if you look at the file, but here's the\nlittle description:\n\nsuppose you want the keyword 'bit' to expand to \n\n\\begin{itemize}\n\\item * \n\\end{itemize}\n\nand have the cursor be positioned where '*' is shown, add the following\nline to imaps.vim (actually, this line is already there, but it makes for\na good example)\n\nlet s:tex_bit       = \"\\\\begin{itemize}\\<cr>\\\\item ä\\<cr>\\\\end{itemize}\"\n\nexplanation:\n1. the suffix 's:' is to make it script specific.\n2. then 'tex' makes imaps.vim treat 'deg' as a keyword only for latex\n   files.\n3. 'bit' is the keyword itself.\n4. the rhs is what you want to have 'bit' expand to. if you want the cursor\n   not to be positioned anywhere special, then nothing needs to be done.\n   the cursor will be placed at the end. However, if like in this example,\n   you want it to be at a specific place, put a \"ä\" (the a-double-dot\n   character) where you want the cursor to be. (the ä character is obtained\n   by typing control-k-a-colon <C-k> + a + : ). \n\nNOTE: \n\n1. if you want a \"dynamic\" rhs, i.e you want the keyword 'date' to expand\n   to the present date, then you can have the rhs begin with the string\n   \"<C-r>=\". for example, the following line does the date thingie:\n\n   let s:_date = \"\\<c-r>=strftime('%b %d %Y')\\<cr>\"\n    \n   (\":help i_CTRL-R\" for how this works).\n\n2. if you want a keyword to be filetype insensetive (i.e to work across all\n   files) like the date thing above, then like the example above, do not\n   prepend any file type, just use \n\n   let s:_keyword = expansion\n\n   (note the leading underscore after s:)\n\n",
  "rating_total": "63",
  "rating_votes": "21",
  "downloads": "1998",
  "install_details": "drop in your plugin directory or (not recommended) source it from your .vimrc",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=681",
      "filename": "imaps.vim",
      "script_version": "1.0",
      "date": "2002-03-12",
      "vim_version": "6.0",
      "author": {
        "user_id": "247",
        "user_name": "srinath.avadhanula",
        "first_name": "Srinath",
        "last_name": "Avadhanula",
        "email": "srinath at fastmail.fm",
        "homepage": "http://robotics.eecs.berkeley.edu/~srinath/index.html"
      },
      "release_notes": "Initial upload"
    }
  ]
}
