{
  "script_id": "1785",
  "display_name": "javacomplete",
  "summary": "Omni Completion for JAVA",
  "name": "javacomplete",
  "script_type": "ftplugin",
  "description": "This is javacomplete, an omni-completion script of JAVA language for vim 7.\n\nIt includes javacomplete.vim, java_parser.vim, Reflection.java, and \njavacomplete.txt\n\nFeatures:\n- List members of a class, including (static) fields, (static) methods and ctors.\n- List classes or subpackages of a package.\n- Provide parameters information of a method, list all overload methods.\n- Complete an incomplete word.\n- Provide a complete JAVA parser written in Vim script language.\n- Use the JVM to obtain most information.\n- Use the embedded parser to obtain the class information from source files.\n- Tags generated by ctags can also be used.\n- JSP is supported, Builtin objects such as request, session can be recognized.\n  The classes and jar files in the WEB-INF will be appended automatically to classpath.\n\n\nRequirements:\nIt works on all the platforms where\n- Vim version 7.0 and above\n- JDK version 1.1 and above\nexisted \n\nInput context:\nIt recognize nearly all kinds of Primary Expressions (see langspec-3.0)\nexcept for \"Primary.new Indentifier\". Casting conversion is also supported.\nSamples of input contexts are as following:\t('|' indicates cursor)\n    (1). after '.', list members of a class or a package\n    - package.|         subpackages and classes of a package\n    - Type.|                static members of the 'Type' class and \"class\"\n    - var.| or field.|     members of a variable or a field\n    - method().|         members of result of method()\n    - this.|                   members of the current class\n    - ClassName.this.|  members of the qualified class\n    - super.|               members of the super class\n    - array.|                members of an array object\n    - array[i].|             array access, return members of the element of array\n    - \"String\".|            String literal, return members of java.lang.String\n    - int.| or void.|       primitive type or pseudo-type, return \"class\"\n    - int[].|                   array type, return members of a array type and \"class\"\n    - java.lang.String[].|\n    - new int[].|           members of the new array instance\n    - new java.lang.String[i=1][].|\n    - new Type().|      members of the new class instance \n    - Type.class.|      class literal, return members of java.lang.Class\n    - void.class.| or int.class.|\n    - ((Type)var).|         cast var as Type, return members of Type.\n    - (var.method()).|   same with \"var.|\"\n    - (new Class()).|    same with \"new Class().|\"\n\n   (2). after '(', list matching methods with parameters information.\n    - method(|)                 methods matched\n    - var.method(|)           methods matched\n    - new ClassName(|)  constructors matched\n    - this(|)                        constructors of current class matched\n    - super(|)                     constructors of super class matched\n    Any place between '(' and ')' will be supported soon.\n    Help information of javadoc is not supported yet.\n\n   (3). after an incomplete word, list all the matched beginning with it.\n    - var.ab|          subset of members of var beginning with `ab`\n    - ab|                list of all maybes\n\n   (4). import statement\n    - \" import         java.util.|\"\n    - \" import         java.ut|\"\n    - \" import         ja|\"\n    - \" import         java.lang.Character.|\"        e.g. \"Subset\"\n    - \" import static java.lang.Math.|\"        e.g. \"PI, abs\"\n\n   (5). package declaration\n    - \" package         com.|\"\n\n   The above are in simple expression.\n   (6). after compound expression:\n    - PrimaryExpr.var.|\n    - PrimaryExpr.method().|\n    - PrimaryExpr.method(|)\n    - PrimaryExpr.var.ab|\n    e.g.\n    - \"java.lang        . System.in .|\"\n    - \"java.lang.System.getenv().|\"\n    - \"int.class.toString().|\"\n    - \"list.toArray().|\"\n    - \"new ZipFile(path).|\"\n    - \"new ZipFile(path).entries().|\"\n\n   (7). Nested expression:\n    - \"System.out.println( str.| )\"\n    - \"System.out.println(str.charAt(| )\"\n    - \"for (int i = 0; i < str.|; i++)\"\n    - \"for ( Object o : a.getCollect| )\"\n\n\nLimitations:\nThe embedded parser works a bit slower than expected.\n\nTODO:\n-  Improve performance of the embedded parser. Incremental parser.\n-  Add quick information using balloonexpr, ballooneval, balloondelay.\n-  Add javadoc\n-  Give a hint for class name conflict in different packages.\n-  Support parameter information for template\n-  Make it faster and more robust.\n\nScreenshots:\nmembers of a package, http://blog.chinaunix.net/photo/44758_070917101010.jpg\nmembers of a type, http://blog.chinaunix.net/photo/44758_070917101048.jpg\nlocal variable, http://blog.chinaunix.net/photo/44758_070917101134.jpg\nspecial reference super, http://blog.chinaunix.net/photo/44758_070917101158.jpg\nobject of method result,  http://blog.chinaunix.net/photo/44758_070917101236.jpg\n\nFeedBack:\nAny problem, bug or suggest are welcome to send to fangread@yahoo.com.cn\n\nBTW, If you want to get more functions on writting java program besides code completion,\nyou can try VJDE. http://www.vim.org/scripts/script.php?script_id=1213",
  "rating_total": "232",
  "rating_votes": "90",
  "downloads": "6281",
  "install_details": "1. Unzip javacomplete.zip to a directory of 'runtimepath', e.g.\n$HOME/.vim (unix/linux), $VIM/vimfiles (windows).\n\t> unzip javacomplete.zip -d ~/.vim\n\n    To update Vim help tags, run vim and run command: \n\t:helptags $HOME/.vim/doc\n    or\n\t:helptags $VIM/vimfiles/doc\n\nNOTE: javacomplete.vim, java_parser.vim and Reflection.java should be in one\nautoload directory of 'runtimepath'.\njavacomplete.txt should be in one doc directory of 'runtimepath'.\n\n2. Set 'omnifunc' option. e.g.\n        :setlocal omnifunc=javacomplete#Complete\n  Or, use autocmd: \n        :\" Only do this part when compiled with support for autocommands.\n        :if has(\"autocmd\")\n        :  autocmd Filetype java setlocal omnifunc=javacomplete#Complete\n        :endif\n  You can add this command to your .vimrc or _vimrc.\n\n3. Set 'completefunc' option to show parameters information IF YOU LIKE. e.g.\n\t:setlocal completefunc=javacomplete#CompleteParamsInfo\nYou can map as follows for better display:\n\t:inoremap <buffer> <C-X><C-U> <C-X><C-U><C-P>\n\t:inoremap <buffer> <C-S-Space> <C-X><C-U><C-P>\n\n4. Reflection.java will be automatcally compiled and placed to $HOME when you\nuse first time. Assure that Reflection.java is in the same directory with\njavacomplete.vim to be searched in autoload subdirectory of &rtp. \nIf no Reflection.class is generated, check that you have the write permission\nin $HOME directory.\nIf a previous Reflection.java is not compatible with the new version\njavacomplete.vim, please compile Reflection.java manually.\n",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7716",
      "filename": "javacomplete.zip",
      "script_version": "0.77.1",
      "date": "2007-09-25",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "+ Supported showing method parameters information in any place between parenthesises."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7692",
      "filename": "javacomplete.zip",
      "script_version": "0.77",
      "date": "2007-09-18",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "+ Supported new contexts \"jav|\", \"var|\", just after an incomplete word.\n+ Supported accessible static imported members, add new context \"abs(|)\".\n+ Supported accessible inherited members.\n- [Reflection.java]Improved getting paths of all system jar files for different JDKs in different platforms.\n- Rewrote some core functions."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7584",
      "filename": "javacomplete.zip",
      "script_version": "0.76.8",
      "date": "2007-08-30",
      "vim_version": "6.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Improved support of JSP: appending automatically jar or classpath under WEB-INF.\n- Supported local and anonymous classes.\n- Improved searching type or symbol name."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7573",
      "filename": "javacomplete.zip",
      "script_version": "0.76.7",
      "date": "2007-08-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Improved process of type arguments of generic type and method parameters.\n- Reorganize codes in javacomplete#Complete()\n- Fixed case of \"new java.util.zip.ZipFile().|\""
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7548",
      "filename": "javacomplete.zip",
      "script_version": "0.76.6",
      "date": "2007-08-23",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Improved recognizing methods, ctors, and variable declarators declared in most common form.\n- Optimized code and fixed bugs."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7540",
      "filename": "javacomplete.zip",
      "script_version": "0.76.5",
      "date": "2007-08-21",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Optimized code: s:modeAndEXPR(), formalParameter(), and others.\n- Added quick recognizing fields or methods declared in most common form.\n- Fixed bug: \"foo().|\", \"getFoo().foo().|\", \"for (Enumeration entries = ; entries.|; )\".\n- Supported input contexts: \"((Object)o).|\", \"((Object)o).getClass().|\", \"new ZipFile(path).|\", \"(new String().)|\"."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7517",
      "filename": "javacomplete.zip",
      "script_version": "0.76.4.1",
      "date": "2007-08-17",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Made a major improvement of Reflection. REMEMBER to DELETE the old Reflection.class.\n- Support accessible nested classes from reflection.\n- Support import static members and import accessible nested classes.\n- Improved input contexts: \"int.class.toString().|\", \"list.toArray().|\".\n- Fixed recognition of \"this(|)\", \"method1(|)\"\n- Added the 'kind' letter to distinguish between classes and packages.\n- Fixed a bug when Reflection.java is in the path which contains space.\n- Better support for JSP."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7484",
      "filename": "javacomplete.zip",
      "script_version": "0.76.3",
      "date": "2007-08-10",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Make an improvement for JSP file.\n- Add an option 'searchdecl' set by javacomplete#SetSearchdeclMethod().\n- Clear cache when set options affecting classpath.\n- Improved DoGetPackageList() and s:GenerateImports().\n- Replace codes searching list of string with index().\n- Removed the unclear s:tokens and s:modifier_keywords in java_parser.\n- Add java_parser#GetSnapshot() and java_parser#Restore().\n- Fixed a bug when no top level class defined"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7468",
      "filename": "javacomplete.zip",
      "script_version": "0.76.2",
      "date": "2007-08-08",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Add inherited fields and methods to local class.\n- Combine members of local packages and loadable packages.\n- Add quick recognition of package or import. \n- Fix failing to list members of nested class.\n- Improved java_parser.\n- [Reflection] Return a modifier value as a string because it more than 32bit."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=7451",
      "filename": "javacomplete.zip",
      "script_version": "0.76.1",
      "date": "2007-08-05",
      "vim_version": "6.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "- Support new language features in JAVA 5 and above.\n- The embedded JAVA parser is full-featured now, adding supports for parsing statement, block or expression.\n- Java_parser.vim is an autoload script now.\n- Support JDK1.1.\n- Improve for 'this' or 'super'.\n- Support searching toplevel class in current directory, same package or in sourcepath.\n- Supports input context: \"StringLiteral\".|, \"int.|\", \"void.|\"\n- Add java compiler option, default 'javac'\n- Add JVM launcher option, default 'java'\n- Automatcally compile Reflection.java and place it to $HOME.\n- Easier to install and use."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6738",
      "filename": "javacomplete.zip",
      "script_version": "0.75beta",
      "date": "2007-02-13",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "\" \tAdd java_parser.vim.\n\" \tAdd b:sourcepath option.\n\" \tImprove recognition of classes defined in current buffer or in source path.\n\" \tSupport generating class information from tags instead of returning list directly."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6712",
      "filename": "javacomplete.zip",
      "script_version": "0.74",
      "date": "2007-02-03",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "Support jre1.2 (and above).\nSupport input context like \"boolean.class.|\"\nHandle java primitive types such as 'int'."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6701",
      "filename": "javacomplete.zip",
      "script_version": "0.73",
      "date": "2007-02-01",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "Fix bug that CLASSPATH not used when b:classpath or g:java_classpath not set.\nFix bug that call filter() without making a copy for incomplete.\nImprove recognition of declaration of this class"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6695",
      "filename": "javacomplete.zip",
      "script_version": "0.72",
      "date": "2007-01-31",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "Fix bugs in nested expression:\n\"System.out.println( str.| )\"\n\"System.out.println(str.charAt(| )\"\n\"for (int i = 0; i < str.|; i++)\""
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=6677",
      "filename": "javacomplete.zip",
      "script_version": "0.71",
      "date": "2007-01-28",
      "vim_version": "7.0",
      "author": {
        "user_id": "11701",
        "user_name": "fangcheng",
        "first_name": "fang",
        "last_name": "cheng",
        "email": "fangread at yahoo.com.cn",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
