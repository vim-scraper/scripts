{
  "script_id": "1545",
  "display_name": "abolish.vim",
  "summary": "Work with several variants of a word at once",
  "name": "abolish.vim",
  "script_type": "utility",
  "description": "This is a plugin over 3 years in the making that I've deferred releasing, primarily because it's so gosh darn hard to explain.  It's three superficially unrelated plugins in one that share a common theme: working with variants of a word.\n\nABBREVIATION\n\nI know how to spell separate.  I know how to spell desperate.  My fingers, however, have trouble distinguishing between the two, and I invariably have a 50 percent chance of typing seperate or desparate each time one of these comes up.  At first, I tried abbreviations:\n\niabbrev  seperate  separate\niabbrev desparate desperate \n\nBut this falls short at the beginning of a sentence.\n\niabbrev  Seperate  Separate\niabbrev Desparate Desperate \n\nTo be really thorough, we need uppercase too!\n\niabbrev  SEPERATE  SEPARATE\niabbrev DESPARATE DESPERATE \n\nOh, but consider the noun form, and the adverb form!\n\niabbrev  seperation  separation\niabbrev desparation desperation \niabbrev  seperately  separately\niabbrev desparately desperately \niabbrev  Seperation  separation\niabbrev Desparation Desperation \niabbrev  Seperately  Separately\niabbrev Desparately Desperately \niabbrev  SEPERATION  SEPARATION\niabbrev DESPARATION DESPERATION \niabbrev  SEPERATELY  SEPARATELY\niabbrev DESPARATELY DESPERATELY \n\nWait, there's also separates, separated, separating, separations, separator...\n\nAbolish.vim provides a simpler way.  The following one command produces 48 abbreviations including all of the above.\n\nAbolish {despa,sepe}rat{e,es,ed,ing,ely,ion,ions,or}  {despe,sepa}rat{}\n\nMy current configuration has 25 Abolish commands that create hundreds of corrections my fingers refuse to learn.\n\nSUBSTITUTION\n\nOne time I had an application that with a domain model called \"facilities\" that needed to be renamed to \"buildings\". So, a simple search and replace, right?\n\n:%s/facility/building/g\n\nOh, but the case variants!\n\n:%s/Facility/Building/g\n:%s/FACILITY/BUILDING/g\n\nWait, the plural is more than \"s\" so we need to get that too!\n\n:%s/facilities/buildings/g\n:%s/Facilities/Buildings/g\n:%s/FACILITIES/BUILDINGS/g\n\nAbolish.vim has your back.  One command to do all six, and you can repeat it with & too!\n\n:%Subvert/facilit{y,ies}/building{,s}/g\n\nYou can abbreviate it as :S, and it accepts the full range of flags including\nthings like c (confirm).\n\nThere's also a variant for searching and a variant for grepping.\n\nCOERCION\n\nWant to turn fooBar into foo_bar?  Press crs (coerce to snake_case).\nMixedCase, camelCase, snake_case, and UPPER_CASE are all just 3 keystrokes\naway.  These commands support repeat.vim (vimscript #2136).\n",
  "rating_total": "102",
  "rating_votes": "32",
  "downloads": "1302",
  "install_details": "Extract in ~/.vim or ~\\vimfiles.\n\nGrab the very latest from http://github.com/tpope/vim-abolish",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11499",
      "filename": "abolish.zip",
      "script_version": "1.0",
      "date": "2009-10-09",
      "vim_version": "7.0",
      "author": {
        "user_id": "9012",
        "user_name": "tpope",
        "first_name": "Tim",
        "last_name": "Pope",
        "email": "vimNOSPAM at tpope.org",
        "homepage": "http://tpo.pe/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
