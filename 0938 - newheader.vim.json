{
  "script_id": "938",
  "display_name": "newheader.vim",
  "summary": "Create function header comment according to a template",
  "name": "newheader.vim",
  "script_type": "utility",
  "description": "Just Another headerformatting script for C/C++. This one does not create headers conform some documenting standard but allows you to specify a template. The template may contain some keywords which are expanded. Start by pressing F7 while the cursor is on or a little above the function in question. If the script finds existing comments just above the function it will neatly format it into the template if the right keyword is found. Example (looking horrible in proportional fonts):\n\n\" Example _c_header template file:\n\" ==============================\n\n\" /****************************************************************************\n\"  *\n\"  * NAME:        name                                    (date)\n\"  *\n\"  * DESCRIPTION: text\n\"  *\n\"  * ARGUMENTS:   args\n\"  *\n\"  * RETURNS:     -\n\"  *\n\"  * PRE:         -\n\"  *\n\"  * POST:        -\n\"  ***************************************************************************/\n\" \n\n\" Suppose you have this function:\n\" ===============================\n\n\" /* \n\"  * This is just a comment that is long enough to show the features of\n\"  * newheader.vim. It will do some indenting for you and list your function\n\"  * arguments\n\"  */\n\" \n\" static void show_header( int width, int length,\n\"                          byte font, Language *language_selection,\n\"                      byte color )\n\" {\n\"      ....\n\" }\n\n\n\" Result\n\" ======\n\n\" Place the cursor one or more lines before the function and press F7. It\n\" gives you:\n\"\n\" /****************************************************************************\n\"  *\n\"  * NAME:        show_header                                    (2000 okt 27)\n\"  *\n\"  * DESCRIPTION: This is just a comment that is long enough to show the\n\"  *              features of newheader.vim. It will do some indenting for you\n\"  *              and list your function arguments\n\"  *\n\"  * ARGUMENTS:   width:\n\"  *              length:\n\"  *              font:\n\"  *              *language_selection:\n\"  *              color:\n\"  *\n\"  * RETURNS:     -\n\"  *\n\"  * PRE:         -\n\"  *\n\"  * POST:        -\n\"  ****************************************************************************/\n\" \n\" static void show_header( int width, int length,\n\"                          byte font, Language *language_selection,\n\"                      byte color )\n\" {\n\"      ....\n\" }\n\ndisclaimer:\nI'm using it a few years now, and it is a big timesaver. However, every new project requires me to do another generalisation on the script. If you think it may be usefull for you but produces odd results, drop me line.",
  "install_details": "Copy to your plugin dir. Creating a header is currently mapped to F7. A menu is created in the GUI, which may be deleted if you don't like that",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=2839",
      "filename": "newheader.vim",
      "script_version": "1.0",
      "date": "2004-03-17",
      "vim_version": "6.0",
      "author": {
        "user_id": "4777",
        "user_name": "erikj",
        "first_name": "erik",
        "last_name": "janssen",
        "email": "ejanssen@itmatters.nl",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
