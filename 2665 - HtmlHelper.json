{
  "script_id": "2665",
  "display_name": "HtmlHelper",
  "summary": "Html macros and mappings",
  "name": "HtmlHelper",
  "script_type": "ftplugin",
  "description": "\" Html macros and mappings for:\n\" ------------------------------------------\n\"\n\"    *  Closing        an opening tag\n\"    *  Wrapping     text with tags\n\"    *  Increasing    the weight of header tags (<h1>...)\n\"    *  Formatting    text inside a pair of tags\n\"    *  Rearranging  <tag> content </tag> vertically\n\"    *  Stripping       outer tags\n\"    *  'Spacing'       vertically the content of a pair of tags\n\"\n\" 1. Close an opening tag\n\" -----------------------\n\"\n\"     >> : <tag> newline </tag> (write quickly a second > after the first one)\n\"     >/ : <tag>         </tag>\n\"     <? : <?php             ?>\n\"\n\" 2. Wrapping:\n\" ------------\n\"\n\"         +-----------+-------------------+\n\"         | paragraph | WORD or selection |\n\" +-------+-----------+-------------------+\n\" | <ul>  |    @u     |        \\u         |\n\" | <ol>  |    @o     |        \\o         |\n\" | <p>   |    @p     |        \\p         |\n\" | <div> |    @d     |        \\d         |\n\" +-------+-----------+-------------------+\n\"\n\" Note: \\u and \\o work on fully selected lines only\n\"\n\" Note: mnemo for paragraphs and lines: wrap @ll\n\"\n\" Note: You can use a count with the \\ mappings\n\"\n\"              +------+-------------------+\n\"              | line | WORD or selection |\n\" +------------+------+-------------------+\n\" | <td>       |  @t  |        \\t         |\n\" | <a>        |  @a  |        \\a         |\n\" | <span>     |  @s  |        \\s         |\n\" | <h1>       |  @h  |        \\h         |\n\" | <li>       |  @l  |        \\l         |\n\" | <!-- -->   |  @c  |        \\c         |\n\" | <em>       |  @e  |        \\e         |\n\" | <strong>   |  @b  |        \\b         |\n\" +------------+------+-------------------+\n\"\n\" 3. Insert an image\n\" ------------------\n\"\n\"     @i (<img src='X' alt='' title='' />)\n\"\n\" 4. Set the class of a tag\n\" -------------------------\n\"\n\"     :Class ul         -> <ul>                 (default)\n\"     :Class ul bg_blue -> <ul class='bg_blue'>\n\"\n\" Note: Try using :C or :Cl or... instead of :Class. Depending on the\n\"       installed plugins, a shorter or longer abbreviation might work.\n\"\n\" Shortcuts: (:C shortcut)\n\"     d,   s,    u,  o,  h,  l,  t,  i,   e,  b\n\"     div, span, ul, ol, h1, li, td, img, em, strong\n\"\n\" Note: If you don't want to write a tag manually, you can use <tab>\n\"       after :Class to autocomplete your tag.\n\"       (put a space after :Class before hitting <tab>)\n\"\n\" 5. <hn -> <hn+1 (Use after a @h or \\h)\n\" --------------------------------------\n\"\n\"     @j (mnemo: j is just besides h on the keyboard)\n\"\n\" 6. gq inside a pair of tags\n\" ---------------------------\n\"\n\"     @g for standard tags\n\"     \\g for <!-- --> or <?php ?>\n\"\n\" 7. Rearrange <tag> content </tag> vertically\n\" --------------------------------------------\n\"\n\"     @r for standard tags\n\"     \\r for <!-- --> or <?php ?>\n\"\n\" 8. Strip outer tags\n\" -------------------\n\"\n\"     @x for standard tags\n\"     \\x for <!-- --> or <?php ?>\n\"\n\" 9. 'Space' vertically the content of a pair of tags\n\" ---------------------------------------------------\n\"\n\"     @m for standard tags        (mnemo: \n)\n\"     \\m for <!-- --> or <?php ?>\n\"\n\" A detailed help is in the comments of the file itself!",
  "rating_total": "0",
  "rating_votes": "0",
  "downloads": "355",
  "install_details": "HtmlHelper - Install in:\n\n              ~/.vim/ftplugin/html.vim\n       ln -s ~/.vim/ftplugin/html.vim phtml.vim\n       ln -s ~/.vim/ftplugin/html.vim xml.vim\n\nTabular.vim: (http://github.com/godlygeek/tabular/tree/master)\n\n             ~/.vim/autoload/tabular.vim\n             ~/.vim/after/plugin/myTabularMaps.vim (to be created, see above)\n             ~/.vim/plugin/Tabular.vim\n             ~/.vim/plugin/TabularMaps.vim",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11443",
      "filename": "html.vim.tar.gz",
      "script_version": "2.1",
      "date": "2009-09-27",
      "vim_version": "7.0",
      "author": {
        "user_id": "14686",
        "user_name": "Mitko",
        "first_name": "Dimitar",
        "last_name": "Dimitrov",
        "email": "mitkofr at yahoo.fr",
        "homepage": ""
      },
      "release_notes": "@e will now correctly use the class set with :C em ..."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11439",
      "filename": "html.vim",
      "script_version": "2.0",
      "date": "2009-09-27",
      "vim_version": "7.0",
      "author": {
        "user_id": "14686",
        "user_name": "Mitko",
        "first_name": "Dimitar",
        "last_name": "Dimitrov",
        "email": "mitkofr at yahoo.fr",
        "homepage": ""
      },
      "release_notes": "Changes:\n\n    @i -> <img> instead if <i> (not valid XHTML 1.1 strict)\n    @b -> <strong> instead of <b> (not valid XHTML 1.1 strict)\n    @e -> <em>\n\n    :Class can be invoked with these shortcuts now:\n\n    d,   s,    u,  o,  h,  l,  t,  i,   e,  b\n    div, span, ul, ol, h1, li, td, img, em, strong\n\n    Pointed out a limitation:\n\n    7@p won't work if one of the paragraphs starts with a one letter word\n    (ex: I). Same for <> 7 or another macro or on words.\n\n    TODO:\n\n    <fieldset> |  @f\n    <kbd>      |  @k\n    <noscript> |  @n\n    <var>      |  @v\n\n    <meta>     -> @m\n"
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10765",
      "filename": "html.vim.tar.gz",
      "script_version": "1.0",
      "date": "2009-06-07",
      "vim_version": "7.0",
      "author": {
        "user_id": "14686",
        "user_name": "Mitko",
        "first_name": "Dimitar",
        "last_name": "Dimitrov",
        "email": "mitkofr at yahoo.fr",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}
