{
  "script_id": "485",
  "name": "markjump.vim",
  "summary": "Code transversal functions, move to prev/next marker, insert/strip markers.",
  "script_type": "ftplugin",
  "description": "This is a normal PLUGIN not ftplugin.\n\nMarker chars are configurable.\nYou can define global or buffer variables to specify the marker chars for both left and right chars. Buffer vars if present are used before global chars \ng:L_Marker\nb:L_Marker\ng:R_Marker\nb:R_Marker\n\nThe default marker chars are the same as Luc Hermitte's bracketing.base.vim which is the same as Stephen Riehm's braketing macros. Which is to say «»\n\nIf you do not have digraphs enabled these chars are still easy to insert via \n<c-k><< which gives you  '«' and <c-k>>> which is '»' (far easier to use the included commands however)\n\n:MN        Search forward for the next occurance of marker chars\n:MP        Search backwards for the next occurance of marker chars\n:MI          Insert marker chars, usefull for <c-o>:MI text to have markers around it<cr>\n:MIV       Wrap the visual selection (single line) with marker chars\n:MA        Append marker chars (like a)\n:MAV     Same as :MIV\n:MS        Strip marker chars, positioning is a touch picky; place cursor in the markers and all is well.\n\nInsert mode mappings:\n<plug>MjMark         Defaults to `¡mark!`        Insert marker chars, cursor AFTER the marker chars.\n<plug>MjJump        Defaults to `¡jump!`        Jump to the next marker (as :MN)\n\nVISUAL mode mappings:\n<plug>MjMark         Defaults to `¡mark!`        Wrap marker chars around the selection. (as MIV)\n\nNOTE if you already have insert and or visual mappings for ¡mark!/¡jump! these will NOT be made.\n\nKey mappings:\n<plug>MjPrev           Defaults to <M-Insert> in normal, insert and visual.       Jumps to previous markers, as :MP\n<plug>MjNext             Defaults to <M-Del> in normal, insert and visual.        Jumps to next marker, as :MN\n<plug>MjInsMarker        Defaults to <M-m> in insert.       Shortcut for `<c-o>:MI ` Just hit <m-m>type your words<cr>\n\nIf there is gui and has menu adds the following plugin menu items:\nPlugin.markjump.Prev  Marker\nPlugin.markjump.Next Marker\nPlugin.markjump.Insert Marker\nPlugin.markjump.Append Marker\nPlugin.markjump.Strip Markers\n\nStrip markers mens to remove the marker chars from either side; cursor generally needs to be within the marker chars.\n\nThis script would not be what it is with out Luc Hermitte's input!",
  "install_details": "This may clash with other bracketing/mark jump type scripts; I've tried to minimise such colisions by giving way to existing mappings/commands. Even with existing scripts the commands defined in this script will probably be available, so you can at least take this for a test run to see if it meets your likes.\nInstall, drop in PLUGIN (not ftplugin) folder.\nUnistall, as easy as removing from your plugin folder. (and if you have made any maps to this you'll want to do something with those as well)\nTest drive:\ninstall, open a test file and :MI some text<cr>   then move cursor and play wiht :MN and :MP",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=1419",
      "filename": "markjump.vim",
      "script_version": "0.29",
      "date": "2002-11-14",
      "vim_version": "6.0",
      "author": {
        "user_id": "818",
        "user_name": "FeralOfFireTop",
        "first_name": "Robert",
        "last_name": "KellyIV",
        "email": "feral at eclecticwizard.com",
        "homepage": ""
      },
      "release_notes": "Initial upload"
    }
  ]
}