{
  "script_id": "2666",
  "display_name": "Mark -- Karkat",
  "summary": "Highlight several words in different colors simultaneously. (#1238 continued)",
  "name": "Mark--Karkat",
  "script_type": "utility",
  "description": "DESCRIPTION\nThis plugin adds mappings and a :Mark command to highlight several words in\ndifferent colors simultaneously, similar to the built-in 'hlsearch'\nhighlighting of search results and the * command. For example, when you\nare browsing a big program file, you could highlight multiple identifiers in\nparallel. This will make it easier to trace the source code.\n\nThis is a continuation of vimscript #1238 by Yuheng Xie, who apparently\ndoesn't maintain his original version anymore and cannot be reached via the\nemail address in his profile. This plugin offers the following advantages over\nthe original:\n- Much faster, all colored words can now be highlighted, no more clashes with\n  syntax highlighting (due to use of matchadd()). \n- Many bug fixes. \n- Jumps behave like the built-in search, including wrap and error messages. \n- Like the built-in commands, jumps take an optional [count] to quickly skip\n  over some marks. \n\nRELATED WORKS\n- MultipleSearch (vimscript #479) can highlight in a single window and in all\n  buffers, but still relies on the :syntax highlighting method, which is\n  slower and less reliable. \n- http://vim.wikia.com/wiki/Highlight_multiple_words offers control over the\n  color used by mapping the 1-9 keys on the numeric keypad, persistence, and\n  highlights only a single window. \n- highlight.vim (vimscript #1599) highlights lines or patterns of interest in\n  different colors, using mappings that start with CTRL-H and work on cword. \n\nHIGHLIGHTING\n<Leader>m\t\tMark the word under the cursor, similar to the star\n\t\t\tcommand. The next free highlight group is used. \n\t\t\tIf already on a mark: Clear the mark, like\n\t\t\t<Leader>n. \n{Visual}<Leader>m\tMark or unmark the visual selection. \n\n<Leader>r\t\tManually input a regular expression to mark. \n{Visual}<Leader>r\tDitto, based on the visual selection. \n\n<Leader>n\t\tClear the mark under the cursor.\n\t\t\tIf not on a mark: Disable all marks, similar to\n\t\t\t:nohlsearch. \n\n:Mark {pattern}\t\tMark or unmark {pattern}. \n:Mark\t\t\tDisable all marks, similar to :nohlsearch. Marks\n\t\t\twill automatically re-enable when a mark is added or\n\t\t\tremoved, or a search for marks is performed. \n:MarkClear\t\tClear all marks. In contrast to disabling marks, the\n\t\t\tactual mark information is cleared, the next mark will\n\t\t\tuse the first highlight group. This cannot be undone. \n\nSEARCHING\n[count]*         [count]#\n[count]<Leader>* [count]<Leader>#\n[count]<Leader>/ [count]<Leader>?\n\t\t\tUse these six keys to jump to the [count]'th next /\n\t\t\tprevious occurrence of a mark. \n\t\t\tYou could also use Vim's / and ? to search, since the\n\t\t\tmark patterns are (optionally, see configuration)\n\t\t\tadded to the search history, too. \n\n            Cursor over mark                    Cursor not over mark\n ---------------------------------------------------------------------------\n  <Leader>* Jump to the next occurrence of      Jump to the next occurrence of\n            current mark, and remember it       \"last mark\". \n            as \"last mark\". \n\n  <Leader>/ Jump to the next occurrence of      Same as left. \n            ANY mark. \n\n   *        If <Leader>* is the most recently   Do Vim's original * command. \n            used, do a <Leader>*; otherwise\n            (<Leader>/ is the most recently\n            used), do a <Leader>/. \n\nMARK PERSISTENCE\nThe marks can be kept and restored across Vim sessions, using the viminfo\nfile. For this to work, the \"!\" flag must be part of the 'viminfo' setting: \n    set viminfo+=!  \" Save and restore global variables. \n:MarkLoad\t\tRestore the marks from the previous Vim session. All\n\t\t\tcurrent marks are discarded. \n:MarkSave\t\tSave the currently defined marks (or clear the\n\t\t\tpersisted marks if no marks are currently defined) for\n\t\t\tuse in a future Vim session. ",
  "install_details": "INSTALLATION\nThis script is packaged as a vimball. If you have the \"gunzip\" decompressor\nin your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress\nthe archive first, e.g. using WinZip. Inside Vim, install by sourcing the\nvimball or via the :UseVimball command. \n    vim mark.vba.gz\n    :so %\nTo uninstall, use the :RmVimball command. \n\nDEPENDENCIES\n- Requires Vim 7.1 with \"matchadd()\", or Vim 7.2 or higher. \n\nCONFIGURATION\nYou may define your own colors or more than the default 6 highlightings in\nyour vimrc file (or anywhere before this plugin is sourced), in the following\nform (where N = 1..): \n    highlight MarkWordN ctermbg=Cyan ctermfg=Black guibg=#8CCBEA guifg=Black\nHigher numbers always take precedence and are displayed above lower ones. \n\nThe search type highlighting (in the search message) can be changed via: \n    highlight link SearchSpecialSearchType MoreMsg\n\nBy default, any marked words are also added to the search (/) and input (@)\nhistory; if you don't want that, remove the corresponding symbols from: \n    let g:mwHistAdd = '/@'\nTo enable the automatic restore of marks from a previous Vim session:\n    let g:mwAutoLoadMarks = 1\nTo turn off the automatic persistence of marks across Vim sessions: \n    let g:mwAutoSaveMarks = 0\nYou can still explicitly save marks via :MarkSave. \n\nYou can use different mappings by mapping to the <Plug>Mark... mappings (use\n\":map <Plug>Mark\" to list them all) before this plugin is sourced. \n\nThere are no default mappings for toggling all marks and for the :MarkClear\ncommand, but you can define some yourself: \n    nmap <Leader>M <Plug>MarkToggle\n    nmap <Leader>N <Plug>MarkAllClear\n\nTo remove the default overriding of * and #, use: \n    nmap <Plug>IgnoreMarkSearchNext <Plug>MarkSearchNext\n    nmap <Plug>IgnoreMarkSearchPrev <Plug>MarkSearchPrev",
  "versions": [
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=15603",
      "filename": "mark.vba.gz",
      "script_version": "2.5.0",
      "date": "2011-05-07",
      "vim_version": "7.2",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- ENH: Add explicit mark persistence via :MarkLoad and :MarkSave commands and automatic persistence via the g:mwAutoLoadMarks and g:mwAutoSaveMarks configuration flags. (Request from Mun Johl, 16-Apr-2010) \n- Expose toggling of mark display (keeping the mark patterns) via new <Plug>MarkToggle mapping. Offer :MarkClear command as a replacement for the old argumentless :Mark command, which now just disables, but not clears all marks. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=15477",
      "filename": "mark.vba.gz",
      "script_version": "2.4.4",
      "date": "2011-04-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- BUG: Include trailing newline character in check for current mark, so that a mark that matches the entire line (e.g. created by V<Leader>m) can be cleared via <Leader>n. Thanks to ping for reporting this. \n- FIX: On overlapping marks, mark#CurrentMark() returned the lowest, not the highest visible mark. So on overlapping marks, the one that was not visible at the cursor position was removed; very confusing! Use reverse iteration order.  \n- FIX: To avoid an arbitrary ordering of highlightings when the highlighting group names roll over, and to avoid order inconsistencies across different windows and tabs, we assign a different priority based on the highlighting group. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=15459",
      "filename": "mark.vba.gz",
      "script_version": "2.4.3",
      "date": "2011-04-16",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- Avoid losing the mark highlightings on :syn on or :colorscheme commands. Thanks to Zhou YiChao for alerting me to this issue and suggesting a fix. \n- Made the script more robust when somehow no highlightings have been defined or when the window-local reckoning of match IDs got lost. I had very occasionally encountered such script errors in the past. \n- Made global housekeeping variables script-local, only g:mwHistAdd is used for configuration. \n- FIX: Capturing the visual selection could still clobber the blockwise yank mode of the unnamed register. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=14741",
      "filename": "mark.vba.gz",
      "script_version": "2.4.1",
      "date": "2011-01-13",
      "vim_version": "7.2",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- FIX: Using a named register for capturing the visual selection on {Visual}<Leader>m and {Visual}<Leader>r clobbered the unnamed register. Now using the unnamed register. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=13424",
      "filename": "mark.vba.gz",
      "script_version": "2.4.0",
      "date": "2010-07-29",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "ENH: The MarkSearch mappings (<Leader>[*#/?]) add the original cursor position to the jump list, like the built-in [/?*#nN] commands. This allows to use the regular jump commands for mark matches, like with regular search matches. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=12423",
      "filename": "mark.vba.gz",
      "script_version": "2.3.3",
      "date": "2010-02-19",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- BUG: Clearing of an accidental zero-width match (e.g. via :Mark \\zs) results in endless loop. Thanks to Andy Wokula for the patch. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11744",
      "filename": "mark.vba.gz",
      "script_version": "2.3.2",
      "date": "2009-11-17",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "BUG: Creation of literal pattern via '\\V' in {Visual}<Leader>m mapping collided with individual escaping done in <Leader>m mapping so that an escaped '\\*' would be interpreted as a multi item when both modes are used for marking. Thanks to Andy Wokula for the patch. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=11122",
      "filename": "mark.vba.gz",
      "script_version": "2.3.1",
      "date": "2009-08-03",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- Now working correctly when 'smartcase' is set. All mappings and the :Mark command use 'ignorecase', but not 'smartcase'. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10956",
      "filename": "mark.vba.gz",
      "script_version": "2.3.0",
      "date": "2009-07-06",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- All jump commands now take an optional [count], so you can quickly skip over some marks, as with the built-in */# and n/N commands. For this, the entire core search algorithm has been rewritten. The script's logic has been simplified through the use of Vim 7 features like Lists. \n- Now also printing a Vim-alike search error message when 'nowrapscan' is set. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10947",
      "filename": "mark.vba.gz",
      "script_version": "2.2.0",
      "date": "2009-07-05",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "- Split off functions into autoload script. \n- Initialization of global variables and autocommands is now done lazily on\n  the first use, not during loading of the plugin. This reduces Vim startup\n  time and footprint as long as the functionality isn't yet used. \n- Split off documentation into separate help file. Now packaging as VimBall."
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10928",
      "filename": "mark.vim",
      "script_version": "2.1.0",
      "date": "2009-07-02",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "THIS VERSION REQUIRES VIM 7.2 / 7.1 with patches, BUT IT'S WORTH UPDATING! \n- Replaced highlighting via :syntax with matchadd() / matchdelete(). This\n  requires Vim 7.2 / 7.1 with patches. This method is faster, there are no\n  more clashes with syntax highlighting (:match always has preference), and\n  the background highlighting does not disappear under 'cursorline'. \n- Using winrestcmd() to fix effects of :windo: By entering a window, its\n  height is potentially increased from 0 to 1. \n- Handling multiple tabs by calling s:UpdateScope() on the TabEnter event. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10774",
      "filename": "mark.vim",
      "script_version": "2.0.0",
      "date": "2009-06-08",
      "vim_version": "7.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "THIS VERSION REQUIRES VIM 7.0! \n- Now using Vim List for g:mwWord and thus requiring Vim 7. g:mwCycle is now zero-based, but the syntax groups \"MarkWordx\" are still one-based. \n- Factored :syntax operations out of s:DoMark() and s:UpdateMark() so that they can all be done in a single :windo. \n- Normal mode <Plug>MarkSet now has the same semantics as its visual mode cousin: If the cursor is on an existing mark, the mark is removed. Beforehand, one could only remove a visually selected mark via again selecting it. Now, one simply can invoke the mapping when on such a mark. "
    },
    {
      "url": "http://www.vim.org/scripts/download_script.php?src_id=10766",
      "filename": "mark.vim",
      "script_version": "1.6.1",
      "date": "2009-06-07",
      "vim_version": "6.0",
      "author": {
        "user_id": "9713",
        "user_name": "inkarkat",
        "first_name": "Ingo",
        "last_name": "Karkat",
        "email": "ingo@karkat.de",
        "homepage": "http://ingo-karkat.de/"
      },
      "release_notes": "Initial upload"
    }
  ]
}
